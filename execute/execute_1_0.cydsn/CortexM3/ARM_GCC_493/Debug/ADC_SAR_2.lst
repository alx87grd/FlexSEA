ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_SAR_2_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_SAR_2_CalcGain, %function
  23              	ADC_SAR_2_CalcGain:
  24              	.LFB10:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_2.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * File Name: ADC_SAR_2.c
   3:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #include "ADC_SAR_2.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #include "ADC_SAR_2_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_2.c **** static void ADC_SAR_2_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /***************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 2


  33:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_2.c **** uint8 ADC_SAR_2_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int32 ADC_SAR_2_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_2.c **** volatile int16 ADC_SAR_2_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  to zero before call of ADC_SAR_2_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Init() and ADC_SAR_2_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
  76:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_initVar == 0u)
  79:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_Init();
  81:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_initVar = 1u;
  82:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_Enable();
  84:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
  85:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 3


  90:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_Start().
  95:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 108:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyIntSetPriority(ADC_SAR_2_INTC_NUMBER, ADC_SAR_2_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (void)CyIntSetVector(ADC_SAR_2_INTC_NUMBER, &ADC_SAR_2_ISR);
 118:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR1_REG |= ADC_SAR_2_SAR_IRQ_MASK_EN | ADC_SAR_2_SAR_IRQ_MODE_EDGE;
 122:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 123:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SetResolution(ADC_SAR_2_DEFAULT_RESOLUTION);
 125:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = 0;
 126:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 127:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 145:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 4


 147:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     enableInterrupts = CyEnterCriticalSection();
 148:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_PWRMGR_SAR_REG |= ADC_SAR_2_ACT_PWR_SAR_EN;
 151:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_2.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_STBY_PWRMGR_SAR_REG |= ADC_SAR_2_STBY_PWR_SAR_EN;
 154:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_PWRMGR_CLK_REG |= ADC_SAR_2_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG |= ADC_SAR_2_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg = ADC_SAR_2_SAR_CSR3_REG;
 163:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= ADC_SAR_2_SAR_EN_BUF_VCM_EN;
 164:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if((ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         tmpReg &= (uint8)~ADC_SAR_2_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         tmpReg |= ADC_SAR_2_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR3_REG = tmpReg;
 172:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR6_REG = ADC_SAR_2_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG &= (uint8)~ADC_SAR_2_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG |= ADC_SAR_2_SAR_DLY_INC;
 193:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG |= ADC_SAR_2_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR5_REG &= (uint8)~ADC_SAR_2_SAR_SEL_CSEL_DFT_CHAR;
 203:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 5


 204:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_2_DEFAULT_POWER << ADC_SAR_2_SAR_POWER_SHIFT)
 207:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_2_DEFAULT_REFERENCE != ADC_SAR_2__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         | ADC_SAR_2_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_TR0_REG = ADC_SAR_2_SAR_CAP_TRIM_2;
 219:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CLK_REG |= ADC_SAR_2_SAR_MX_CLK_EN;
 222:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyIntClearPending(ADC_SAR_2_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyExitCriticalSection(enableInterrupts);
 231:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 232:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 250:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     enableInterrupts = CyEnterCriticalSection();
 252:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_SOF_START_CONV;
 255:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_2_ACT_PWR_SAR_EN;
 257:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_2_STBY_PWR_SAR_EN;
 259:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 6


 261:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(ADC_SAR_2_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_2_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_2_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     CyExitCriticalSection(enableInterrupts);
 267:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 269:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 292:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     power &= ADC_SAR_2_SAR_API_POWER_MASK;
 296:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg = ADC_SAR_2_SAR_CSR0_REG & (uint8)~ADC_SAR_2_SAR_POWER_MASK;
 299:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= (uint8)(power << ADC_SAR_2_SAR_POWER_SHIFT);
 300:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = tmpReg;
 301:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 302:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 7


 318:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 342:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     switch (resolution)
 346:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_12BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 349:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 350:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_10BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 352:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 353:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_8BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 355:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 356:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             tmpReg = ADC_SAR_2_SAR_RESOLUTION_12BIT | ADC_SAR_2_SAR_SAMPLE_WIDTH;
 358:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             CYASSERT(0u != 0u);
 360:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 361:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR2_REG = tmpReg;
 363:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_2.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_CalcGain(resolution);
 366:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 367:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Function Name: ADC_SAR_2_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ********************************************************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 8


 375:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  ADC_SAR_2_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     void ADC_SAR_2_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 403:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)  /* If software triggered mode 
 404:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 407:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR0_REG |= ADC_SAR_2_SAR_SOF_START_CONV;
 409:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 410:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Function Name: ADC_SAR_2_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 427:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 9


 432:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     void ADC_SAR_2_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 437:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_SAR_CSR0_REG &= (uint8)~ADC_SAR_2_SAR_SOF_START_CONV;
 439:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #if(ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__FREE_RUNNING)  /* If software triggered mode 
 441:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             ADC_SAR_2_SAR_CSR0_REG |= ADC_SAR_2_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 446:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_2.c **** #endif /* End ADC_SAR_2_DEFAULT_CONV_MODE != ADC_SAR_2__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   ADC_SAR_2_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   ADC_SAR_2_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_2.c **** uint8 ADC_SAR_2_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 477:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 481:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         status = ADC_SAR_2_SAR_CSR1_REG & ADC_SAR_2_SAR_EOF_1;
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     } while ((status != ADC_SAR_2_SAR_EOF_1) && (retMode == ADC_SAR_2_WAIT_FOR_RESULT));
 483:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(status == ADC_SAR_2_SAR_EOF_1)
 485:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CyDelayUs(1u);
 488:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 10


 489:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         CY_GET_REG8(ADC_SAR_2_SAR_CSR1_PTR);
 490:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return(status);
 493:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 494:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int8 ADC_SAR_2_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 522:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int8)ADC_SAR_2_SAR_WRK0_REG - (int8)ADC_SAR_2_shift);
 523:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 524:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 11


 546:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int16 ADC_SAR_2_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 552:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     res = CY_GET_REG16(ADC_SAR_2_SAR_WRK_PTR);
 555:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int16)res - ADC_SAR_2_shift );
 557:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 558:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetOffset
 562:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC offset, which is used by ADC_SAR_2_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_CountsTo_mVolts(), and ADC_SAR_2_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_2.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  The ADC_SAR_2_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Affects the ADC_SAR_2_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_CountsTo_mVolts, ADC_SAR_2_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 584:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 587:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = offset;
 588:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 589:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 12


 603:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_2.c **** static void ADC_SAR_2_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 620:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 0FD0     		beq	.L6
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 06D1     		bne	.L7
  42 000e 02E0     		b	.L5
  43              	.L4:
 621:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_12BIT;
  44              		.loc 1 623 0
  45 0010 4FF48052 		mov	r2, #4096
  46 0014 09E0     		b	.L3
  47              	.L5:
  48              	.LVL1:
 624:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 630:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_10BIT;
 632:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 13


 637:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 638:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         case (uint8)ADC_SAR_2__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = (int32)ADC_SAR_2_SAR_WRK_MAX_8BIT;
  49              		.loc 1 639 0
  50 0016 4FF48072 		mov	r2, #256
 640:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = ADC_SAR_2_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
  51              		.loc 1 645 0
  52 001a 06E0     		b	.L3
  53              	.LVL2:
  54              	.L7:
 646:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             counts = 0;
 648:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                  (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             CYASSERT(0u != 0u);
  55              		.loc 1 653 0
  56 001c 0020     		movs	r0, #0
  57              	.LVL3:
  58 001e FFF7FEFF 		bl	CyHalt
  59              	.LVL4:
 647:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
  60              		.loc 1 647 0
  61 0022 0022     		movs	r2, #0
  62 0024 01E0     		b	.L3
  63              	.LVL5:
  64              	.L6:
 631:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             #if(!((ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
  65              		.loc 1 631 0
  66 0026 4FF48062 		mov	r2, #1024
  67              	.LVL6:
  68              	.L3:
 654:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 655:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPerVolt = 0; /* Clear obsolete variable */
  69              		.loc 1 656 0
  70 002a 0021     		movs	r1, #0
  71 002c 094B     		ldr	r3, .L9
  72 002e 1980     		strh	r1, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = (((counts * ADC_SAR_2_10MV_COUNTS) +
  73              		.loc 1 658 0
  74 0030 42F21073 		movw	r3, #10000
  75 0034 03FB02F3 		mul	r3, r3, r2
  76 0038 03F6C413 		addw	r3, r3, #2500
 659:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                         ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV * 2))
  77              		.loc 1 659 0
  78 003c 064A     		ldr	r2, .L9+4
  79              	.LVL7:
  80 003e 82FB0302 		smull	r0, r2, r2, r3
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 14


  81 0042 DB17     		asrs	r3, r3, #31
  82 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                         ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_2_DEFAULT_REF_VOLTAGE_MV * 2))
  83              		.loc 1 658 0
  84 0048 044A     		ldr	r2, .L9+8
  85 004a 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 661:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #if( (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_2.c ****          (ADC_SAR_2_DEFAULT_RANGE == ADC_SAR_2__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_shift = 0;
  86              		.loc 1 664 0
  87 004c 044B     		ldr	r3, .L9+12
  88 004e 1980     		strh	r1, [r3]	@ movhi
  89 0050 08BD     		pop	{r3, pc}
  90              	.L10:
  91 0052 00BF     		.align	2
  92              	.L9:
  93 0054 00000000 		.word	ADC_SAR_2_countsPerVolt
  94 0058 AD8BDB68 		.word	1759218605
  95 005c 00000000 		.word	ADC_SAR_2_countsPer10Volt
  96 0060 00000000 		.word	ADC_SAR_2_shift
  97              		.cfi_endproc
  98              	.LFE10:
  99              		.size	ADC_SAR_2_CalcGain, .-ADC_SAR_2_CalcGain
 100              		.section	.text.ADC_SAR_2_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	ADC_SAR_2_Enable
 103              		.thumb
 104              		.thumb_func
 105              		.type	ADC_SAR_2_Enable, %function
 106              	ADC_SAR_2_Enable:
 107              	.LFB2:
 144:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 108              		.loc 1 144 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 38B5     		push	{r3, r4, r5, lr}
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 3, -16
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 147:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 118              		.loc 1 147 0
 119 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 120              	.LVL8:
 121 0006 0446     		mov	r4, r0
 122              	.LVL9:
 150:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 123              		.loc 1 150 0
 124 0008 194A     		ldr	r2, .L13
 125 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 126 000c 43F00203 		orr	r3, r3, #2
 127 0010 1370     		strb	r3, [r2]
 153:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 15


 128              		.loc 1 153 0
 129 0012 1032     		adds	r2, r2, #16
 130 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 131 0016 43F00203 		orr	r3, r3, #2
 132 001a 1370     		strb	r3, [r2]
 162:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= ADC_SAR_2_SAR_EN_BUF_VCM_EN;
 133              		.loc 1 162 0
 134 001c 02F5AA52 		add	r2, r2, #5440
 135 0020 1032     		adds	r2, r2, #16
 136 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 137              	.LVL10:
 169:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* ADC_SAR_2_DEFAULT_REFERENCE == ADC_SAR_2__EXT_REF */
 138              		.loc 1 169 0
 139 0024 43F00303 		orr	r3, r3, #3
 140              	.LVL11:
 171:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 141              		.loc 1 171 0
 142 0028 1370     		strb	r3, [r2]
 182:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         #else /* INTREF Bypassed of External */
 143              		.loc 1 182 0
 144 002a 1822     		movs	r2, #24
 145 002c 114B     		ldr	r3, .L13+4
 146              	.LVL12:
 147 002e 1A70     		strb	r2, [r3]
 148              	.LVL13:
 190:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 149              		.loc 1 190 0
 150 0030 013B     		subs	r3, r3, #1
 151 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 152 0034 02F0BF02 		and	r2, r2, #191
 153 0038 1A70     		strb	r2, [r3]
 200:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else /* for <500ksps */
 154              		.loc 1 200 0
 155 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 156 003c 42F00302 		orr	r2, r2, #3
 157 0040 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 158              		.loc 1 206 0
 159 0042 0E22     		movs	r2, #14
 160 0044 053B     		subs	r3, r3, #5
 161 0046 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 162              		.loc 1 218 0
 163 0048 0225     		movs	r5, #2
 164 004a A3F59753 		sub	r3, r3, #4832
 165 004e 123B     		subs	r3, r3, #18
 166 0050 1D70     		strb	r5, [r3]
 221:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 167              		.loc 1 221 0
 168 0052 094A     		ldr	r2, .L13+8
 169 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 170 0056 43F00803 		orr	r3, r3, #8
 171 005a 1370     		strb	r3, [r2]
 223:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 172              		.loc 1 223 0
 173 005c 0A20     		movs	r0, #10
 174 005e FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 16


 175              	.LVL14:
 227:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 176              		.loc 1 227 0
 177 0062 064B     		ldr	r3, .L13+12
 178 0064 1D60     		str	r5, [r3]
 230:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 179              		.loc 1 230 0
 180 0066 2046     		mov	r0, r4
 181 0068 FFF7FEFF 		bl	CyExitCriticalSection
 182              	.LVL15:
 183 006c 38BD     		pop	{r3, r4, r5, pc}
 184              	.LVL16:
 185              	.L14:
 186 006e 00BF     		.align	2
 187              	.L13:
 188 0070 AB430040 		.word	1073759147
 189 0074 0E590040 		.word	1073764622
 190 0078 2F5B0040 		.word	1073765167
 191 007c 80E200E0 		.word	-536812928
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	ADC_SAR_2_Enable, .-ADC_SAR_2_Enable
 195              		.section	.text.ADC_SAR_2_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	ADC_SAR_2_Stop
 198              		.thumb
 199              		.thumb_func
 200              		.type	ADC_SAR_2_Stop, %function
 201              	ADC_SAR_2_Stop:
 202              	.LFB3:
 249:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 enableInterrupts;
 203              		.loc 1 249 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 251:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 211              		.loc 1 251 0
 212 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 213              	.LVL17:
 254:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC block in Active Power Mode */
 214              		.loc 1 254 0
 215 0006 0A4A     		ldr	r2, .L17
 216 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 217 000a 03F0FE03 		and	r3, r3, #254
 218 000e 1370     		strb	r3, [r2]
 256:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Disable the SAR ADC in Standby Power Mode */
 219              		.loc 1 256 0
 220 0010 A2F5AA52 		sub	r2, r2, #5440
 221 0014 1D3A     		subs	r2, r2, #29
 222 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 223 0018 03F0FD03 		and	r3, r3, #253
 224 001c 1370     		strb	r3, [r2]
 258:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 17


 225              		.loc 1 258 0
 226 001e 1032     		adds	r2, r2, #16
 227 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 228 0022 03F0FD03 		and	r3, r3, #253
 229 0026 1370     		strb	r3, [r2]
 266:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 230              		.loc 1 266 0
 231 0028 FFF7FEFF 		bl	CyExitCriticalSection
 232              	.LVL18:
 233 002c 08BD     		pop	{r3, pc}
 234              	.L18:
 235 002e 00BF     		.align	2
 236              	.L17:
 237 0030 08590040 		.word	1073764616
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	ADC_SAR_2_Stop, .-ADC_SAR_2_Stop
 241              		.section	.text.ADC_SAR_2_SetPower,"ax",%progbits
 242              		.align	2
 243              		.global	ADC_SAR_2_SetPower
 244              		.thumb
 245              		.thumb_func
 246              		.type	ADC_SAR_2_SetPower, %function
 247              	ADC_SAR_2_SetPower:
 248              	.LFB4:
 291:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 249              		.loc 1 291 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL19:
 295:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 255              		.loc 1 295 0
 256 0000 00F00300 		and	r0, r0, #3
 257              	.LVL20:
 298:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     tmpReg |= (uint8)(power << ADC_SAR_2_SAR_POWER_SHIFT);
 258              		.loc 1 298 0
 259 0004 034A     		ldr	r2, .L20
 260 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 261 0008 03F03F03 		and	r3, r3, #63
 262              	.LVL21:
 299:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_SAR_CSR0_REG = tmpReg;
 263              		.loc 1 299 0
 264 000c 43EA8010 		orr	r0, r3, r0, lsl #6
 265              	.LVL22:
 300:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 266              		.loc 1 300 0
 267 0010 1070     		strb	r0, [r2]
 268 0012 7047     		bx	lr
 269              	.L21:
 270              		.align	2
 271              	.L20:
 272 0014 08590040 		.word	1073764616
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	ADC_SAR_2_SetPower, .-ADC_SAR_2_SetPower
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 18


 276              		.section	.text.ADC_SAR_2_SetResolution,"ax",%progbits
 277              		.align	2
 278              		.global	ADC_SAR_2_SetResolution
 279              		.thumb
 280              		.thumb_func
 281              		.type	ADC_SAR_2_SetResolution, %function
 282              	ADC_SAR_2_SetResolution:
 283              	.LFB5:
 341:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 tmpReg;
 284              		.loc 1 341 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              	.LVL23:
 289 0000 10B5     		push	{r4, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 293 0002 0446     		mov	r4, r0
 345:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 294              		.loc 1 345 0
 295 0004 0A28     		cmp	r0, #10
 296 0006 0DD0     		beq	.L27
 297 0008 0C28     		cmp	r0, #12
 298 000a 02D0     		beq	.L25
 299 000c 0828     		cmp	r0, #8
 300 000e 04D1     		bne	.L28
 301 0010 01E0     		b	.L26
 302              	.L25:
 348:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 303              		.loc 1 348 0
 304 0012 C222     		movs	r2, #194
 305 0014 07E0     		b	.L24
 306              	.L26:
 307              	.LVL24:
 354:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 308              		.loc 1 354 0
 309 0016 4222     		movs	r2, #66
 355:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         default:
 310              		.loc 1 355 0
 311 0018 05E0     		b	.L24
 312              	.LVL25:
 313              	.L28:
 359:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 314              		.loc 1 359 0
 315 001a 0020     		movs	r0, #0
 316              	.LVL26:
 317 001c FFF7FEFF 		bl	CyHalt
 318              	.LVL27:
 357:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 319              		.loc 1 357 0
 320 0020 C222     		movs	r2, #194
 321 0022 00E0     		b	.L24
 322              	.LVL28:
 323              	.L27:
 351:.\Generated_Source\PSoC5/ADC_SAR_2.c ****             break;
 324              		.loc 1 351 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 19


 325 0024 8222     		movs	r2, #130
 326              	.LVL29:
 327              	.L24:
 362:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 328              		.loc 1 362 0
 329 0026 034B     		ldr	r3, .L30
 330 0028 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 331              		.loc 1 365 0
 332 002a 2046     		mov	r0, r4
 333 002c FFF7FEFF 		bl	ADC_SAR_2_CalcGain
 334              	.LVL30:
 335 0030 10BD     		pop	{r4, pc}
 336              	.L31:
 337 0032 00BF     		.align	2
 338              	.L30:
 339 0034 0A590040 		.word	1073764618
 340              		.cfi_endproc
 341              	.LFE5:
 342              		.size	ADC_SAR_2_SetResolution, .-ADC_SAR_2_SetResolution
 343              		.section	.text.ADC_SAR_2_Init,"ax",%progbits
 344              		.align	2
 345              		.global	ADC_SAR_2_Init
 346              		.thumb
 347              		.thumb_func
 348              		.type	ADC_SAR_2_Init, %function
 349              	ADC_SAR_2_Init:
 350              	.LFB1:
 107:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 351              		.loc 1 107 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 08B5     		push	{r3, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 3, -8
 358              		.cfi_offset 14, -4
 116:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         (void)CyIntSetVector(ADC_SAR_2_INTC_NUMBER, &ADC_SAR_2_ISR);
 359              		.loc 1 116 0
 360 0002 0120     		movs	r0, #1
 361 0004 0721     		movs	r1, #7
 362 0006 FFF7FEFF 		bl	CyIntSetPriority
 363              	.LVL31:
 117:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif   /* End ADC_SAR_2_IRQ_REMOVE */
 364              		.loc 1 117 0
 365 000a 0120     		movs	r0, #1
 366 000c 0749     		ldr	r1, .L34
 367 000e FFF7FEFF 		bl	CyIntSetVector
 368              	.LVL32:
 121:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 369              		.loc 1 121 0
 370 0012 074A     		ldr	r2, .L34+4
 371 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 372 0016 43F00603 		orr	r3, r3, #6
 373 001a 1370     		strb	r3, [r2]
 124:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = 0;
 374              		.loc 1 124 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 20


 375 001c 0C20     		movs	r0, #12
 376 001e FFF7FEFF 		bl	ADC_SAR_2_SetResolution
 377              	.LVL33:
 125:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 378              		.loc 1 125 0
 379 0022 0022     		movs	r2, #0
 380 0024 034B     		ldr	r3, .L34+8
 381 0026 1A80     		strh	r2, [r3]	@ movhi
 382 0028 08BD     		pop	{r3, pc}
 383              	.L35:
 384 002a 00BF     		.align	2
 385              	.L34:
 386 002c 00000000 		.word	ADC_SAR_2_ISR
 387 0030 09590040 		.word	1073764617
 388 0034 00000000 		.word	ADC_SAR_2_offset
 389              		.cfi_endproc
 390              	.LFE1:
 391              		.size	ADC_SAR_2_Init, .-ADC_SAR_2_Init
 392              		.section	.text.ADC_SAR_2_Start,"ax",%progbits
 393              		.align	2
 394              		.global	ADC_SAR_2_Start
 395              		.thumb
 396              		.thumb_func
 397              		.type	ADC_SAR_2_Start, %function
 398              	ADC_SAR_2_Start:
 399              	.LFB0:
  75:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 400              		.loc 1 75 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 08B5     		push	{r3, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 408              		.loc 1 78 0
 409 0002 054B     		ldr	r3, .L39
 410 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0006 23B9     		cbnz	r3, .L37
  80:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_initVar = 1u;
 412              		.loc 1 80 0
 413 0008 FFF7FEFF 		bl	ADC_SAR_2_Init
 414              	.LVL34:
  81:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 415              		.loc 1 81 0
 416 000c 0122     		movs	r2, #1
 417 000e 024B     		ldr	r3, .L39
 418 0010 1A70     		strb	r2, [r3]
 419              	.L37:
  83:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 420              		.loc 1 83 0
 421 0012 FFF7FEFF 		bl	ADC_SAR_2_Enable
 422              	.LVL35:
 423 0016 08BD     		pop	{r3, pc}
 424              	.L40:
 425              		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 21


 426              	.L39:
 427 0018 00000000 		.word	.LANCHOR0
 428              		.cfi_endproc
 429              	.LFE0:
 430              		.size	ADC_SAR_2_Start, .-ADC_SAR_2_Start
 431              		.section	.text.ADC_SAR_2_IsEndConversion,"ax",%progbits
 432              		.align	2
 433              		.global	ADC_SAR_2_IsEndConversion
 434              		.thumb
 435              		.thumb_func
 436              		.type	ADC_SAR_2_IsEndConversion, %function
 437              	ADC_SAR_2_IsEndConversion:
 438              	.LFB6:
 476:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint8 status;
 439              		.loc 1 476 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL36:
 444 0000 10B5     		push	{r4, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 448              	.L43:
 481:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     } while ((status != ADC_SAR_2_SAR_EOF_1) && (retMode == ADC_SAR_2_WAIT_FOR_RESULT));
 449              		.loc 1 481 0 discriminator 2
 450 0002 074B     		ldr	r3, .L46
 451 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452              	.LVL37:
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 453              		.loc 1 482 0 discriminator 2
 454 0006 13F00104 		ands	r4, r3, #1
 455 000a 01D1     		bne	.L42
 482:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* If convertion complete, wait until EOF bit released */
 456              		.loc 1 482 0 is_stmt 0 discriminator 1
 457 000c 0028     		cmp	r0, #0
 458 000e F8D0     		beq	.L43
 459              	.L42:
 484:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 460              		.loc 1 484 0 is_stmt 1
 461 0010 24B1     		cbz	r4, .L44
 487:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 462              		.loc 1 487 0
 463 0012 0120     		movs	r0, #1
 464              	.LVL38:
 465 0014 FFF7FEFF 		bl	CyDelayUs
 466              	.LVL39:
 489:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 467              		.loc 1 489 0
 468 0018 014B     		ldr	r3, .L46
 469 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 470              	.L44:
 493:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 471              		.loc 1 493 0
 472 001c 2046     		mov	r0, r4
 473 001e 10BD     		pop	{r4, pc}
 474              	.L47:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 22


 475              		.align	2
 476              	.L46:
 477 0020 09590040 		.word	1073764617
 478              		.cfi_endproc
 479              	.LFE6:
 480              		.size	ADC_SAR_2_IsEndConversion, .-ADC_SAR_2_IsEndConversion
 481              		.section	.text.ADC_SAR_2_GetResult8,"ax",%progbits
 482              		.align	2
 483              		.global	ADC_SAR_2_GetResult8
 484              		.thumb
 485              		.thumb_func
 486              		.type	ADC_SAR_2_GetResult8, %function
 487              	ADC_SAR_2_GetResult8:
 488              	.LFB7:
 521:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( (int8)ADC_SAR_2_SAR_WRK0_REG - (int8)ADC_SAR_2_shift);
 489              		.loc 1 521 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 522:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 494              		.loc 1 522 0
 495 0000 034B     		ldr	r3, .L49
 496 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0004 034A     		ldr	r2, .L49+4
 498 0006 1088     		ldrh	r0, [r2]
 499 0008 181A     		subs	r0, r3, r0
 523:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 500              		.loc 1 523 0
 501 000a 40B2     		sxtb	r0, r0
 502 000c 7047     		bx	lr
 503              	.L50:
 504 000e 00BF     		.align	2
 505              	.L49:
 506 0010 A25B0040 		.word	1073765282
 507 0014 00000000 		.word	ADC_SAR_2_shift
 508              		.cfi_endproc
 509              	.LFE7:
 510              		.size	ADC_SAR_2_GetResult8, .-ADC_SAR_2_GetResult8
 511              		.section	.text.ADC_SAR_2_GetResult16,"ax",%progbits
 512              		.align	2
 513              		.global	ADC_SAR_2_GetResult16
 514              		.thumb
 515              		.thumb_func
 516              		.type	ADC_SAR_2_GetResult16, %function
 517              	ADC_SAR_2_GetResult16:
 518              	.LFB8:
 551:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uint16 res;
 519              		.loc 1 551 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 554:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 524              		.loc 1 554 0
 525 0000 034B     		ldr	r3, .L52
 526 0002 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 23


 527              	.LVL40:
 556:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 528              		.loc 1 556 0
 529 0004 034A     		ldr	r2, .L52+4
 530 0006 1088     		ldrh	r0, [r2]
 531 0008 181A     		subs	r0, r3, r0
 557:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 532              		.loc 1 557 0
 533 000a 00B2     		sxth	r0, r0
 534 000c 7047     		bx	lr
 535              	.L53:
 536 000e 00BF     		.align	2
 537              	.L52:
 538 0010 A25B0040 		.word	1073765282
 539 0014 00000000 		.word	ADC_SAR_2_shift
 540              		.cfi_endproc
 541              	.LFE8:
 542              		.size	ADC_SAR_2_GetResult16, .-ADC_SAR_2_GetResult16
 543              		.section	.text.ADC_SAR_2_SetOffset,"ax",%progbits
 544              		.align	2
 545              		.global	ADC_SAR_2_SetOffset
 546              		.thumb
 547              		.thumb_func
 548              		.type	ADC_SAR_2_SetOffset, %function
 549              	ADC_SAR_2_SetOffset:
 550              	.LFB9:
 586:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_offset = offset;
 551              		.loc 1 586 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL41:
 587:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 557              		.loc 1 587 0
 558 0000 014B     		ldr	r3, .L55
 559 0002 1880     		strh	r0, [r3]	@ movhi
 560 0004 7047     		bx	lr
 561              	.L56:
 562 0006 00BF     		.align	2
 563              	.L55:
 564 0008 00000000 		.word	ADC_SAR_2_offset
 565              		.cfi_endproc
 566              	.LFE9:
 567              		.size	ADC_SAR_2_SetOffset, .-ADC_SAR_2_SetOffset
 568              		.section	.text.ADC_SAR_2_SetGain,"ax",%progbits
 569              		.align	2
 570              		.global	ADC_SAR_2_SetGain
 571              		.thumb
 572              		.thumb_func
 573              		.type	ADC_SAR_2_SetGain, %function
 574              	ADC_SAR_2_SetGain:
 575              	.LFB11:
 665:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         ADC_SAR_2_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     #endif /* End ADC_SAR_2_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 24


 669:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 576              		.loc 1 693 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              	.LVL42:
 694:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = (int32)adcGain * 10;
 582              		.loc 1 694 0
 583 0000 00EB8000 		add	r0, r0, r0, lsl #2
 584              	.LVL43:
 585 0004 4000     		lsls	r0, r0, #1
 586 0006 014B     		ldr	r3, .L58
 587 0008 1860     		str	r0, [r3]
 588 000a 7047     		bx	lr
 589              	.L59:
 590              		.align	2
 591              	.L58:
 592 000c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 593              		.cfi_endproc
 594              	.LFE11:
 595              		.size	ADC_SAR_2_SetGain, .-ADC_SAR_2_SetGain
 596              		.section	.text.ADC_SAR_2_SetScaledGain,"ax",%progbits
 597              		.align	2
 598              		.global	ADC_SAR_2_SetScaledGain
 599              		.thumb
 600              		.thumb_func
 601              		.type	ADC_SAR_2_SetScaledGain, %function
 602              	ADC_SAR_2_SetScaledGain:
 603              	.LFB12:
 695:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 696:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 25


 698:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 714:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_2.c **** void ADC_SAR_2_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 604              		.loc 1 720 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609              	.LVL44:
 721:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     ADC_SAR_2_countsPer10Volt = adcGain;
 610              		.loc 1 721 0
 611 0000 014B     		ldr	r3, .L61
 612 0002 1860     		str	r0, [r3]
 613 0004 7047     		bx	lr
 614              	.L62:
 615 0006 00BF     		.align	2
 616              	.L61:
 617 0008 00000000 		.word	ADC_SAR_2_countsPer10Volt
 618              		.cfi_endproc
 619              	.LFE12:
 620              		.size	ADC_SAR_2_SetScaledGain, .-ADC_SAR_2_SetScaledGain
 621              		.section	.text.ADC_SAR_2_CountsTo_mVolts,"ax",%progbits
 622              		.align	2
 623              		.global	ADC_SAR_2_CountsTo_mVolts
 624              		.thumb
 625              		.thumb_func
 626              		.type	ADC_SAR_2_CountsTo_mVolts, %function
 627              	ADC_SAR_2_CountsTo_mVolts:
 628              	.LFB13:
 722:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 723:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 26


 730:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int16 ADC_SAR_2_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 629              		.loc 1 744 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634              	.LVL45:
 745:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 635              		.loc 1 748 0
 636 0000 114B     		ldr	r3, .L68
 637 0002 1B88     		ldrh	r3, [r3]
 638 0004 9BB2     		uxth	r3, r3
 639 0006 33B1     		cbz	r3, .L64
 749:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 640              		.loc 1 750 0
 641 0008 0F4B     		ldr	r3, .L68
 642 000a 1988     		ldrh	r1, [r3]
 643 000c 09B2     		sxth	r1, r1
 644 000e 01EB8101 		add	r1, r1, r1, lsl #2
 645 0012 4900     		lsls	r1, r1, #1
 646              	.LVL46:
 647 0014 01E0     		b	.L65
 648              	.LVL47:
 649              	.L64:
 751:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 754:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 650              		.loc 1 754 0
 651 0016 0D4B     		ldr	r3, .L68+4
 652 0018 1968     		ldr	r1, [r3]
 653              	.LVL48:
 654              	.L65:
 755:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 655              		.loc 1 758 0
 656 001a 0D4B     		ldr	r3, .L68+8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 27


 657 001c 1A88     		ldrh	r2, [r3]
 658 001e 821A     		subs	r2, r0, r2
 659 0020 12B2     		sxth	r2, r2
 660              	.LVL49:
 759:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_2_10MV_COUNTS ) + ( (adcCounts > 0) ?
 661              		.loc 1 760 0
 662 0022 42F21070 		movw	r0, #10000
 663 0026 00FB02F0 		mul	r0, r0, r2
 761:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 664              		.loc 1 761 0
 665 002a 002A     		cmp	r2, #0
 666 002c 03DD     		ble	.L66
 667              		.loc 1 761 0 is_stmt 0 discriminator 1
 668 002e 01EBD173 		add	r3, r1, r1, lsr #31
 669 0032 5B10     		asrs	r3, r3, #1
 670 0034 03E0     		b	.L67
 671              	.L66:
 672              		.loc 1 761 0 discriminator 2
 673 0036 01EBD172 		add	r2, r1, r1, lsr #31
 674              	.LVL50:
 675 003a 5210     		asrs	r2, r2, #1
 676 003c 5342     		negs	r3, r2
 677              	.L67:
 760:.\Generated_Source\PSoC5/ADC_SAR_2.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 678              		.loc 1 760 0 is_stmt 1
 679 003e 0344     		add	r3, r3, r0
 680              		.loc 1 761 0
 681 0040 93FBF1F0 		sdiv	r0, r3, r1
 682              	.LVL51:
 762:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( mVolts );
 764:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 683              		.loc 1 764 0
 684 0044 00B2     		sxth	r0, r0
 685 0046 7047     		bx	lr
 686              	.L69:
 687              		.align	2
 688              	.L68:
 689 0048 00000000 		.word	ADC_SAR_2_countsPerVolt
 690 004c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 691 0050 00000000 		.word	ADC_SAR_2_offset
 692              		.cfi_endproc
 693              	.LFE13:
 694              		.size	ADC_SAR_2_CountsTo_mVolts, .-ADC_SAR_2_CountsTo_mVolts
 695              		.global	__aeabi_ldivmod
 696              		.section	.text.ADC_SAR_2_CountsTo_uVolts,"ax",%progbits
 697              		.align	2
 698              		.global	ADC_SAR_2_CountsTo_uVolts
 699              		.thumb
 700              		.thumb_func
 701              		.type	ADC_SAR_2_CountsTo_uVolts, %function
 702              	ADC_SAR_2_CountsTo_uVolts:
 703              	.LFB14:
 765:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 28


 768:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 784:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_2.c **** int32 ADC_SAR_2_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 704              		.loc 1 786 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              	.LVL52:
 709 0000 38B5     		push	{r3, r4, r5, lr}
 710              		.cfi_def_cfa_offset 16
 711              		.cfi_offset 3, -16
 712              		.cfi_offset 4, -12
 713              		.cfi_offset 5, -8
 714              		.cfi_offset 14, -4
 787:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 715              		.loc 1 791 0
 716 0002 0D4B     		ldr	r3, .L74
 717 0004 1B88     		ldrh	r3, [r3]
 718 0006 9BB2     		uxth	r3, r3
 719 0008 33B1     		cbz	r3, .L71
 792:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 720              		.loc 1 793 0
 721 000a 0B4B     		ldr	r3, .L74
 722 000c 1A88     		ldrh	r2, [r3]
 723 000e 12B2     		sxth	r2, r2
 724 0010 02EB8202 		add	r2, r2, r2, lsl #2
 725 0014 5200     		lsls	r2, r2, #1
 726              	.LVL53:
 727 0016 01E0     		b	.L72
 728              	.LVL54:
 729              	.L71:
 794:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 730              		.loc 1 797 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 29


 731 0018 084B     		ldr	r3, .L74+4
 732 001a 1A68     		ldr	r2, [r3]
 733              	.LVL55:
 734              	.L72:
 798:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 735              		.loc 1 801 0
 736 001c 084B     		ldr	r3, .L74+8
 737 001e 1C88     		ldrh	r4, [r3]
 738              	.LVL56:
 802:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_2_10UV_COUNTS ) / countsPer10Volt);
 739              		.loc 1 805 0
 740 0020 041B     		subs	r4, r0, r4
 741              	.LVL57:
 742 0022 24B2     		sxth	r4, r4
 743 0024 E517     		asrs	r5, r4, #31
 744 0026 074B     		ldr	r3, .L74+12
 745 0028 A4FB0301 		umull	r0, r1, r4, r3
 746 002c 03FB0511 		mla	r1, r3, r5, r1
 747 0030 D317     		asrs	r3, r2, #31
 748 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 749              	.LVL58:
 806:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( uVolts );
 808:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 750              		.loc 1 808 0
 751 0036 38BD     		pop	{r3, r4, r5, pc}
 752              	.L75:
 753              		.align	2
 754              	.L74:
 755 0038 00000000 		.word	ADC_SAR_2_countsPerVolt
 756 003c 00000000 		.word	ADC_SAR_2_countsPer10Volt
 757 0040 00000000 		.word	ADC_SAR_2_offset
 758 0044 80969800 		.word	10000000
 759              		.cfi_endproc
 760              	.LFE14:
 761              		.size	ADC_SAR_2_CountsTo_uVolts, .-ADC_SAR_2_CountsTo_uVolts
 762              		.global	__aeabi_i2f
 763              		.global	__aeabi_fmul
 764              		.global	__aeabi_fdiv
 765              		.section	.text.ADC_SAR_2_CountsTo_Volts,"ax",%progbits
 766              		.align	2
 767              		.global	ADC_SAR_2_CountsTo_Volts
 768              		.thumb
 769              		.thumb_func
 770              		.type	ADC_SAR_2_CountsTo_Volts, %function
 771              	ADC_SAR_2_CountsTo_Volts:
 772              	.LFB15:
 809:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_2.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Function Name: ADC_SAR_2_CountsTo_Volts
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 30


 813:.\Generated_Source\PSoC5/ADC_SAR_2.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_2.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *  ADC_SAR_2_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_2.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_SAR_2.c **** float32 ADC_SAR_2_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_2.c **** {
 773              		.loc 1 830 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              	.LVL59:
 778 0000 38B5     		push	{r3, r4, r5, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 3, -16
 781              		.cfi_offset 4, -12
 782              		.cfi_offset 5, -8
 783              		.cfi_offset 14, -4
 831:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     if(ADC_SAR_2_countsPerVolt != 0)
 784              		.loc 1 834 0
 785 0002 0F4B     		ldr	r3, .L80
 786 0004 1B88     		ldrh	r3, [r3]
 787 0006 9BB2     		uxth	r3, r3
 788 0008 33B1     		cbz	r3, .L77
 835:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = (int32)ADC_SAR_2_countsPerVolt * 10;
 789              		.loc 1 836 0
 790 000a 0D4B     		ldr	r3, .L80
 791 000c 1C88     		ldrh	r4, [r3]
 792 000e 24B2     		sxth	r4, r4
 793 0010 04EB8404 		add	r4, r4, r4, lsl #2
 794 0014 6400     		lsls	r4, r4, #1
 795              	.LVL60:
 796 0016 01E0     		b	.L78
 797              	.LVL61:
 798              	.L77:
 837:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_2.c ****         countsPer10Volt = ADC_SAR_2_countsPer10Volt;
 799              		.loc 1 840 0
 800 0018 0A4B     		ldr	r3, .L80+4
 801 001a 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 31


 802              	.LVL62:
 803              	.L78:
 841:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     adcCounts -= ADC_SAR_2_offset;
 804              		.loc 1 844 0
 805 001c 0A4B     		ldr	r3, .L80+8
 806 001e 1B88     		ldrh	r3, [r3]
 807 0020 C01A     		subs	r0, r0, r3
 808              	.LVL63:
 845:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     volts = ((float32)adcCounts * ADC_SAR_2_10V_COUNTS) / (float32)countsPer10Volt;
 809              		.loc 1 846 0
 810 0022 00B2     		sxth	r0, r0
 811 0024 FFF7FEFF 		bl	__aeabi_i2f
 812              	.LVL64:
 813 0028 0849     		ldr	r1, .L80+12
 814 002a FFF7FEFF 		bl	__aeabi_fmul
 815              	.LVL65:
 816 002e 0546     		mov	r5, r0
 817 0030 2046     		mov	r0, r4
 818 0032 FFF7FEFF 		bl	__aeabi_i2f
 819              	.LVL66:
 820 0036 0146     		mov	r1, r0
 821 0038 2846     		mov	r0, r5
 822 003a FFF7FEFF 		bl	__aeabi_fdiv
 823              	.LVL67:
 847:.\Generated_Source\PSoC5/ADC_SAR_2.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_2.c ****     return( volts );
 849:.\Generated_Source\PSoC5/ADC_SAR_2.c **** }
 824              		.loc 1 849 0
 825 003e 38BD     		pop	{r3, r4, r5, pc}
 826              	.LVL68:
 827              	.L81:
 828              		.align	2
 829              	.L80:
 830 0040 00000000 		.word	ADC_SAR_2_countsPerVolt
 831 0044 00000000 		.word	ADC_SAR_2_countsPer10Volt
 832 0048 00000000 		.word	ADC_SAR_2_offset
 833 004c 00002041 		.word	1092616192
 834              		.cfi_endproc
 835              	.LFE15:
 836              		.size	ADC_SAR_2_CountsTo_Volts, .-ADC_SAR_2_CountsTo_Volts
 837              		.comm	ADC_SAR_2_shift,2,2
 838              		.comm	ADC_SAR_2_countsPer10Volt,4,4
 839              		.comm	ADC_SAR_2_countsPerVolt,2,2
 840              		.comm	ADC_SAR_2_offset,2,2
 841              		.global	ADC_SAR_2_initVar
 842              		.bss
 843              		.set	.LANCHOR0,. + 0
 844              		.type	ADC_SAR_2_initVar, %object
 845              		.size	ADC_SAR_2_initVar, 1
 846              	ADC_SAR_2_initVar:
 847 0000 00       		.space	1
 848              		.text
 849              	.Letext0:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 32


 850              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 851              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 852              		.section	.debug_info,"",%progbits
 853              	.Ldebug_info0:
 854 0000 A4050000 		.4byte	0x5a4
 855 0004 0400     		.2byte	0x4
 856 0006 00000000 		.4byte	.Ldebug_abbrev0
 857 000a 04       		.byte	0x4
 858 000b 01       		.uleb128 0x1
 859 000c 67030000 		.4byte	.LASF62
 860 0010 01       		.byte	0x1
 861 0011 ED010000 		.4byte	.LASF63
 862 0015 E2020000 		.4byte	.LASF64
 863 0019 00000000 		.4byte	.Ldebug_ranges0+0
 864 001d 00000000 		.4byte	0
 865 0021 00000000 		.4byte	.Ldebug_line0
 866 0025 02       		.uleb128 0x2
 867 0026 04       		.byte	0x4
 868 0027 05       		.byte	0x5
 869 0028 696E7400 		.ascii	"int\000"
 870 002c 03       		.uleb128 0x3
 871 002d 04       		.byte	0x4
 872 002e 07       		.byte	0x7
 873 002f 65010000 		.4byte	.LASF0
 874 0033 03       		.uleb128 0x3
 875 0034 01       		.byte	0x1
 876 0035 06       		.byte	0x6
 877 0036 BB000000 		.4byte	.LASF1
 878 003a 03       		.uleb128 0x3
 879 003b 01       		.byte	0x1
 880 003c 08       		.byte	0x8
 881 003d CA020000 		.4byte	.LASF2
 882 0041 03       		.uleb128 0x3
 883 0042 02       		.byte	0x2
 884 0043 05       		.byte	0x5
 885 0044 D8020000 		.4byte	.LASF3
 886 0048 03       		.uleb128 0x3
 887 0049 02       		.byte	0x2
 888 004a 07       		.byte	0x7
 889 004b D5010000 		.4byte	.LASF4
 890 004f 03       		.uleb128 0x3
 891 0050 04       		.byte	0x4
 892 0051 05       		.byte	0x5
 893 0052 CD000000 		.4byte	.LASF5
 894 0056 03       		.uleb128 0x3
 895 0057 04       		.byte	0x4
 896 0058 07       		.byte	0x7
 897 0059 91010000 		.4byte	.LASF6
 898 005d 03       		.uleb128 0x3
 899 005e 08       		.byte	0x8
 900 005f 05       		.byte	0x5
 901 0060 AD000000 		.4byte	.LASF7
 902 0064 03       		.uleb128 0x3
 903 0065 08       		.byte	0x8
 904 0066 07       		.byte	0x7
 905 0067 75000000 		.4byte	.LASF8
 906 006b 03       		.uleb128 0x3
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 33


 907 006c 04       		.byte	0x4
 908 006d 07       		.byte	0x7
 909 006e 37020000 		.4byte	.LASF9
 910 0072 04       		.uleb128 0x4
 911 0073 04       		.byte	0x4
 912 0074 78000000 		.4byte	0x78
 913 0078 05       		.uleb128 0x5
 914 0079 03       		.uleb128 0x3
 915 007a 01       		.byte	0x1
 916 007b 08       		.byte	0x8
 917 007c 1B030000 		.4byte	.LASF10
 918 0080 06       		.uleb128 0x6
 919 0081 07010000 		.4byte	.LASF11
 920 0085 02       		.byte	0x2
 921 0086 C2       		.byte	0xc2
 922 0087 3A000000 		.4byte	0x3a
 923 008b 06       		.uleb128 0x6
 924 008c 00000000 		.4byte	.LASF12
 925 0090 02       		.byte	0x2
 926 0091 C3       		.byte	0xc3
 927 0092 48000000 		.4byte	0x48
 928 0096 06       		.uleb128 0x6
 929 0097 1E010000 		.4byte	.LASF13
 930 009b 02       		.byte	0x2
 931 009c C4       		.byte	0xc4
 932 009d 56000000 		.4byte	0x56
 933 00a1 06       		.uleb128 0x6
 934 00a2 E8010000 		.4byte	.LASF14
 935 00a6 02       		.byte	0x2
 936 00a7 C5       		.byte	0xc5
 937 00a8 33000000 		.4byte	0x33
 938 00ac 06       		.uleb128 0x6
 939 00ad 22040000 		.4byte	.LASF15
 940 00b1 02       		.byte	0x2
 941 00b2 C6       		.byte	0xc6
 942 00b3 41000000 		.4byte	0x41
 943 00b7 06       		.uleb128 0x6
 944 00b8 C7000000 		.4byte	.LASF16
 945 00bc 02       		.byte	0x2
 946 00bd C7       		.byte	0xc7
 947 00be 4F000000 		.4byte	0x4f
 948 00c2 06       		.uleb128 0x6
 949 00c3 2F020000 		.4byte	.LASF17
 950 00c7 02       		.byte	0x2
 951 00c8 C8       		.byte	0xc8
 952 00c9 CD000000 		.4byte	0xcd
 953 00cd 03       		.uleb128 0x3
 954 00ce 04       		.byte	0x4
 955 00cf 04       		.byte	0x4
 956 00d0 98020000 		.4byte	.LASF18
 957 00d4 03       		.uleb128 0x3
 958 00d5 08       		.byte	0x8
 959 00d6 04       		.byte	0x4
 960 00d7 17010000 		.4byte	.LASF19
 961 00db 06       		.uleb128 0x6
 962 00dc 69020000 		.4byte	.LASF20
 963 00e0 02       		.byte	0x2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 34


 964 00e1 CD       		.byte	0xcd
 965 00e2 5D000000 		.4byte	0x5d
 966 00e6 07       		.uleb128 0x7
 967 00e7 BE020000 		.4byte	.LASF21
 968 00eb 02       		.byte	0x2
 969 00ec 6C01     		.2byte	0x16c
 970 00ee F2000000 		.4byte	0xf2
 971 00f2 08       		.uleb128 0x8
 972 00f3 80000000 		.4byte	0x80
 973 00f7 07       		.uleb128 0x7
 974 00f8 01010000 		.4byte	.LASF22
 975 00fc 02       		.byte	0x2
 976 00fd 6D01     		.2byte	0x16d
 977 00ff 03010000 		.4byte	0x103
 978 0103 08       		.uleb128 0x8
 979 0104 8B000000 		.4byte	0x8b
 980 0108 07       		.uleb128 0x7
 981 0109 19020000 		.4byte	.LASF23
 982 010d 02       		.byte	0x2
 983 010e 6E01     		.2byte	0x16e
 984 0110 14010000 		.4byte	0x114
 985 0114 08       		.uleb128 0x8
 986 0115 96000000 		.4byte	0x96
 987 0119 07       		.uleb128 0x7
 988 011a 20030000 		.4byte	.LASF24
 989 011e 02       		.byte	0x2
 990 011f 7E01     		.2byte	0x17e
 991 0121 72000000 		.4byte	0x72
 992 0125 09       		.uleb128 0x9
 993 0126 40000000 		.4byte	.LASF65
 994 012a 01       		.byte	0x1
 995 012b 6302     		.2byte	0x263
 996 012d 00000000 		.4byte	.LFB10
 997 0131 64000000 		.4byte	.LFE10-.LFB10
 998 0135 01       		.uleb128 0x1
 999 0136 9C       		.byte	0x9c
 1000 0137 6B010000 		.4byte	0x16b
 1001 013b 0A       		.uleb128 0xa
 1002 013c 10030000 		.4byte	.LASF31
 1003 0140 01       		.byte	0x1
 1004 0141 6302     		.2byte	0x263
 1005 0143 80000000 		.4byte	0x80
 1006 0147 00000000 		.4byte	.LLST0
 1007 014b 0B       		.uleb128 0xb
 1008 014c 39000000 		.4byte	.LASF25
 1009 0150 01       		.byte	0x1
 1010 0151 6502     		.2byte	0x265
 1011 0153 B7000000 		.4byte	0xb7
 1012 0157 3A000000 		.4byte	.LLST1
 1013 015b 0C       		.uleb128 0xc
 1014 015c 22000000 		.4byte	.LVL4
 1015 0160 3D050000 		.4byte	0x53d
 1016 0164 0D       		.uleb128 0xd
 1017 0165 01       		.uleb128 0x1
 1018 0166 50       		.byte	0x50
 1019 0167 01       		.uleb128 0x1
 1020 0168 30       		.byte	0x30
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 35


 1021 0169 00       		.byte	0
 1022 016a 00       		.byte	0
 1023 016b 0E       		.uleb128 0xe
 1024 016c 2D030000 		.4byte	.LASF28
 1025 0170 01       		.byte	0x1
 1026 0171 8F       		.byte	0x8f
 1027 0172 00000000 		.4byte	.LFB2
 1028 0176 80000000 		.4byte	.LFE2-.LFB2
 1029 017a 01       		.uleb128 0x1
 1030 017b 9C       		.byte	0x9c
 1031 017c CB010000 		.4byte	0x1cb
 1032 0180 0F       		.uleb128 0xf
 1033 0181 3E040000 		.4byte	.LASF26
 1034 0185 01       		.byte	0x1
 1035 0186 91       		.byte	0x91
 1036 0187 80000000 		.4byte	0x80
 1037 018b 67000000 		.4byte	.LLST2
 1038 018f 0F       		.uleb128 0xf
 1039 0190 4F030000 		.4byte	.LASF27
 1040 0194 01       		.byte	0x1
 1041 0195 92       		.byte	0x92
 1042 0196 80000000 		.4byte	0x80
 1043 019a 98000000 		.4byte	.LLST3
 1044 019e 10       		.uleb128 0x10
 1045 019f 06000000 		.4byte	.LVL8
 1046 01a3 4E050000 		.4byte	0x54e
 1047 01a7 11       		.uleb128 0x11
 1048 01a8 62000000 		.4byte	.LVL14
 1049 01ac 59050000 		.4byte	0x559
 1050 01b0 BA010000 		.4byte	0x1ba
 1051 01b4 0D       		.uleb128 0xd
 1052 01b5 01       		.uleb128 0x1
 1053 01b6 50       		.byte	0x50
 1054 01b7 01       		.uleb128 0x1
 1055 01b8 3A       		.byte	0x3a
 1056 01b9 00       		.byte	0
 1057 01ba 0C       		.uleb128 0xc
 1058 01bb 6C000000 		.4byte	.LVL15
 1059 01bf 6A050000 		.4byte	0x56a
 1060 01c3 0D       		.uleb128 0xd
 1061 01c4 01       		.uleb128 0x1
 1062 01c5 50       		.byte	0x50
 1063 01c6 02       		.uleb128 0x2
 1064 01c7 74       		.byte	0x74
 1065 01c8 00       		.sleb128 0
 1066 01c9 00       		.byte	0
 1067 01ca 00       		.byte	0
 1068 01cb 0E       		.uleb128 0xe
 1069 01cc 9E000000 		.4byte	.LASF29
 1070 01d0 01       		.byte	0x1
 1071 01d1 F8       		.byte	0xf8
 1072 01d2 00000000 		.4byte	.LFB3
 1073 01d6 34000000 		.4byte	.LFE3-.LFB3
 1074 01da 01       		.uleb128 0x1
 1075 01db 9C       		.byte	0x9c
 1076 01dc 02020000 		.4byte	0x202
 1077 01e0 0F       		.uleb128 0xf
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 36


 1078 01e1 4F030000 		.4byte	.LASF27
 1079 01e5 01       		.byte	0x1
 1080 01e6 FA       		.byte	0xfa
 1081 01e7 80000000 		.4byte	0x80
 1082 01eb AB000000 		.4byte	.LLST4
 1083 01ef 10       		.uleb128 0x10
 1084 01f0 06000000 		.4byte	.LVL17
 1085 01f4 4E050000 		.4byte	0x54e
 1086 01f8 10       		.uleb128 0x10
 1087 01f9 2C000000 		.4byte	.LVL18
 1088 01fd 6A050000 		.4byte	0x56a
 1089 0201 00       		.byte	0
 1090 0202 12       		.uleb128 0x12
 1091 0203 0F040000 		.4byte	.LASF30
 1092 0207 01       		.byte	0x1
 1093 0208 2201     		.2byte	0x122
 1094 020a 00000000 		.4byte	.LFB4
 1095 020e 18000000 		.4byte	.LFE4-.LFB4
 1096 0212 01       		.uleb128 0x1
 1097 0213 9C       		.byte	0x9c
 1098 0214 39020000 		.4byte	0x239
 1099 0218 0A       		.uleb128 0xa
 1100 0219 9E020000 		.4byte	.LASF32
 1101 021d 01       		.byte	0x1
 1102 021e 2201     		.2byte	0x122
 1103 0220 80000000 		.4byte	0x80
 1104 0224 BE000000 		.4byte	.LLST5
 1105 0228 0B       		.uleb128 0xb
 1106 0229 3E040000 		.4byte	.LASF26
 1107 022d 01       		.byte	0x1
 1108 022e 2401     		.2byte	0x124
 1109 0230 80000000 		.4byte	0x80
 1110 0234 DC000000 		.4byte	.LLST6
 1111 0238 00       		.byte	0
 1112 0239 12       		.uleb128 0x12
 1113 023a 72010000 		.4byte	.LASF33
 1114 023e 01       		.byte	0x1
 1115 023f 5401     		.2byte	0x154
 1116 0241 00000000 		.4byte	.LFB5
 1117 0245 38000000 		.4byte	.LFE5-.LFB5
 1118 0249 01       		.uleb128 0x1
 1119 024a 9C       		.byte	0x9c
 1120 024b 93020000 		.4byte	0x293
 1121 024f 0A       		.uleb128 0xa
 1122 0250 10030000 		.4byte	.LASF31
 1123 0254 01       		.byte	0x1
 1124 0255 5401     		.2byte	0x154
 1125 0257 80000000 		.4byte	0x80
 1126 025b FA000000 		.4byte	.LLST7
 1127 025f 0B       		.uleb128 0xb
 1128 0260 3E040000 		.4byte	.LASF26
 1129 0264 01       		.byte	0x1
 1130 0265 5601     		.2byte	0x156
 1131 0267 80000000 		.4byte	0x80
 1132 026b 34010000 		.4byte	.LLST8
 1133 026f 11       		.uleb128 0x11
 1134 0270 20000000 		.4byte	.LVL27
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 37


 1135 0274 3D050000 		.4byte	0x53d
 1136 0278 82020000 		.4byte	0x282
 1137 027c 0D       		.uleb128 0xd
 1138 027d 01       		.uleb128 0x1
 1139 027e 50       		.byte	0x50
 1140 027f 01       		.uleb128 0x1
 1141 0280 30       		.byte	0x30
 1142 0281 00       		.byte	0
 1143 0282 0C       		.uleb128 0xc
 1144 0283 30000000 		.4byte	.LVL30
 1145 0287 25010000 		.4byte	0x125
 1146 028b 0D       		.uleb128 0xd
 1147 028c 01       		.uleb128 0x1
 1148 028d 50       		.byte	0x50
 1149 028e 02       		.uleb128 0x2
 1150 028f 74       		.byte	0x74
 1151 0290 00       		.sleb128 0
 1152 0291 00       		.byte	0
 1153 0292 00       		.byte	0
 1154 0293 0E       		.uleb128 0xe
 1155 0294 40020000 		.4byte	.LASF34
 1156 0298 01       		.byte	0x1
 1157 0299 6A       		.byte	0x6a
 1158 029a 00000000 		.4byte	.LFB1
 1159 029e 38000000 		.4byte	.LFE1-.LFB1
 1160 02a2 01       		.uleb128 0x1
 1161 02a3 9C       		.byte	0x9c
 1162 02a4 E3020000 		.4byte	0x2e3
 1163 02a8 11       		.uleb128 0x11
 1164 02a9 0A000000 		.4byte	.LVL31
 1165 02ad 7B050000 		.4byte	0x57b
 1166 02b1 C0020000 		.4byte	0x2c0
 1167 02b5 0D       		.uleb128 0xd
 1168 02b6 01       		.uleb128 0x1
 1169 02b7 51       		.byte	0x51
 1170 02b8 01       		.uleb128 0x1
 1171 02b9 37       		.byte	0x37
 1172 02ba 0D       		.uleb128 0xd
 1173 02bb 01       		.uleb128 0x1
 1174 02bc 50       		.byte	0x50
 1175 02bd 01       		.uleb128 0x1
 1176 02be 31       		.byte	0x31
 1177 02bf 00       		.byte	0
 1178 02c0 11       		.uleb128 0x11
 1179 02c1 12000000 		.4byte	.LVL32
 1180 02c5 91050000 		.4byte	0x591
 1181 02c9 D3020000 		.4byte	0x2d3
 1182 02cd 0D       		.uleb128 0xd
 1183 02ce 01       		.uleb128 0x1
 1184 02cf 50       		.byte	0x50
 1185 02d0 01       		.uleb128 0x1
 1186 02d1 31       		.byte	0x31
 1187 02d2 00       		.byte	0
 1188 02d3 0C       		.uleb128 0xc
 1189 02d4 22000000 		.4byte	.LVL33
 1190 02d8 39020000 		.4byte	0x239
 1191 02dc 0D       		.uleb128 0xd
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 38


 1192 02dd 01       		.uleb128 0x1
 1193 02de 50       		.byte	0x50
 1194 02df 01       		.uleb128 0x1
 1195 02e0 3C       		.byte	0x3c
 1196 02e1 00       		.byte	0
 1197 02e2 00       		.byte	0
 1198 02e3 0E       		.uleb128 0xe
 1199 02e4 65000000 		.4byte	.LASF35
 1200 02e8 01       		.byte	0x1
 1201 02e9 4A       		.byte	0x4a
 1202 02ea 00000000 		.4byte	.LFB0
 1203 02ee 1C000000 		.4byte	.LFE0-.LFB0
 1204 02f2 01       		.uleb128 0x1
 1205 02f3 9C       		.byte	0x9c
 1206 02f4 0B030000 		.4byte	0x30b
 1207 02f8 10       		.uleb128 0x10
 1208 02f9 0C000000 		.4byte	.LVL34
 1209 02fd 93020000 		.4byte	0x293
 1210 0301 10       		.uleb128 0x10
 1211 0302 16000000 		.4byte	.LVL35
 1212 0306 6B010000 		.4byte	0x16b
 1213 030a 00       		.byte	0
 1214 030b 13       		.uleb128 0x13
 1215 030c 4F020000 		.4byte	.LASF38
 1216 0310 01       		.byte	0x1
 1217 0311 DB01     		.2byte	0x1db
 1218 0313 80000000 		.4byte	0x80
 1219 0317 00000000 		.4byte	.LFB6
 1220 031b 24000000 		.4byte	.LFE6-.LFB6
 1221 031f 01       		.uleb128 0x1
 1222 0320 9C       		.byte	0x9c
 1223 0321 55030000 		.4byte	0x355
 1224 0325 0A       		.uleb128 0xa
 1225 0326 5D010000 		.4byte	.LASF36
 1226 032a 01       		.byte	0x1
 1227 032b DB01     		.2byte	0x1db
 1228 032d 80000000 		.4byte	0x80
 1229 0331 61010000 		.4byte	.LLST9
 1230 0335 0B       		.uleb128 0xb
 1231 0336 60030000 		.4byte	.LASF37
 1232 033a 01       		.byte	0x1
 1233 033b DD01     		.2byte	0x1dd
 1234 033d 80000000 		.4byte	0x80
 1235 0341 82010000 		.4byte	.LLST10
 1236 0345 0C       		.uleb128 0xc
 1237 0346 18000000 		.4byte	.LVL39
 1238 034a 59050000 		.4byte	0x559
 1239 034e 0D       		.uleb128 0xd
 1240 034f 01       		.uleb128 0x1
 1241 0350 50       		.byte	0x50
 1242 0351 01       		.uleb128 0x1
 1243 0352 31       		.byte	0x31
 1244 0353 00       		.byte	0
 1245 0354 00       		.byte	0
 1246 0355 14       		.uleb128 0x14
 1247 0356 C0010000 		.4byte	.LASF66
 1248 035a 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 39


 1249 035b 0802     		.2byte	0x208
 1250 035d A1000000 		.4byte	0xa1
 1251 0361 00000000 		.4byte	.LFB7
 1252 0365 18000000 		.4byte	.LFE7-.LFB7
 1253 0369 01       		.uleb128 0x1
 1254 036a 9C       		.byte	0x9c
 1255 036b 13       		.uleb128 0x13
 1256 036c 28040000 		.4byte	.LASF39
 1257 0370 01       		.byte	0x1
 1258 0371 2602     		.2byte	0x226
 1259 0373 AC000000 		.4byte	0xac
 1260 0377 00000000 		.4byte	.LFB8
 1261 037b 18000000 		.4byte	.LFE8-.LFB8
 1262 037f 01       		.uleb128 0x1
 1263 0380 9C       		.byte	0x9c
 1264 0381 94030000 		.4byte	0x394
 1265 0385 15       		.uleb128 0x15
 1266 0386 72657300 		.ascii	"res\000"
 1267 038a 01       		.byte	0x1
 1268 038b 2802     		.2byte	0x228
 1269 038d 8B000000 		.4byte	0x8b
 1270 0391 01       		.uleb128 0x1
 1271 0392 53       		.byte	0x53
 1272 0393 00       		.byte	0
 1273 0394 12       		.uleb128 0x12
 1274 0395 25000000 		.4byte	.LASF40
 1275 0399 01       		.byte	0x1
 1276 039a 4902     		.2byte	0x249
 1277 039c 00000000 		.4byte	.LFB9
 1278 03a0 0C000000 		.4byte	.LFE9-.LFB9
 1279 03a4 01       		.uleb128 0x1
 1280 03a5 9C       		.byte	0x9c
 1281 03a6 B9030000 		.4byte	0x3b9
 1282 03aa 16       		.uleb128 0x16
 1283 03ab 3E030000 		.4byte	.LASF41
 1284 03af 01       		.byte	0x1
 1285 03b0 4902     		.2byte	0x249
 1286 03b2 AC000000 		.4byte	0xac
 1287 03b6 01       		.uleb128 0x1
 1288 03b7 50       		.byte	0x50
 1289 03b8 00       		.byte	0
 1290 03b9 12       		.uleb128 0x12
 1291 03ba 53000000 		.4byte	.LASF42
 1292 03be 01       		.byte	0x1
 1293 03bf B402     		.2byte	0x2b4
 1294 03c1 00000000 		.4byte	.LFB11
 1295 03c5 10000000 		.4byte	.LFE11-.LFB11
 1296 03c9 01       		.uleb128 0x1
 1297 03ca 9C       		.byte	0x9c
 1298 03cb E0030000 		.4byte	0x3e0
 1299 03cf 0A       		.uleb128 0xa
 1300 03d0 07000000 		.4byte	.LASF43
 1301 03d4 01       		.byte	0x1
 1302 03d5 B402     		.2byte	0x2b4
 1303 03d7 AC000000 		.4byte	0xac
 1304 03db 99010000 		.4byte	.LLST11
 1305 03df 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 40


 1306 03e0 12       		.uleb128 0x12
 1307 03e1 6F020000 		.4byte	.LASF44
 1308 03e5 01       		.byte	0x1
 1309 03e6 CF02     		.2byte	0x2cf
 1310 03e8 00000000 		.4byte	.LFB12
 1311 03ec 0C000000 		.4byte	.LFE12-.LFB12
 1312 03f0 01       		.uleb128 0x1
 1313 03f1 9C       		.byte	0x9c
 1314 03f2 05040000 		.4byte	0x405
 1315 03f6 16       		.uleb128 0x16
 1316 03f7 07000000 		.4byte	.LASF43
 1317 03fb 01       		.byte	0x1
 1318 03fc CF02     		.2byte	0x2cf
 1319 03fe B7000000 		.4byte	0xb7
 1320 0402 01       		.uleb128 0x1
 1321 0403 50       		.byte	0x50
 1322 0404 00       		.byte	0
 1323 0405 13       		.uleb128 0x13
 1324 0406 A4020000 		.4byte	.LASF45
 1325 040a 01       		.byte	0x1
 1326 040b E702     		.2byte	0x2e7
 1327 040d AC000000 		.4byte	0xac
 1328 0411 00000000 		.4byte	.LFB13
 1329 0415 54000000 		.4byte	.LFE13-.LFB13
 1330 0419 01       		.uleb128 0x1
 1331 041a 9C       		.byte	0x9c
 1332 041b 4E040000 		.4byte	0x44e
 1333 041f 0A       		.uleb128 0xa
 1334 0420 45030000 		.4byte	.LASF46
 1335 0424 01       		.byte	0x1
 1336 0425 E702     		.2byte	0x2e7
 1337 0427 AC000000 		.4byte	0xac
 1338 042b BA010000 		.4byte	.LLST12
 1339 042f 17       		.uleb128 0x17
 1340 0430 12020000 		.4byte	.LASF47
 1341 0434 01       		.byte	0x1
 1342 0435 E902     		.2byte	0x2e9
 1343 0437 AC000000 		.4byte	0xac
 1344 043b 01       		.uleb128 0x1
 1345 043c 50       		.byte	0x50
 1346 043d 0B       		.uleb128 0xb
 1347 043e 25010000 		.4byte	.LASF48
 1348 0442 01       		.byte	0x1
 1349 0443 EA02     		.2byte	0x2ea
 1350 0445 B7000000 		.4byte	0xb7
 1351 0449 D8010000 		.4byte	.LLST13
 1352 044d 00       		.byte	0
 1353 044e 18       		.uleb128 0x18
 1354 044f E7000000 		.4byte	.LASF49
 1355 0453 01       		.byte	0x1
 1356 0454 1103     		.2byte	0x311
 1357 0456 B7000000 		.4byte	0xb7
 1358 045a 00000000 		.4byte	.LFB14
 1359 045e 48000000 		.4byte	.LFE14-.LFB14
 1360 0462 01       		.uleb128 0x1
 1361 0463 9C       		.byte	0x9c
 1362 0464 95040000 		.4byte	0x495
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 41


 1363 0468 0A       		.uleb128 0xa
 1364 0469 45030000 		.4byte	.LASF46
 1365 046d 01       		.byte	0x1
 1366 046e 1103     		.2byte	0x311
 1367 0470 AC000000 		.4byte	0xac
 1368 0474 F6010000 		.4byte	.LLST14
 1369 0478 19       		.uleb128 0x19
 1370 0479 8A010000 		.4byte	.LASF67
 1371 047d 01       		.byte	0x1
 1372 047e 1403     		.2byte	0x314
 1373 0480 DB000000 		.4byte	0xdb
 1374 0484 0B       		.uleb128 0xb
 1375 0485 25010000 		.4byte	.LASF48
 1376 0489 01       		.byte	0x1
 1377 048a 1503     		.2byte	0x315
 1378 048c B7000000 		.4byte	0xb7
 1379 0490 19020000 		.4byte	.LLST15
 1380 0494 00       		.byte	0
 1381 0495 18       		.uleb128 0x18
 1382 0496 44010000 		.4byte	.LASF50
 1383 049a 01       		.byte	0x1
 1384 049b 3D03     		.2byte	0x33d
 1385 049d C2000000 		.4byte	0xc2
 1386 04a1 00000000 		.4byte	.LFB15
 1387 04a5 50000000 		.4byte	.LFE15-.LFB15
 1388 04a9 01       		.uleb128 0x1
 1389 04aa 9C       		.byte	0x9c
 1390 04ab DE040000 		.4byte	0x4de
 1391 04af 0A       		.uleb128 0xa
 1392 04b0 45030000 		.4byte	.LASF46
 1393 04b4 01       		.byte	0x1
 1394 04b5 3D03     		.2byte	0x33d
 1395 04b7 AC000000 		.4byte	0xac
 1396 04bb 37020000 		.4byte	.LLST16
 1397 04bf 17       		.uleb128 0x17
 1398 04c0 A3010000 		.4byte	.LASF51
 1399 04c4 01       		.byte	0x1
 1400 04c5 3F03     		.2byte	0x33f
 1401 04c7 C2000000 		.4byte	0xc2
 1402 04cb 01       		.uleb128 0x1
 1403 04cc 50       		.byte	0x50
 1404 04cd 0B       		.uleb128 0xb
 1405 04ce 25010000 		.4byte	.LASF48
 1406 04d2 01       		.byte	0x1
 1407 04d3 4003     		.2byte	0x340
 1408 04d5 B7000000 		.4byte	0xb7
 1409 04d9 55020000 		.4byte	.LLST17
 1410 04dd 00       		.byte	0
 1411 04de 1A       		.uleb128 0x1a
 1412 04df 8C000000 		.4byte	.LASF52
 1413 04e3 01       		.byte	0x1
 1414 04e4 23       		.byte	0x23
 1415 04e5 80000000 		.4byte	0x80
 1416 04e9 05       		.uleb128 0x5
 1417 04ea 03       		.byte	0x3
 1418 04eb 00000000 		.4byte	ADC_SAR_2_initVar
 1419 04ef 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 42


 1420 04f0 D6000000 		.4byte	.LASF53
 1421 04f4 01       		.byte	0x1
 1422 04f5 24       		.byte	0x24
 1423 04f6 00050000 		.4byte	0x500
 1424 04fa 05       		.uleb128 0x5
 1425 04fb 03       		.byte	0x3
 1426 04fc 00000000 		.4byte	ADC_SAR_2_offset
 1427 0500 08       		.uleb128 0x8
 1428 0501 AC000000 		.4byte	0xac
 1429 0505 1A       		.uleb128 0x1a
 1430 0506 45040000 		.4byte	.LASF54
 1431 050a 01       		.byte	0x1
 1432 050b 25       		.byte	0x25
 1433 050c 00050000 		.4byte	0x500
 1434 0510 05       		.uleb128 0x5
 1435 0511 03       		.byte	0x3
 1436 0512 00000000 		.4byte	ADC_SAR_2_countsPerVolt
 1437 0516 1A       		.uleb128 0x1a
 1438 0517 F5030000 		.4byte	.LASF55
 1439 051b 01       		.byte	0x1
 1440 051c 26       		.byte	0x26
 1441 051d 27050000 		.4byte	0x527
 1442 0521 05       		.uleb128 0x5
 1443 0522 03       		.byte	0x3
 1444 0523 00000000 		.4byte	ADC_SAR_2_countsPer10Volt
 1445 0527 08       		.uleb128 0x8
 1446 0528 B7000000 		.4byte	0xb7
 1447 052c 1A       		.uleb128 0x1a
 1448 052d 1F020000 		.4byte	.LASF56
 1449 0531 01       		.byte	0x1
 1450 0532 27       		.byte	0x27
 1451 0533 00050000 		.4byte	0x500
 1452 0537 05       		.uleb128 0x5
 1453 0538 03       		.byte	0x3
 1454 0539 00000000 		.4byte	ADC_SAR_2_shift
 1455 053d 1B       		.uleb128 0x1b
 1456 053e C3020000 		.4byte	.LASF57
 1457 0542 03       		.byte	0x3
 1458 0543 80       		.byte	0x80
 1459 0544 4E050000 		.4byte	0x54e
 1460 0548 1C       		.uleb128 0x1c
 1461 0549 80000000 		.4byte	0x80
 1462 054d 00       		.byte	0
 1463 054e 1D       		.uleb128 0x1d
 1464 054f A9010000 		.4byte	.LASF68
 1465 0553 03       		.byte	0x3
 1466 0554 7E       		.byte	0x7e
 1467 0555 80000000 		.4byte	0x80
 1468 0559 1B       		.uleb128 0x1b
 1469 055a 0D010000 		.4byte	.LASF58
 1470 055e 03       		.byte	0x3
 1471 055f 78       		.byte	0x78
 1472 0560 6A050000 		.4byte	0x56a
 1473 0564 1C       		.uleb128 0x1c
 1474 0565 8B000000 		.4byte	0x8b
 1475 0569 00       		.byte	0
 1476 056a 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 43


 1477 056b 0F000000 		.4byte	.LASF59
 1478 056f 03       		.byte	0x3
 1479 0570 7F       		.byte	0x7f
 1480 0571 7B050000 		.4byte	0x57b
 1481 0575 1C       		.uleb128 0x1c
 1482 0576 80000000 		.4byte	0x80
 1483 057a 00       		.byte	0
 1484 057b 1B       		.uleb128 0x1b
 1485 057c 87020000 		.4byte	.LASF60
 1486 0580 03       		.byte	0x3
 1487 0581 8C       		.byte	0x8c
 1488 0582 91050000 		.4byte	0x591
 1489 0586 1C       		.uleb128 0x1c
 1490 0587 80000000 		.4byte	0x80
 1491 058b 1C       		.uleb128 0x1c
 1492 058c 80000000 		.4byte	0x80
 1493 0590 00       		.byte	0
 1494 0591 1E       		.uleb128 0x1e
 1495 0592 35010000 		.4byte	.LASF61
 1496 0596 03       		.byte	0x3
 1497 0597 89       		.byte	0x89
 1498 0598 19010000 		.4byte	0x119
 1499 059c 1C       		.uleb128 0x1c
 1500 059d 80000000 		.4byte	0x80
 1501 05a1 1C       		.uleb128 0x1c
 1502 05a2 19010000 		.4byte	0x119
 1503 05a6 00       		.byte	0
 1504 05a7 00       		.byte	0
 1505              		.section	.debug_abbrev,"",%progbits
 1506              	.Ldebug_abbrev0:
 1507 0000 01       		.uleb128 0x1
 1508 0001 11       		.uleb128 0x11
 1509 0002 01       		.byte	0x1
 1510 0003 25       		.uleb128 0x25
 1511 0004 0E       		.uleb128 0xe
 1512 0005 13       		.uleb128 0x13
 1513 0006 0B       		.uleb128 0xb
 1514 0007 03       		.uleb128 0x3
 1515 0008 0E       		.uleb128 0xe
 1516 0009 1B       		.uleb128 0x1b
 1517 000a 0E       		.uleb128 0xe
 1518 000b 55       		.uleb128 0x55
 1519 000c 17       		.uleb128 0x17
 1520 000d 11       		.uleb128 0x11
 1521 000e 01       		.uleb128 0x1
 1522 000f 10       		.uleb128 0x10
 1523 0010 17       		.uleb128 0x17
 1524 0011 00       		.byte	0
 1525 0012 00       		.byte	0
 1526 0013 02       		.uleb128 0x2
 1527 0014 24       		.uleb128 0x24
 1528 0015 00       		.byte	0
 1529 0016 0B       		.uleb128 0xb
 1530 0017 0B       		.uleb128 0xb
 1531 0018 3E       		.uleb128 0x3e
 1532 0019 0B       		.uleb128 0xb
 1533 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 44


 1534 001b 08       		.uleb128 0x8
 1535 001c 00       		.byte	0
 1536 001d 00       		.byte	0
 1537 001e 03       		.uleb128 0x3
 1538 001f 24       		.uleb128 0x24
 1539 0020 00       		.byte	0
 1540 0021 0B       		.uleb128 0xb
 1541 0022 0B       		.uleb128 0xb
 1542 0023 3E       		.uleb128 0x3e
 1543 0024 0B       		.uleb128 0xb
 1544 0025 03       		.uleb128 0x3
 1545 0026 0E       		.uleb128 0xe
 1546 0027 00       		.byte	0
 1547 0028 00       		.byte	0
 1548 0029 04       		.uleb128 0x4
 1549 002a 0F       		.uleb128 0xf
 1550 002b 00       		.byte	0
 1551 002c 0B       		.uleb128 0xb
 1552 002d 0B       		.uleb128 0xb
 1553 002e 49       		.uleb128 0x49
 1554 002f 13       		.uleb128 0x13
 1555 0030 00       		.byte	0
 1556 0031 00       		.byte	0
 1557 0032 05       		.uleb128 0x5
 1558 0033 15       		.uleb128 0x15
 1559 0034 00       		.byte	0
 1560 0035 27       		.uleb128 0x27
 1561 0036 19       		.uleb128 0x19
 1562 0037 00       		.byte	0
 1563 0038 00       		.byte	0
 1564 0039 06       		.uleb128 0x6
 1565 003a 16       		.uleb128 0x16
 1566 003b 00       		.byte	0
 1567 003c 03       		.uleb128 0x3
 1568 003d 0E       		.uleb128 0xe
 1569 003e 3A       		.uleb128 0x3a
 1570 003f 0B       		.uleb128 0xb
 1571 0040 3B       		.uleb128 0x3b
 1572 0041 0B       		.uleb128 0xb
 1573 0042 49       		.uleb128 0x49
 1574 0043 13       		.uleb128 0x13
 1575 0044 00       		.byte	0
 1576 0045 00       		.byte	0
 1577 0046 07       		.uleb128 0x7
 1578 0047 16       		.uleb128 0x16
 1579 0048 00       		.byte	0
 1580 0049 03       		.uleb128 0x3
 1581 004a 0E       		.uleb128 0xe
 1582 004b 3A       		.uleb128 0x3a
 1583 004c 0B       		.uleb128 0xb
 1584 004d 3B       		.uleb128 0x3b
 1585 004e 05       		.uleb128 0x5
 1586 004f 49       		.uleb128 0x49
 1587 0050 13       		.uleb128 0x13
 1588 0051 00       		.byte	0
 1589 0052 00       		.byte	0
 1590 0053 08       		.uleb128 0x8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 45


 1591 0054 35       		.uleb128 0x35
 1592 0055 00       		.byte	0
 1593 0056 49       		.uleb128 0x49
 1594 0057 13       		.uleb128 0x13
 1595 0058 00       		.byte	0
 1596 0059 00       		.byte	0
 1597 005a 09       		.uleb128 0x9
 1598 005b 2E       		.uleb128 0x2e
 1599 005c 01       		.byte	0x1
 1600 005d 03       		.uleb128 0x3
 1601 005e 0E       		.uleb128 0xe
 1602 005f 3A       		.uleb128 0x3a
 1603 0060 0B       		.uleb128 0xb
 1604 0061 3B       		.uleb128 0x3b
 1605 0062 05       		.uleb128 0x5
 1606 0063 27       		.uleb128 0x27
 1607 0064 19       		.uleb128 0x19
 1608 0065 11       		.uleb128 0x11
 1609 0066 01       		.uleb128 0x1
 1610 0067 12       		.uleb128 0x12
 1611 0068 06       		.uleb128 0x6
 1612 0069 40       		.uleb128 0x40
 1613 006a 18       		.uleb128 0x18
 1614 006b 9742     		.uleb128 0x2117
 1615 006d 19       		.uleb128 0x19
 1616 006e 01       		.uleb128 0x1
 1617 006f 13       		.uleb128 0x13
 1618 0070 00       		.byte	0
 1619 0071 00       		.byte	0
 1620 0072 0A       		.uleb128 0xa
 1621 0073 05       		.uleb128 0x5
 1622 0074 00       		.byte	0
 1623 0075 03       		.uleb128 0x3
 1624 0076 0E       		.uleb128 0xe
 1625 0077 3A       		.uleb128 0x3a
 1626 0078 0B       		.uleb128 0xb
 1627 0079 3B       		.uleb128 0x3b
 1628 007a 05       		.uleb128 0x5
 1629 007b 49       		.uleb128 0x49
 1630 007c 13       		.uleb128 0x13
 1631 007d 02       		.uleb128 0x2
 1632 007e 17       		.uleb128 0x17
 1633 007f 00       		.byte	0
 1634 0080 00       		.byte	0
 1635 0081 0B       		.uleb128 0xb
 1636 0082 34       		.uleb128 0x34
 1637 0083 00       		.byte	0
 1638 0084 03       		.uleb128 0x3
 1639 0085 0E       		.uleb128 0xe
 1640 0086 3A       		.uleb128 0x3a
 1641 0087 0B       		.uleb128 0xb
 1642 0088 3B       		.uleb128 0x3b
 1643 0089 05       		.uleb128 0x5
 1644 008a 49       		.uleb128 0x49
 1645 008b 13       		.uleb128 0x13
 1646 008c 02       		.uleb128 0x2
 1647 008d 17       		.uleb128 0x17
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 46


 1648 008e 00       		.byte	0
 1649 008f 00       		.byte	0
 1650 0090 0C       		.uleb128 0xc
 1651 0091 898201   		.uleb128 0x4109
 1652 0094 01       		.byte	0x1
 1653 0095 11       		.uleb128 0x11
 1654 0096 01       		.uleb128 0x1
 1655 0097 31       		.uleb128 0x31
 1656 0098 13       		.uleb128 0x13
 1657 0099 00       		.byte	0
 1658 009a 00       		.byte	0
 1659 009b 0D       		.uleb128 0xd
 1660 009c 8A8201   		.uleb128 0x410a
 1661 009f 00       		.byte	0
 1662 00a0 02       		.uleb128 0x2
 1663 00a1 18       		.uleb128 0x18
 1664 00a2 9142     		.uleb128 0x2111
 1665 00a4 18       		.uleb128 0x18
 1666 00a5 00       		.byte	0
 1667 00a6 00       		.byte	0
 1668 00a7 0E       		.uleb128 0xe
 1669 00a8 2E       		.uleb128 0x2e
 1670 00a9 01       		.byte	0x1
 1671 00aa 3F       		.uleb128 0x3f
 1672 00ab 19       		.uleb128 0x19
 1673 00ac 03       		.uleb128 0x3
 1674 00ad 0E       		.uleb128 0xe
 1675 00ae 3A       		.uleb128 0x3a
 1676 00af 0B       		.uleb128 0xb
 1677 00b0 3B       		.uleb128 0x3b
 1678 00b1 0B       		.uleb128 0xb
 1679 00b2 27       		.uleb128 0x27
 1680 00b3 19       		.uleb128 0x19
 1681 00b4 11       		.uleb128 0x11
 1682 00b5 01       		.uleb128 0x1
 1683 00b6 12       		.uleb128 0x12
 1684 00b7 06       		.uleb128 0x6
 1685 00b8 40       		.uleb128 0x40
 1686 00b9 18       		.uleb128 0x18
 1687 00ba 9742     		.uleb128 0x2117
 1688 00bc 19       		.uleb128 0x19
 1689 00bd 01       		.uleb128 0x1
 1690 00be 13       		.uleb128 0x13
 1691 00bf 00       		.byte	0
 1692 00c0 00       		.byte	0
 1693 00c1 0F       		.uleb128 0xf
 1694 00c2 34       		.uleb128 0x34
 1695 00c3 00       		.byte	0
 1696 00c4 03       		.uleb128 0x3
 1697 00c5 0E       		.uleb128 0xe
 1698 00c6 3A       		.uleb128 0x3a
 1699 00c7 0B       		.uleb128 0xb
 1700 00c8 3B       		.uleb128 0x3b
 1701 00c9 0B       		.uleb128 0xb
 1702 00ca 49       		.uleb128 0x49
 1703 00cb 13       		.uleb128 0x13
 1704 00cc 02       		.uleb128 0x2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 47


 1705 00cd 17       		.uleb128 0x17
 1706 00ce 00       		.byte	0
 1707 00cf 00       		.byte	0
 1708 00d0 10       		.uleb128 0x10
 1709 00d1 898201   		.uleb128 0x4109
 1710 00d4 00       		.byte	0
 1711 00d5 11       		.uleb128 0x11
 1712 00d6 01       		.uleb128 0x1
 1713 00d7 31       		.uleb128 0x31
 1714 00d8 13       		.uleb128 0x13
 1715 00d9 00       		.byte	0
 1716 00da 00       		.byte	0
 1717 00db 11       		.uleb128 0x11
 1718 00dc 898201   		.uleb128 0x4109
 1719 00df 01       		.byte	0x1
 1720 00e0 11       		.uleb128 0x11
 1721 00e1 01       		.uleb128 0x1
 1722 00e2 31       		.uleb128 0x31
 1723 00e3 13       		.uleb128 0x13
 1724 00e4 01       		.uleb128 0x1
 1725 00e5 13       		.uleb128 0x13
 1726 00e6 00       		.byte	0
 1727 00e7 00       		.byte	0
 1728 00e8 12       		.uleb128 0x12
 1729 00e9 2E       		.uleb128 0x2e
 1730 00ea 01       		.byte	0x1
 1731 00eb 3F       		.uleb128 0x3f
 1732 00ec 19       		.uleb128 0x19
 1733 00ed 03       		.uleb128 0x3
 1734 00ee 0E       		.uleb128 0xe
 1735 00ef 3A       		.uleb128 0x3a
 1736 00f0 0B       		.uleb128 0xb
 1737 00f1 3B       		.uleb128 0x3b
 1738 00f2 05       		.uleb128 0x5
 1739 00f3 27       		.uleb128 0x27
 1740 00f4 19       		.uleb128 0x19
 1741 00f5 11       		.uleb128 0x11
 1742 00f6 01       		.uleb128 0x1
 1743 00f7 12       		.uleb128 0x12
 1744 00f8 06       		.uleb128 0x6
 1745 00f9 40       		.uleb128 0x40
 1746 00fa 18       		.uleb128 0x18
 1747 00fb 9742     		.uleb128 0x2117
 1748 00fd 19       		.uleb128 0x19
 1749 00fe 01       		.uleb128 0x1
 1750 00ff 13       		.uleb128 0x13
 1751 0100 00       		.byte	0
 1752 0101 00       		.byte	0
 1753 0102 13       		.uleb128 0x13
 1754 0103 2E       		.uleb128 0x2e
 1755 0104 01       		.byte	0x1
 1756 0105 3F       		.uleb128 0x3f
 1757 0106 19       		.uleb128 0x19
 1758 0107 03       		.uleb128 0x3
 1759 0108 0E       		.uleb128 0xe
 1760 0109 3A       		.uleb128 0x3a
 1761 010a 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 48


 1762 010b 3B       		.uleb128 0x3b
 1763 010c 05       		.uleb128 0x5
 1764 010d 27       		.uleb128 0x27
 1765 010e 19       		.uleb128 0x19
 1766 010f 49       		.uleb128 0x49
 1767 0110 13       		.uleb128 0x13
 1768 0111 11       		.uleb128 0x11
 1769 0112 01       		.uleb128 0x1
 1770 0113 12       		.uleb128 0x12
 1771 0114 06       		.uleb128 0x6
 1772 0115 40       		.uleb128 0x40
 1773 0116 18       		.uleb128 0x18
 1774 0117 9742     		.uleb128 0x2117
 1775 0119 19       		.uleb128 0x19
 1776 011a 01       		.uleb128 0x1
 1777 011b 13       		.uleb128 0x13
 1778 011c 00       		.byte	0
 1779 011d 00       		.byte	0
 1780 011e 14       		.uleb128 0x14
 1781 011f 2E       		.uleb128 0x2e
 1782 0120 00       		.byte	0
 1783 0121 3F       		.uleb128 0x3f
 1784 0122 19       		.uleb128 0x19
 1785 0123 03       		.uleb128 0x3
 1786 0124 0E       		.uleb128 0xe
 1787 0125 3A       		.uleb128 0x3a
 1788 0126 0B       		.uleb128 0xb
 1789 0127 3B       		.uleb128 0x3b
 1790 0128 05       		.uleb128 0x5
 1791 0129 27       		.uleb128 0x27
 1792 012a 19       		.uleb128 0x19
 1793 012b 49       		.uleb128 0x49
 1794 012c 13       		.uleb128 0x13
 1795 012d 11       		.uleb128 0x11
 1796 012e 01       		.uleb128 0x1
 1797 012f 12       		.uleb128 0x12
 1798 0130 06       		.uleb128 0x6
 1799 0131 40       		.uleb128 0x40
 1800 0132 18       		.uleb128 0x18
 1801 0133 9742     		.uleb128 0x2117
 1802 0135 19       		.uleb128 0x19
 1803 0136 00       		.byte	0
 1804 0137 00       		.byte	0
 1805 0138 15       		.uleb128 0x15
 1806 0139 34       		.uleb128 0x34
 1807 013a 00       		.byte	0
 1808 013b 03       		.uleb128 0x3
 1809 013c 08       		.uleb128 0x8
 1810 013d 3A       		.uleb128 0x3a
 1811 013e 0B       		.uleb128 0xb
 1812 013f 3B       		.uleb128 0x3b
 1813 0140 05       		.uleb128 0x5
 1814 0141 49       		.uleb128 0x49
 1815 0142 13       		.uleb128 0x13
 1816 0143 02       		.uleb128 0x2
 1817 0144 18       		.uleb128 0x18
 1818 0145 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 49


 1819 0146 00       		.byte	0
 1820 0147 16       		.uleb128 0x16
 1821 0148 05       		.uleb128 0x5
 1822 0149 00       		.byte	0
 1823 014a 03       		.uleb128 0x3
 1824 014b 0E       		.uleb128 0xe
 1825 014c 3A       		.uleb128 0x3a
 1826 014d 0B       		.uleb128 0xb
 1827 014e 3B       		.uleb128 0x3b
 1828 014f 05       		.uleb128 0x5
 1829 0150 49       		.uleb128 0x49
 1830 0151 13       		.uleb128 0x13
 1831 0152 02       		.uleb128 0x2
 1832 0153 18       		.uleb128 0x18
 1833 0154 00       		.byte	0
 1834 0155 00       		.byte	0
 1835 0156 17       		.uleb128 0x17
 1836 0157 34       		.uleb128 0x34
 1837 0158 00       		.byte	0
 1838 0159 03       		.uleb128 0x3
 1839 015a 0E       		.uleb128 0xe
 1840 015b 3A       		.uleb128 0x3a
 1841 015c 0B       		.uleb128 0xb
 1842 015d 3B       		.uleb128 0x3b
 1843 015e 05       		.uleb128 0x5
 1844 015f 49       		.uleb128 0x49
 1845 0160 13       		.uleb128 0x13
 1846 0161 02       		.uleb128 0x2
 1847 0162 18       		.uleb128 0x18
 1848 0163 00       		.byte	0
 1849 0164 00       		.byte	0
 1850 0165 18       		.uleb128 0x18
 1851 0166 2E       		.uleb128 0x2e
 1852 0167 01       		.byte	0x1
 1853 0168 3F       		.uleb128 0x3f
 1854 0169 19       		.uleb128 0x19
 1855 016a 03       		.uleb128 0x3
 1856 016b 0E       		.uleb128 0xe
 1857 016c 3A       		.uleb128 0x3a
 1858 016d 0B       		.uleb128 0xb
 1859 016e 3B       		.uleb128 0x3b
 1860 016f 05       		.uleb128 0x5
 1861 0170 27       		.uleb128 0x27
 1862 0171 19       		.uleb128 0x19
 1863 0172 49       		.uleb128 0x49
 1864 0173 13       		.uleb128 0x13
 1865 0174 11       		.uleb128 0x11
 1866 0175 01       		.uleb128 0x1
 1867 0176 12       		.uleb128 0x12
 1868 0177 06       		.uleb128 0x6
 1869 0178 40       		.uleb128 0x40
 1870 0179 18       		.uleb128 0x18
 1871 017a 9642     		.uleb128 0x2116
 1872 017c 19       		.uleb128 0x19
 1873 017d 01       		.uleb128 0x1
 1874 017e 13       		.uleb128 0x13
 1875 017f 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 50


 1876 0180 00       		.byte	0
 1877 0181 19       		.uleb128 0x19
 1878 0182 34       		.uleb128 0x34
 1879 0183 00       		.byte	0
 1880 0184 03       		.uleb128 0x3
 1881 0185 0E       		.uleb128 0xe
 1882 0186 3A       		.uleb128 0x3a
 1883 0187 0B       		.uleb128 0xb
 1884 0188 3B       		.uleb128 0x3b
 1885 0189 05       		.uleb128 0x5
 1886 018a 49       		.uleb128 0x49
 1887 018b 13       		.uleb128 0x13
 1888 018c 00       		.byte	0
 1889 018d 00       		.byte	0
 1890 018e 1A       		.uleb128 0x1a
 1891 018f 34       		.uleb128 0x34
 1892 0190 00       		.byte	0
 1893 0191 03       		.uleb128 0x3
 1894 0192 0E       		.uleb128 0xe
 1895 0193 3A       		.uleb128 0x3a
 1896 0194 0B       		.uleb128 0xb
 1897 0195 3B       		.uleb128 0x3b
 1898 0196 0B       		.uleb128 0xb
 1899 0197 49       		.uleb128 0x49
 1900 0198 13       		.uleb128 0x13
 1901 0199 3F       		.uleb128 0x3f
 1902 019a 19       		.uleb128 0x19
 1903 019b 02       		.uleb128 0x2
 1904 019c 18       		.uleb128 0x18
 1905 019d 00       		.byte	0
 1906 019e 00       		.byte	0
 1907 019f 1B       		.uleb128 0x1b
 1908 01a0 2E       		.uleb128 0x2e
 1909 01a1 01       		.byte	0x1
 1910 01a2 3F       		.uleb128 0x3f
 1911 01a3 19       		.uleb128 0x19
 1912 01a4 03       		.uleb128 0x3
 1913 01a5 0E       		.uleb128 0xe
 1914 01a6 3A       		.uleb128 0x3a
 1915 01a7 0B       		.uleb128 0xb
 1916 01a8 3B       		.uleb128 0x3b
 1917 01a9 0B       		.uleb128 0xb
 1918 01aa 27       		.uleb128 0x27
 1919 01ab 19       		.uleb128 0x19
 1920 01ac 3C       		.uleb128 0x3c
 1921 01ad 19       		.uleb128 0x19
 1922 01ae 01       		.uleb128 0x1
 1923 01af 13       		.uleb128 0x13
 1924 01b0 00       		.byte	0
 1925 01b1 00       		.byte	0
 1926 01b2 1C       		.uleb128 0x1c
 1927 01b3 05       		.uleb128 0x5
 1928 01b4 00       		.byte	0
 1929 01b5 49       		.uleb128 0x49
 1930 01b6 13       		.uleb128 0x13
 1931 01b7 00       		.byte	0
 1932 01b8 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 51


 1933 01b9 1D       		.uleb128 0x1d
 1934 01ba 2E       		.uleb128 0x2e
 1935 01bb 00       		.byte	0
 1936 01bc 3F       		.uleb128 0x3f
 1937 01bd 19       		.uleb128 0x19
 1938 01be 03       		.uleb128 0x3
 1939 01bf 0E       		.uleb128 0xe
 1940 01c0 3A       		.uleb128 0x3a
 1941 01c1 0B       		.uleb128 0xb
 1942 01c2 3B       		.uleb128 0x3b
 1943 01c3 0B       		.uleb128 0xb
 1944 01c4 27       		.uleb128 0x27
 1945 01c5 19       		.uleb128 0x19
 1946 01c6 49       		.uleb128 0x49
 1947 01c7 13       		.uleb128 0x13
 1948 01c8 3C       		.uleb128 0x3c
 1949 01c9 19       		.uleb128 0x19
 1950 01ca 00       		.byte	0
 1951 01cb 00       		.byte	0
 1952 01cc 1E       		.uleb128 0x1e
 1953 01cd 2E       		.uleb128 0x2e
 1954 01ce 01       		.byte	0x1
 1955 01cf 3F       		.uleb128 0x3f
 1956 01d0 19       		.uleb128 0x19
 1957 01d1 03       		.uleb128 0x3
 1958 01d2 0E       		.uleb128 0xe
 1959 01d3 3A       		.uleb128 0x3a
 1960 01d4 0B       		.uleb128 0xb
 1961 01d5 3B       		.uleb128 0x3b
 1962 01d6 0B       		.uleb128 0xb
 1963 01d7 27       		.uleb128 0x27
 1964 01d8 19       		.uleb128 0x19
 1965 01d9 49       		.uleb128 0x49
 1966 01da 13       		.uleb128 0x13
 1967 01db 3C       		.uleb128 0x3c
 1968 01dc 19       		.uleb128 0x19
 1969 01dd 00       		.byte	0
 1970 01de 00       		.byte	0
 1971 01df 00       		.byte	0
 1972              		.section	.debug_loc,"",%progbits
 1973              	.Ldebug_loc0:
 1974              	.LLST0:
 1975 0000 00000000 		.4byte	.LVL0
 1976 0004 1E000000 		.4byte	.LVL3
 1977 0008 0100     		.2byte	0x1
 1978 000a 50       		.byte	0x50
 1979 000b 1E000000 		.4byte	.LVL3
 1980 000f 26000000 		.4byte	.LVL5
 1981 0013 0400     		.2byte	0x4
 1982 0015 F3       		.byte	0xf3
 1983 0016 01       		.uleb128 0x1
 1984 0017 50       		.byte	0x50
 1985 0018 9F       		.byte	0x9f
 1986 0019 26000000 		.4byte	.LVL5
 1987 001d 2A000000 		.4byte	.LVL6
 1988 0021 0100     		.2byte	0x1
 1989 0023 50       		.byte	0x50
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 52


 1990 0024 2A000000 		.4byte	.LVL6
 1991 0028 64000000 		.4byte	.LFE10
 1992 002c 0400     		.2byte	0x4
 1993 002e F3       		.byte	0xf3
 1994 002f 01       		.uleb128 0x1
 1995 0030 50       		.byte	0x50
 1996 0031 9F       		.byte	0x9f
 1997 0032 00000000 		.4byte	0
 1998 0036 00000000 		.4byte	0
 1999              	.LLST1:
 2000 003a 16000000 		.4byte	.LVL1
 2001 003e 1C000000 		.4byte	.LVL2
 2002 0042 0400     		.2byte	0x4
 2003 0044 0A       		.byte	0xa
 2004 0045 0001     		.2byte	0x100
 2005 0047 9F       		.byte	0x9f
 2006 0048 1C000000 		.4byte	.LVL2
 2007 004c 26000000 		.4byte	.LVL5
 2008 0050 0200     		.2byte	0x2
 2009 0052 30       		.byte	0x30
 2010 0053 9F       		.byte	0x9f
 2011 0054 2A000000 		.4byte	.LVL6
 2012 0058 3E000000 		.4byte	.LVL7
 2013 005c 0100     		.2byte	0x1
 2014 005e 52       		.byte	0x52
 2015 005f 00000000 		.4byte	0
 2016 0063 00000000 		.4byte	0
 2017              	.LLST2:
 2018 0067 24000000 		.4byte	.LVL10
 2019 006b 28000000 		.4byte	.LVL11
 2020 006f 0500     		.2byte	0x5
 2021 0071 73       		.byte	0x73
 2022 0072 00       		.sleb128 0
 2023 0073 32       		.byte	0x32
 2024 0074 21       		.byte	0x21
 2025 0075 9F       		.byte	0x9f
 2026 0076 28000000 		.4byte	.LVL11
 2027 007a 2E000000 		.4byte	.LVL12
 2028 007e 0100     		.2byte	0x1
 2029 0080 53       		.byte	0x53
 2030 0081 2E000000 		.4byte	.LVL12
 2031 0085 30000000 		.4byte	.LVL13
 2032 0089 0500     		.2byte	0x5
 2033 008b 0C       		.byte	0xc
 2034 008c 0B590040 		.4byte	0x4000590b
 2035 0090 00000000 		.4byte	0
 2036 0094 00000000 		.4byte	0
 2037              	.LLST3:
 2038 0098 08000000 		.4byte	.LVL9
 2039 009c 6E000000 		.4byte	.LVL16
 2040 00a0 0100     		.2byte	0x1
 2041 00a2 54       		.byte	0x54
 2042 00a3 00000000 		.4byte	0
 2043 00a7 00000000 		.4byte	0
 2044              	.LLST4:
 2045 00ab 06000000 		.4byte	.LVL17
 2046 00af 2B000000 		.4byte	.LVL18-1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 53


 2047 00b3 0100     		.2byte	0x1
 2048 00b5 50       		.byte	0x50
 2049 00b6 00000000 		.4byte	0
 2050 00ba 00000000 		.4byte	0
 2051              	.LLST5:
 2052 00be 00000000 		.4byte	.LVL19
 2053 00c2 04000000 		.4byte	.LVL20
 2054 00c6 0100     		.2byte	0x1
 2055 00c8 50       		.byte	0x50
 2056 00c9 04000000 		.4byte	.LVL20
 2057 00cd 10000000 		.4byte	.LVL22
 2058 00d1 0100     		.2byte	0x1
 2059 00d3 50       		.byte	0x50
 2060 00d4 00000000 		.4byte	0
 2061 00d8 00000000 		.4byte	0
 2062              	.LLST6:
 2063 00dc 0C000000 		.4byte	.LVL21
 2064 00e0 10000000 		.4byte	.LVL22
 2065 00e4 0100     		.2byte	0x1
 2066 00e6 53       		.byte	0x53
 2067 00e7 10000000 		.4byte	.LVL22
 2068 00eb 18000000 		.4byte	.LFE4
 2069 00ef 0100     		.2byte	0x1
 2070 00f1 50       		.byte	0x50
 2071 00f2 00000000 		.4byte	0
 2072 00f6 00000000 		.4byte	0
 2073              	.LLST7:
 2074 00fa 00000000 		.4byte	.LVL23
 2075 00fe 1C000000 		.4byte	.LVL26
 2076 0102 0100     		.2byte	0x1
 2077 0104 50       		.byte	0x50
 2078 0105 1C000000 		.4byte	.LVL26
 2079 0109 24000000 		.4byte	.LVL28
 2080 010d 0400     		.2byte	0x4
 2081 010f F3       		.byte	0xf3
 2082 0110 01       		.uleb128 0x1
 2083 0111 50       		.byte	0x50
 2084 0112 9F       		.byte	0x9f
 2085 0113 24000000 		.4byte	.LVL28
 2086 0117 26000000 		.4byte	.LVL29
 2087 011b 0100     		.2byte	0x1
 2088 011d 50       		.byte	0x50
 2089 011e 26000000 		.4byte	.LVL29
 2090 0122 38000000 		.4byte	.LFE5
 2091 0126 0400     		.2byte	0x4
 2092 0128 F3       		.byte	0xf3
 2093 0129 01       		.uleb128 0x1
 2094 012a 50       		.byte	0x50
 2095 012b 9F       		.byte	0x9f
 2096 012c 00000000 		.4byte	0
 2097 0130 00000000 		.4byte	0
 2098              	.LLST8:
 2099 0134 16000000 		.4byte	.LVL24
 2100 0138 1A000000 		.4byte	.LVL25
 2101 013c 0300     		.2byte	0x3
 2102 013e 08       		.byte	0x8
 2103 013f 42       		.byte	0x42
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 54


 2104 0140 9F       		.byte	0x9f
 2105 0141 1A000000 		.4byte	.LVL25
 2106 0145 24000000 		.4byte	.LVL28
 2107 0149 0300     		.2byte	0x3
 2108 014b 09       		.byte	0x9
 2109 014c C2       		.byte	0xc2
 2110 014d 9F       		.byte	0x9f
 2111 014e 26000000 		.4byte	.LVL29
 2112 0152 2F000000 		.4byte	.LVL30-1
 2113 0156 0100     		.2byte	0x1
 2114 0158 52       		.byte	0x52
 2115 0159 00000000 		.4byte	0
 2116 015d 00000000 		.4byte	0
 2117              	.LLST9:
 2118 0161 00000000 		.4byte	.LVL36
 2119 0165 14000000 		.4byte	.LVL38
 2120 0169 0100     		.2byte	0x1
 2121 016b 50       		.byte	0x50
 2122 016c 14000000 		.4byte	.LVL38
 2123 0170 24000000 		.4byte	.LFE6
 2124 0174 0400     		.2byte	0x4
 2125 0176 F3       		.byte	0xf3
 2126 0177 01       		.uleb128 0x1
 2127 0178 50       		.byte	0x50
 2128 0179 9F       		.byte	0x9f
 2129 017a 00000000 		.4byte	0
 2130 017e 00000000 		.4byte	0
 2131              	.LLST10:
 2132 0182 06000000 		.4byte	.LVL37
 2133 0186 17000000 		.4byte	.LVL39-1
 2134 018a 0500     		.2byte	0x5
 2135 018c 73       		.byte	0x73
 2136 018d 00       		.sleb128 0
 2137 018e 31       		.byte	0x31
 2138 018f 1A       		.byte	0x1a
 2139 0190 9F       		.byte	0x9f
 2140 0191 00000000 		.4byte	0
 2141 0195 00000000 		.4byte	0
 2142              	.LLST11:
 2143 0199 00000000 		.4byte	.LVL42
 2144 019d 04000000 		.4byte	.LVL43
 2145 01a1 0100     		.2byte	0x1
 2146 01a3 50       		.byte	0x50
 2147 01a4 04000000 		.4byte	.LVL43
 2148 01a8 10000000 		.4byte	.LFE11
 2149 01ac 0400     		.2byte	0x4
 2150 01ae F3       		.byte	0xf3
 2151 01af 01       		.uleb128 0x1
 2152 01b0 50       		.byte	0x50
 2153 01b1 9F       		.byte	0x9f
 2154 01b2 00000000 		.4byte	0
 2155 01b6 00000000 		.4byte	0
 2156              	.LLST12:
 2157 01ba 00000000 		.4byte	.LVL45
 2158 01be 22000000 		.4byte	.LVL49
 2159 01c2 0100     		.2byte	0x1
 2160 01c4 50       		.byte	0x50
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 55


 2161 01c5 22000000 		.4byte	.LVL49
 2162 01c9 3A000000 		.4byte	.LVL50
 2163 01cd 0100     		.2byte	0x1
 2164 01cf 52       		.byte	0x52
 2165 01d0 00000000 		.4byte	0
 2166 01d4 00000000 		.4byte	0
 2167              	.LLST13:
 2168 01d8 14000000 		.4byte	.LVL46
 2169 01dc 16000000 		.4byte	.LVL47
 2170 01e0 0100     		.2byte	0x1
 2171 01e2 51       		.byte	0x51
 2172 01e3 1A000000 		.4byte	.LVL48
 2173 01e7 54000000 		.4byte	.LFE13
 2174 01eb 0100     		.2byte	0x1
 2175 01ed 51       		.byte	0x51
 2176 01ee 00000000 		.4byte	0
 2177 01f2 00000000 		.4byte	0
 2178              	.LLST14:
 2179 01f6 00000000 		.4byte	.LVL52
 2180 01fa 20000000 		.4byte	.LVL56
 2181 01fe 0100     		.2byte	0x1
 2182 0200 50       		.byte	0x50
 2183 0201 20000000 		.4byte	.LVL56
 2184 0205 22000000 		.4byte	.LVL57
 2185 0209 0600     		.2byte	0x6
 2186 020b 70       		.byte	0x70
 2187 020c 00       		.sleb128 0
 2188 020d 74       		.byte	0x74
 2189 020e 00       		.sleb128 0
 2190 020f 1C       		.byte	0x1c
 2191 0210 9F       		.byte	0x9f
 2192 0211 00000000 		.4byte	0
 2193 0215 00000000 		.4byte	0
 2194              	.LLST15:
 2195 0219 16000000 		.4byte	.LVL53
 2196 021d 18000000 		.4byte	.LVL54
 2197 0221 0100     		.2byte	0x1
 2198 0223 52       		.byte	0x52
 2199 0224 1C000000 		.4byte	.LVL55
 2200 0228 35000000 		.4byte	.LVL58-1
 2201 022c 0100     		.2byte	0x1
 2202 022e 52       		.byte	0x52
 2203 022f 00000000 		.4byte	0
 2204 0233 00000000 		.4byte	0
 2205              	.LLST16:
 2206 0237 00000000 		.4byte	.LVL59
 2207 023b 22000000 		.4byte	.LVL63
 2208 023f 0100     		.2byte	0x1
 2209 0241 50       		.byte	0x50
 2210 0242 22000000 		.4byte	.LVL63
 2211 0246 27000000 		.4byte	.LVL64-1
 2212 024a 0100     		.2byte	0x1
 2213 024c 50       		.byte	0x50
 2214 024d 00000000 		.4byte	0
 2215 0251 00000000 		.4byte	0
 2216              	.LLST17:
 2217 0255 16000000 		.4byte	.LVL60
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 56


 2218 0259 18000000 		.4byte	.LVL61
 2219 025d 0100     		.2byte	0x1
 2220 025f 54       		.byte	0x54
 2221 0260 1C000000 		.4byte	.LVL62
 2222 0264 40000000 		.4byte	.LVL68
 2223 0268 0100     		.2byte	0x1
 2224 026a 54       		.byte	0x54
 2225 026b 00000000 		.4byte	0
 2226 026f 00000000 		.4byte	0
 2227              		.section	.debug_aranges,"",%progbits
 2228 0000 94000000 		.4byte	0x94
 2229 0004 0200     		.2byte	0x2
 2230 0006 00000000 		.4byte	.Ldebug_info0
 2231 000a 04       		.byte	0x4
 2232 000b 00       		.byte	0
 2233 000c 0000     		.2byte	0
 2234 000e 0000     		.2byte	0
 2235 0010 00000000 		.4byte	.LFB10
 2236 0014 64000000 		.4byte	.LFE10-.LFB10
 2237 0018 00000000 		.4byte	.LFB2
 2238 001c 80000000 		.4byte	.LFE2-.LFB2
 2239 0020 00000000 		.4byte	.LFB3
 2240 0024 34000000 		.4byte	.LFE3-.LFB3
 2241 0028 00000000 		.4byte	.LFB4
 2242 002c 18000000 		.4byte	.LFE4-.LFB4
 2243 0030 00000000 		.4byte	.LFB5
 2244 0034 38000000 		.4byte	.LFE5-.LFB5
 2245 0038 00000000 		.4byte	.LFB1
 2246 003c 38000000 		.4byte	.LFE1-.LFB1
 2247 0040 00000000 		.4byte	.LFB0
 2248 0044 1C000000 		.4byte	.LFE0-.LFB0
 2249 0048 00000000 		.4byte	.LFB6
 2250 004c 24000000 		.4byte	.LFE6-.LFB6
 2251 0050 00000000 		.4byte	.LFB7
 2252 0054 18000000 		.4byte	.LFE7-.LFB7
 2253 0058 00000000 		.4byte	.LFB8
 2254 005c 18000000 		.4byte	.LFE8-.LFB8
 2255 0060 00000000 		.4byte	.LFB9
 2256 0064 0C000000 		.4byte	.LFE9-.LFB9
 2257 0068 00000000 		.4byte	.LFB11
 2258 006c 10000000 		.4byte	.LFE11-.LFB11
 2259 0070 00000000 		.4byte	.LFB12
 2260 0074 0C000000 		.4byte	.LFE12-.LFB12
 2261 0078 00000000 		.4byte	.LFB13
 2262 007c 54000000 		.4byte	.LFE13-.LFB13
 2263 0080 00000000 		.4byte	.LFB14
 2264 0084 48000000 		.4byte	.LFE14-.LFB14
 2265 0088 00000000 		.4byte	.LFB15
 2266 008c 50000000 		.4byte	.LFE15-.LFB15
 2267 0090 00000000 		.4byte	0
 2268 0094 00000000 		.4byte	0
 2269              		.section	.debug_ranges,"",%progbits
 2270              	.Ldebug_ranges0:
 2271 0000 00000000 		.4byte	.LFB10
 2272 0004 64000000 		.4byte	.LFE10
 2273 0008 00000000 		.4byte	.LFB2
 2274 000c 80000000 		.4byte	.LFE2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 57


 2275 0010 00000000 		.4byte	.LFB3
 2276 0014 34000000 		.4byte	.LFE3
 2277 0018 00000000 		.4byte	.LFB4
 2278 001c 18000000 		.4byte	.LFE4
 2279 0020 00000000 		.4byte	.LFB5
 2280 0024 38000000 		.4byte	.LFE5
 2281 0028 00000000 		.4byte	.LFB1
 2282 002c 38000000 		.4byte	.LFE1
 2283 0030 00000000 		.4byte	.LFB0
 2284 0034 1C000000 		.4byte	.LFE0
 2285 0038 00000000 		.4byte	.LFB6
 2286 003c 24000000 		.4byte	.LFE6
 2287 0040 00000000 		.4byte	.LFB7
 2288 0044 18000000 		.4byte	.LFE7
 2289 0048 00000000 		.4byte	.LFB8
 2290 004c 18000000 		.4byte	.LFE8
 2291 0050 00000000 		.4byte	.LFB9
 2292 0054 0C000000 		.4byte	.LFE9
 2293 0058 00000000 		.4byte	.LFB11
 2294 005c 10000000 		.4byte	.LFE11
 2295 0060 00000000 		.4byte	.LFB12
 2296 0064 0C000000 		.4byte	.LFE12
 2297 0068 00000000 		.4byte	.LFB13
 2298 006c 54000000 		.4byte	.LFE13
 2299 0070 00000000 		.4byte	.LFB14
 2300 0074 48000000 		.4byte	.LFE14
 2301 0078 00000000 		.4byte	.LFB15
 2302 007c 50000000 		.4byte	.LFE15
 2303 0080 00000000 		.4byte	0
 2304 0084 00000000 		.4byte	0
 2305              		.section	.debug_line,"",%progbits
 2306              	.Ldebug_line0:
 2307 0000 E3010000 		.section	.debug_str,"MS",%progbits,1
 2307      02005300 
 2307      00000201 
 2307      FB0E0D00 
 2307      01010101 
 2308              	.LASF12:
 2309 0000 75696E74 		.ascii	"uint16\000"
 2309      313600
 2310              	.LASF43:
 2311 0007 61646347 		.ascii	"adcGain\000"
 2311      61696E00 
 2312              	.LASF59:
 2313 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 2313      69744372 
 2313      69746963 
 2313      616C5365 
 2313      6374696F 
 2314              	.LASF40:
 2315 0025 4144435F 		.ascii	"ADC_SAR_2_SetOffset\000"
 2315      5341525F 
 2315      325F5365 
 2315      744F6666 
 2315      73657400 
 2316              	.LASF25:
 2317 0039 636F756E 		.ascii	"counts\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 58


 2317      747300
 2318              	.LASF65:
 2319 0040 4144435F 		.ascii	"ADC_SAR_2_CalcGain\000"
 2319      5341525F 
 2319      325F4361 
 2319      6C634761 
 2319      696E00
 2320              	.LASF42:
 2321 0053 4144435F 		.ascii	"ADC_SAR_2_SetGain\000"
 2321      5341525F 
 2321      325F5365 
 2321      74476169 
 2321      6E00
 2322              	.LASF35:
 2323 0065 4144435F 		.ascii	"ADC_SAR_2_Start\000"
 2323      5341525F 
 2323      325F5374 
 2323      61727400 
 2324              	.LASF8:
 2325 0075 6C6F6E67 		.ascii	"long long unsigned int\000"
 2325      206C6F6E 
 2325      6720756E 
 2325      7369676E 
 2325      65642069 
 2326              	.LASF52:
 2327 008c 4144435F 		.ascii	"ADC_SAR_2_initVar\000"
 2327      5341525F 
 2327      325F696E 
 2327      69745661 
 2327      7200
 2328              	.LASF29:
 2329 009e 4144435F 		.ascii	"ADC_SAR_2_Stop\000"
 2329      5341525F 
 2329      325F5374 
 2329      6F7000
 2330              	.LASF7:
 2331 00ad 6C6F6E67 		.ascii	"long long int\000"
 2331      206C6F6E 
 2331      6720696E 
 2331      7400
 2332              	.LASF1:
 2333 00bb 7369676E 		.ascii	"signed char\000"
 2333      65642063 
 2333      68617200 
 2334              	.LASF16:
 2335 00c7 696E7433 		.ascii	"int32\000"
 2335      3200
 2336              	.LASF5:
 2337 00cd 6C6F6E67 		.ascii	"long int\000"
 2337      20696E74 
 2337      00
 2338              	.LASF53:
 2339 00d6 4144435F 		.ascii	"ADC_SAR_2_offset\000"
 2339      5341525F 
 2339      325F6F66 
 2339      66736574 
 2339      00
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 59


 2340              	.LASF49:
 2341 00e7 4144435F 		.ascii	"ADC_SAR_2_CountsTo_uVolts\000"
 2341      5341525F 
 2341      325F436F 
 2341      756E7473 
 2341      546F5F75 
 2342              	.LASF22:
 2343 0101 72656731 		.ascii	"reg16\000"
 2343      3600
 2344              	.LASF11:
 2345 0107 75696E74 		.ascii	"uint8\000"
 2345      3800
 2346              	.LASF58:
 2347 010d 43794465 		.ascii	"CyDelayUs\000"
 2347      6C617955 
 2347      7300
 2348              	.LASF19:
 2349 0117 646F7562 		.ascii	"double\000"
 2349      6C6500
 2350              	.LASF13:
 2351 011e 75696E74 		.ascii	"uint32\000"
 2351      333200
 2352              	.LASF48:
 2353 0125 636F756E 		.ascii	"countsPer10Volt\000"
 2353      74735065 
 2353      72313056 
 2353      6F6C7400 
 2354              	.LASF61:
 2355 0135 4379496E 		.ascii	"CyIntSetVector\000"
 2355      74536574 
 2355      56656374 
 2355      6F7200
 2356              	.LASF50:
 2357 0144 4144435F 		.ascii	"ADC_SAR_2_CountsTo_Volts\000"
 2357      5341525F 
 2357      325F436F 
 2357      756E7473 
 2357      546F5F56 
 2358              	.LASF36:
 2359 015d 7265744D 		.ascii	"retMode\000"
 2359      6F646500 
 2360              	.LASF0:
 2361 0165 756E7369 		.ascii	"unsigned int\000"
 2361      676E6564 
 2361      20696E74 
 2361      00
 2362              	.LASF33:
 2363 0172 4144435F 		.ascii	"ADC_SAR_2_SetResolution\000"
 2363      5341525F 
 2363      325F5365 
 2363      74526573 
 2363      6F6C7574 
 2364              	.LASF67:
 2365 018a 75566F6C 		.ascii	"uVolts\000"
 2365      747300
 2366              	.LASF6:
 2367 0191 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 60


 2367      20756E73 
 2367      69676E65 
 2367      6420696E 
 2367      7400
 2368              	.LASF51:
 2369 01a3 766F6C74 		.ascii	"volts\000"
 2369      7300
 2370              	.LASF68:
 2371 01a9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2371      74657243 
 2371      72697469 
 2371      63616C53 
 2371      65637469 
 2372              	.LASF66:
 2373 01c0 4144435F 		.ascii	"ADC_SAR_2_GetResult8\000"
 2373      5341525F 
 2373      325F4765 
 2373      74526573 
 2373      756C7438 
 2374              	.LASF4:
 2375 01d5 73686F72 		.ascii	"short unsigned int\000"
 2375      7420756E 
 2375      7369676E 
 2375      65642069 
 2375      6E7400
 2376              	.LASF14:
 2377 01e8 696E7438 		.ascii	"int8\000"
 2377      00
 2378              	.LASF63:
 2379 01ed 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_2.c\000"
 2379      6E657261 
 2379      7465645F 
 2379      536F7572 
 2379      63655C50 
 2380              	.LASF47:
 2381 0212 6D566F6C 		.ascii	"mVolts\000"
 2381      747300
 2382              	.LASF23:
 2383 0219 72656733 		.ascii	"reg32\000"
 2383      3200
 2384              	.LASF56:
 2385 021f 4144435F 		.ascii	"ADC_SAR_2_shift\000"
 2385      5341525F 
 2385      325F7368 
 2385      69667400 
 2386              	.LASF17:
 2387 022f 666C6F61 		.ascii	"float32\000"
 2387      74333200 
 2388              	.LASF9:
 2389 0237 73697A65 		.ascii	"sizetype\000"
 2389      74797065 
 2389      00
 2390              	.LASF34:
 2391 0240 4144435F 		.ascii	"ADC_SAR_2_Init\000"
 2391      5341525F 
 2391      325F496E 
 2391      697400
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 61


 2392              	.LASF38:
 2393 024f 4144435F 		.ascii	"ADC_SAR_2_IsEndConversion\000"
 2393      5341525F 
 2393      325F4973 
 2393      456E6443 
 2393      6F6E7665 
 2394              	.LASF20:
 2395 0269 696E7436 		.ascii	"int64\000"
 2395      3400
 2396              	.LASF44:
 2397 026f 4144435F 		.ascii	"ADC_SAR_2_SetScaledGain\000"
 2397      5341525F 
 2397      325F5365 
 2397      74536361 
 2397      6C656447 
 2398              	.LASF60:
 2399 0287 4379496E 		.ascii	"CyIntSetPriority\000"
 2399      74536574 
 2399      5072696F 
 2399      72697479 
 2399      00
 2400              	.LASF18:
 2401 0298 666C6F61 		.ascii	"float\000"
 2401      7400
 2402              	.LASF32:
 2403 029e 706F7765 		.ascii	"power\000"
 2403      7200
 2404              	.LASF45:
 2405 02a4 4144435F 		.ascii	"ADC_SAR_2_CountsTo_mVolts\000"
 2405      5341525F 
 2405      325F436F 
 2405      756E7473 
 2405      546F5F6D 
 2406              	.LASF21:
 2407 02be 72656738 		.ascii	"reg8\000"
 2407      00
 2408              	.LASF57:
 2409 02c3 43794861 		.ascii	"CyHalt\000"
 2409      6C7400
 2410              	.LASF2:
 2411 02ca 756E7369 		.ascii	"unsigned char\000"
 2411      676E6564 
 2411      20636861 
 2411      7200
 2412              	.LASF3:
 2413 02d8 73686F72 		.ascii	"short int\000"
 2413      7420696E 
 2413      7400
 2414              	.LASF64:
 2415 02e2 433A5C46 		.ascii	"C:\\FlexSEA_alx87grd\\execute\\execute_1_0.cydsn\000"
 2415      6C657853 
 2415      45415F61 
 2415      6C783837 
 2415      6772645C 
 2416              	.LASF31:
 2417 0310 7265736F 		.ascii	"resolution\000"
 2417      6C757469 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 62


 2417      6F6E00
 2418              	.LASF10:
 2419 031b 63686172 		.ascii	"char\000"
 2419      00
 2420              	.LASF24:
 2421 0320 63796973 		.ascii	"cyisraddress\000"
 2421      72616464 
 2421      72657373 
 2421      00
 2422              	.LASF28:
 2423 032d 4144435F 		.ascii	"ADC_SAR_2_Enable\000"
 2423      5341525F 
 2423      325F456E 
 2423      61626C65 
 2423      00
 2424              	.LASF41:
 2425 033e 6F666673 		.ascii	"offset\000"
 2425      657400
 2426              	.LASF46:
 2427 0345 61646343 		.ascii	"adcCounts\000"
 2427      6F756E74 
 2427      7300
 2428              	.LASF27:
 2429 034f 656E6162 		.ascii	"enableInterrupts\000"
 2429      6C65496E 
 2429      74657272 
 2429      75707473 
 2429      00
 2430              	.LASF37:
 2431 0360 73746174 		.ascii	"status\000"
 2431      757300
 2432              	.LASF62:
 2433 0367 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2433      4320342E 
 2433      392E3320 
 2433      32303135 
 2433      30333033 
 2434 039a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2434      20726576 
 2434      6973696F 
 2434      6E203232 
 2434      31323230 
 2435 03cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2435      66756E63 
 2435      74696F6E 
 2435      2D736563 
 2435      74696F6E 
 2436              	.LASF55:
 2437 03f5 4144435F 		.ascii	"ADC_SAR_2_countsPer10Volt\000"
 2437      5341525F 
 2437      325F636F 
 2437      756E7473 
 2437      50657231 
 2438              	.LASF30:
 2439 040f 4144435F 		.ascii	"ADC_SAR_2_SetPower\000"
 2439      5341525F 
 2439      325F5365 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\cctQDPKE.s 			page 63


 2439      74506F77 
 2439      657200
 2440              	.LASF15:
 2441 0422 696E7431 		.ascii	"int16\000"
 2441      3600
 2442              	.LASF39:
 2443 0428 4144435F 		.ascii	"ADC_SAR_2_GetResult16\000"
 2443      5341525F 
 2443      325F4765 
 2443      74526573 
 2443      756C7431 
 2444              	.LASF26:
 2445 043e 746D7052 		.ascii	"tmpReg\000"
 2445      656700
 2446              	.LASF54:
 2447 0445 4144435F 		.ascii	"ADC_SAR_2_countsPerVolt\000"
 2447      5341525F 
 2447      325F636F 
 2447      756E7473 
 2447      50657256 
 2448              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
