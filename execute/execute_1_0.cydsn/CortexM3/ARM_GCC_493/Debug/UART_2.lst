ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_2_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_2_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_2_Init, %function
  24              	UART_2_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_2.c"
   1:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_2.c **** * File Name: UART_2.c
   3:.\Generated_Source\PSoC5/UART_2.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_2.c **** *
   5:.\Generated_Source\PSoC5/UART_2.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_2.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_2.c **** *
   8:.\Generated_Source\PSoC5/UART_2.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_2.c **** *
  10:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_2.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_2.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_2.c **** 
  17:.\Generated_Source\PSoC5/UART_2.c **** #include "UART_2.h"
  18:.\Generated_Source\PSoC5/UART_2.c **** #if (UART_2_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_2.c ****     #include "UART_2_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_2.c **** #endif /* End UART_2_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_2.c **** 
  22:.\Generated_Source\PSoC5/UART_2.c **** 
  23:.\Generated_Source\PSoC5/UART_2.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_2.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_2.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_2.c **** 
  27:.\Generated_Source\PSoC5/UART_2.c **** uint8 UART_2_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_2.c **** 
  29:.\Generated_Source\PSoC5/UART_2.c **** #if (UART_2_TX_INTERRUPT_ENABLED && UART_2_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_txBuffer[UART_2_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_txBufferRead = 0u;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 2


  32:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_2.c **** #endif /* (UART_2_TX_INTERRUPT_ENABLED && UART_2_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_2.c **** 
  35:.\Generated_Source\PSoC5/UART_2.c **** #if (UART_2_RX_INTERRUPT_ENABLED && (UART_2_RX_ENABLED || UART_2_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBuffer[UART_2_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_2.c ****     volatile uint8 UART_2_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_2.c ****         volatile uint8 UART_2_rxAddressMode = UART_2_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_2.c ****         volatile uint8 UART_2_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_2.c **** #endif /* (UART_2_RX_INTERRUPT_ENABLED && (UART_2_RX_ENABLED || UART_2_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_2.c **** 
  48:.\Generated_Source\PSoC5/UART_2.c **** 
  49:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Start
  51:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_2.c **** *
  53:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_2.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_2.c **** *  UART_2_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_2.c **** *  UART_2_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_2.c **** *  UART_2_Enable() function.
  58:.\Generated_Source\PSoC5/UART_2.c **** *
  59:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_2.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_2.c **** *
  62:.\Generated_Source\PSoC5/UART_2.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_2.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_2.c **** *
  65:.\Generated_Source\PSoC5/UART_2.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_2.c **** *  The UART_2_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_2.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_2.c **** *  and set to one (1u) the first time UART_2_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_2.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_2.c **** *  subsequent calls to the UART_2_Start() routine.
  71:.\Generated_Source\PSoC5/UART_2.c **** *
  72:.\Generated_Source\PSoC5/UART_2.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_2.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_2.c **** *
  75:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_2.c **** void UART_2_Start(void) 
  77:.\Generated_Source\PSoC5/UART_2.c **** {
  78:.\Generated_Source\PSoC5/UART_2.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_2.c ****     if(UART_2_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART_2.c ****     {
  81:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_Init();
  82:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART_2.c ****     }
  84:.\Generated_Source\PSoC5/UART_2.c **** 
  85:.\Generated_Source\PSoC5/UART_2.c ****     UART_2_Enable();
  86:.\Generated_Source\PSoC5/UART_2.c **** }
  87:.\Generated_Source\PSoC5/UART_2.c **** 
  88:.\Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 3


  89:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Init
  91:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_2.c **** *
  93:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_2.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_2.c **** *  dialog settings. It is not necessary to call UART_2_Init() because
  96:.\Generated_Source\PSoC5/UART_2.c **** *  the UART_2_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_2.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_2.c **** *
  99:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_2.c **** *
 102:.\Generated_Source\PSoC5/UART_2.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_2.c **** *
 105:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_2.c **** void UART_2_Init(void) 
 107:.\Generated_Source\PSoC5/UART_2.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_2.c **** 
 110:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_2.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_2.c ****             (void) CyIntSetVector(UART_2_RX_VECT_NUM, &UART_2_RXISR);
 113:.\Generated_Source\PSoC5/UART_2.c ****             CyIntSetPriority(UART_2_RX_VECT_NUM, UART_2_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_2.c **** 
 117:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddressMode(UART_2_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddress1(UART_2_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_SetRxAddress2(UART_2_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_2.c **** 
 123:.\Generated_Source\PSoC5/UART_2.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_PERIOD_REG = UART_2_RXBITCTR_INIT;
  32              		.loc 1 124 0
  33 0000 7222     		movs	r2, #114
  34 0002 074B     		ldr	r3, .L2
  35 0004 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART_2.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_MASK_REG  = UART_2_INIT_RX_INTERRUPTS_MASK;
  36              		.loc 1 126 0
  37 0006 2022     		movs	r2, #32
  38 0008 013B     		subs	r3, r3, #1
  39 000a 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_RX_ENABLED || UART_2_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_2.c **** 
 129:.\Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_2.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_2.c ****             (void) CyIntSetVector(UART_2_TX_VECT_NUM, &UART_2_TXISR);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 4


 133:.\Generated_Source\PSoC5/UART_2.c ****             CyIntSetPriority(UART_2_TX_VECT_NUM, UART_2_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_2.c **** 
 136:.\Generated_Source\PSoC5/UART_2.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCLKGEN_CTR_REG = UART_2_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 0622     		movs	r2, #6
  42 000e 613B     		subs	r3, r3, #97
  43 0010 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCLKTX_COMPLETE_REG = ((UART_2_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0012 4722     		movs	r2, #71
  46 0014 1033     		adds	r3, r3, #16
  47 0016 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART_2.c ****                         UART_2_NUMBER_OF_START_BIT) * UART_2_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_2.c ****         #else
 142:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_PERIOD_REG = ((UART_2_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_2.c ****                         UART_2_NUMBER_OF_START_BIT) * UART_2_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_2.c **** 
 146:.\Generated_Source\PSoC5/UART_2.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXSTATUS_MASK_REG = UART_2_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART_2.c ****         #else
 150:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXSTATUS_MASK_REG = UART_2_INIT_TX_INTERRUPTS_MASK;
  48              		.loc 1 150 0
  49 0018 0222     		movs	r2, #2
  50 001a 4F33     		adds	r3, r3, #79
  51 001c 1A70     		strb	r2, [r3]
  52 001e 7047     		bx	lr
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0020 8E640040 		.word	1073767566
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	UART_2_Init, .-UART_2_Init
  60              		.section	.text.UART_2_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	UART_2_Enable
  63              		.thumb
  64              		.thumb_func
  65              		.type	UART_2_Enable, %function
  66              	UART_2_Enable:
  67              	.LFB2:
 151:.\Generated_Source\PSoC5/UART_2.c ****         #endif /*End UART_2_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_2.c **** 
 153:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_2.c **** 
 155:.\Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_2.c ****             (UART_2_ReadControlRegister() & (uint8)~UART_2_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_2.c ****             (uint8)(UART_2_PARITY_TYPE << UART_2_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* End UART_2_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_2.c **** }
 161:.\Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 5


 162:.\Generated_Source\PSoC5/UART_2.c **** 
 163:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Enable
 165:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_2.c **** *
 167:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_2.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_2.c **** *  to call UART_2_Enable() because the UART_2_Start() API
 170:.\Generated_Source\PSoC5/UART_2.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_2.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_2.c **** 
 173:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_2.c **** *
 176:.\Generated_Source\PSoC5/UART_2.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_2.c **** *
 179:.\Generated_Source\PSoC5/UART_2.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_2.c **** *  UART_2_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_2.c **** *
 182:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_2.c **** void UART_2_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_2.c **** {
  68              		.loc 1 184 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 08B5     		push	{r3, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART_2.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_2.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 186 0
  77 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL0:
 187:.\Generated_Source\PSoC5/UART_2.c **** 
 188:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_2.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_CONTROL_REG |= UART_2_CNTR_ENABLE;
  79              		.loc 1 190 0
  80 0006 094A     		ldr	r2, .L6
  81 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 000a 43F02003 		orr	r3, r3, #32
  83 000e 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/UART_2.c **** 
 192:.\Generated_Source\PSoC5/UART_2.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_ACTL_REG  |= UART_2_INT_ENABLE;
  84              		.loc 1 193 0
  85 0010 013A     		subs	r2, r2, #1
  86 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  87 0014 43F01003 		orr	r3, r3, #16
  88 0018 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/UART_2.c **** 
 195:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 6


 198:.\Generated_Source\PSoC5/UART_2.c ****             #if (UART_2_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_2.c ****             #endif /* (UART_2_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_2.c **** 
 204:.\Generated_Source\PSoC5/UART_2.c ****     #if(UART_2_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_2.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_2.c ****         #if(!UART_2_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_CONTROL_REG |= UART_2_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_2.c **** 
 210:.\Generated_Source\PSoC5/UART_2.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_ACTL_REG |= UART_2_INT_ENABLE;
  89              		.loc 1 211 0
  90 001a 023A     		subs	r2, r2, #2
  91 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  92 001e 43F01003 		orr	r3, r3, #16
  93 0022 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_2.c ****      #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_2.c **** 
 218:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_2.c **** 
 222:.\Generated_Source\PSoC5/UART_2.c ****     CyExitCriticalSection(enableInterrupts);
  94              		.loc 1 222 0
  95 0024 FFF7FEFF 		bl	CyExitCriticalSection
  96              	.LVL1:
  97 0028 08BD     		pop	{r3, pc}
  98              	.L7:
  99 002a 00BF     		.align	2
 100              	.L6:
 101 002c 9E640040 		.word	1073767582
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	UART_2_Enable, .-UART_2_Enable
 105              		.section	.text.UART_2_Start,"ax",%progbits
 106              		.align	2
 107              		.global	UART_2_Start
 108              		.thumb
 109              		.thumb_func
 110              		.type	UART_2_Start, %function
 111              	UART_2_Start:
 112              	.LFB0:
  77:.\Generated_Source\PSoC5/UART_2.c ****     /* If not initialized then initialize all required hardware and software */
 113              		.loc 1 77 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 08B5     		push	{r3, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 3, -8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 7


 120              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART_2.c ****     {
 121              		.loc 1 79 0
 122 0002 054B     		ldr	r3, .L11
 123 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 124 0006 23B9     		cbnz	r3, .L9
  81:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_initVar = 1u;
 125              		.loc 1 81 0
 126 0008 FFF7FEFF 		bl	UART_2_Init
 127              	.LVL2:
  82:.\Generated_Source\PSoC5/UART_2.c ****     }
 128              		.loc 1 82 0
 129 000c 0122     		movs	r2, #1
 130 000e 024B     		ldr	r3, .L11
 131 0010 1A70     		strb	r2, [r3]
 132              	.L9:
  85:.\Generated_Source\PSoC5/UART_2.c **** }
 133              		.loc 1 85 0
 134 0012 FFF7FEFF 		bl	UART_2_Enable
 135              	.LVL3:
 136 0016 08BD     		pop	{r3, pc}
 137              	.L12:
 138              		.align	2
 139              	.L11:
 140 0018 00000000 		.word	.LANCHOR0
 141              		.cfi_endproc
 142              	.LFE0:
 143              		.size	UART_2_Start, .-UART_2_Start
 144              		.section	.text.UART_2_Stop,"ax",%progbits
 145              		.align	2
 146              		.global	UART_2_Stop
 147              		.thumb
 148              		.thumb_func
 149              		.type	UART_2_Stop, %function
 150              	UART_2_Stop:
 151              	.LFB3:
 223:.\Generated_Source\PSoC5/UART_2.c **** }
 224:.\Generated_Source\PSoC5/UART_2.c **** 
 225:.\Generated_Source\PSoC5/UART_2.c **** 
 226:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_Stop
 228:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_2.c **** *
 230:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_2.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_2.c **** *
 233:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_2.c **** *
 236:.\Generated_Source\PSoC5/UART_2.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_2.c **** *
 239:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_2.c **** void UART_2_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_2.c **** {
 152              		.loc 1 241 0
 153              		.cfi_startproc
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 8


 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 08B5     		push	{r3, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART_2.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_2.c ****     enableInterrupts = CyEnterCriticalSection();
 160              		.loc 1 243 0
 161 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 162              	.LVL4:
 244:.\Generated_Source\PSoC5/UART_2.c **** 
 245:.\Generated_Source\PSoC5/UART_2.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXBITCTR_CONTROL_REG &= (uint8) ~UART_2_CNTR_ENABLE;
 163              		.loc 1 247 0
 164 0006 094A     		ldr	r2, .L15
 165 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 166 000a 03F0DF03 		and	r3, r3, #223
 167 000e 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_2.c **** 
 250:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_2.c ****         #if(!UART_2_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXBITCTR_CONTROL_REG &= (uint8) ~UART_2_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (!UART_2_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_2.c **** 
 256:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_2.c **** 
 260:.\Generated_Source\PSoC5/UART_2.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_ENABLED || UART_2_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_ACTL_REG  &= (uint8) ~UART_2_INT_ENABLE;
 168              		.loc 1 262 0
 169 0010 013A     		subs	r2, r2, #1
 170 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 171 0014 03F0EF03 		and	r3, r3, #239
 172 0018 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/UART_2.c **** 
 264:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_ENABLED || UART_2_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_2.c **** 
 269:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_ACTL_REG &= (uint8) ~UART_2_INT_ENABLE;
 173              		.loc 1 270 0
 174 001a 023A     		subs	r2, r2, #2
 175 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 176 001e 03F0EF03 		and	r3, r3, #239
 177 0022 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART_2.c **** 
 272:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 9


 275:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_2.c **** 
 277:.\Generated_Source\PSoC5/UART_2.c ****     CyExitCriticalSection(enableInterrupts);
 178              		.loc 1 277 0
 179 0024 FFF7FEFF 		bl	CyExitCriticalSection
 180              	.LVL5:
 181 0028 08BD     		pop	{r3, pc}
 182              	.L16:
 183 002a 00BF     		.align	2
 184              	.L15:
 185 002c 9E640040 		.word	1073767582
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	UART_2_Stop, .-UART_2_Stop
 189              		.section	.text.UART_2_ReadControlRegister,"ax",%progbits
 190              		.align	2
 191              		.global	UART_2_ReadControlRegister
 192              		.thumb
 193              		.thumb_func
 194              		.type	UART_2_ReadControlRegister, %function
 195              	UART_2_ReadControlRegister:
 196              	.LFB4:
 278:.\Generated_Source\PSoC5/UART_2.c **** }
 279:.\Generated_Source\PSoC5/UART_2.c **** 
 280:.\Generated_Source\PSoC5/UART_2.c **** 
 281:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_2.c **** *
 285:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_2.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_2.c **** *
 288:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_2.c **** *
 291:.\Generated_Source\PSoC5/UART_2.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_2.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_2.c **** *
 294:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_2.c **** uint8 UART_2_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_2.c **** {
 197              		.loc 1 296 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_2.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_2.c ****     #else
 300:.\Generated_Source\PSoC5/UART_2.c ****         return(UART_2_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_2.c **** }
 202              		.loc 1 302 0
 203 0000 0020     		movs	r0, #0
 204 0002 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE4:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 10


 207              		.size	UART_2_ReadControlRegister, .-UART_2_ReadControlRegister
 208              		.section	.text.UART_2_WriteControlRegister,"ax",%progbits
 209              		.align	2
 210              		.global	UART_2_WriteControlRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	UART_2_WriteControlRegister, %function
 214              	UART_2_WriteControlRegister:
 215              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_2.c **** 
 304:.\Generated_Source\PSoC5/UART_2.c **** 
 305:.\Generated_Source\PSoC5/UART_2.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_2.c **** * Function Name: UART_2_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_2.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_2.c **** *
 309:.\Generated_Source\PSoC5/UART_2.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_2.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_2.c **** *
 312:.\Generated_Source\PSoC5/UART_2.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_2.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_2.c **** *
 315:.\Generated_Source\PSoC5/UART_2.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_2.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_2.c **** *
 318:.\Generated_Source\PSoC5/UART_2.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_2.c **** void  UART_2_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_2.c **** {
 216              		.loc 1 320 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL6:
 222 0000 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	UART_2_WriteControlRegister, .-UART_2_WriteControlRegister
 226 0002 00BF     		.section	.text.UART_2_SetRxInterruptMode,"ax",%progbits
 227              		.align	2
 228              		.global	UART_2_SetRxInterruptMode
 229              		.thumb
 230              		.thumb_func
 231              		.type	UART_2_SetRxInterruptMode, %function
 232              	UART_2_SetRxInterruptMode:
 233              	.LFB6:
 321:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_2.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_2.c ****         {
 324:.\Generated_Source\PSoC5/UART_2.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_2.c ****         }
 326:.\Generated_Source\PSoC5/UART_2.c ****     #else
 327:.\Generated_Source\PSoC5/UART_2.c ****        UART_2_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_2.c **** }
 330:.\Generated_Source\PSoC5/UART_2.c **** 
 331:.\Generated_Source\PSoC5/UART_2.c **** 
 332:.\Generated_Source\PSoC5/UART_2.c **** #if(UART_2_RX_ENABLED || UART_2_HD_ENABLED)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 11


 333:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_2.c ****     *
 337:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_2.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_2.c ****     *
 340:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_2.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_2.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_2.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_2.c ****     *
 352:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_2.c ****     *
 355:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_2.c ****     *
 358:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_2.c ****     {
 234              		.loc 1 360 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL7:
 361:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXSTATUS_MASK_REG  = intSrc;
 240              		.loc 1 361 0
 241 0000 014B     		ldr	r3, .L20
 242 0002 1870     		strb	r0, [r3]
 243 0004 7047     		bx	lr
 244              	.L21:
 245 0006 00BF     		.align	2
 246              	.L20:
 247 0008 8D640040 		.word	1073767565
 248              		.cfi_endproc
 249              	.LFE6:
 250              		.size	UART_2_SetRxInterruptMode, .-UART_2_SetRxInterruptMode
 251              		.section	.text.UART_2_ReadRxData,"ax",%progbits
 252              		.align	2
 253              		.global	UART_2_ReadRxData
 254              		.thumb
 255              		.thumb_func
 256              		.type	UART_2_ReadRxData, %function
 257              	UART_2_ReadRxData:
 258              	.LFB7:
 362:.\Generated_Source\PSoC5/UART_2.c ****     }
 363:.\Generated_Source\PSoC5/UART_2.c **** 
 364:.\Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 12


 365:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadRxData
 367:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_2.c ****     *
 369:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_2.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_2.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_2.c ****     *
 373:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_2.c ****     *
 376:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_2.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_2.c ****     *
 379:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_2.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_2.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_2.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_2.c ****     *
 388:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_2.c ****     *
 391:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_2.c ****     {
 259              		.loc 1 393 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/UART_2.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_2.c **** 
 396:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_2.c **** 
 398:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_2.c **** 
 401:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART_2.c **** 
 404:.\Generated_Source\PSoC5/UART_2.c ****         locRxBufferRead  = UART_2_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART_2.c ****         locRxBufferWrite = UART_2_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART_2.c **** 
 407:.\Generated_Source\PSoC5/UART_2.c ****         if( (UART_2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART_2.c ****         {
 409:.\Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART_2.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART_2.c **** 
 412:.\Generated_Source\PSoC5/UART_2.c ****             if(locRxBufferRead >= UART_2_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART_2.c ****             {
 414:.\Generated_Source\PSoC5/UART_2.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART_2.c ****             }
 416:.\Generated_Source\PSoC5/UART_2.c ****             /* Update the real pointer */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 13


 417:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART_2.c **** 
 419:.\Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART_2.c ****             {
 421:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART_2.c ****                 #if ((UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_2.c ****                     #if( UART_2_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_2.c ****                         if((UART_2_CONTROL_REG & UART_2_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_2.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_2.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_2.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_2.c ****                             */
 430:.\Generated_Source\PSoC5/UART_2.c ****                             UART_2_RXSTATUS_MASK_REG  |= UART_2_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_2.c ****                         }
 432:.\Generated_Source\PSoC5/UART_2.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_2.c ****                         UART_2_RXSTATUS_MASK_REG  |= UART_2_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_2.c ****                     #endif /* end UART_2_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_2.c ****                 #endif /* ((UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_2.c ****             }
 437:.\Generated_Source\PSoC5/UART_2.c ****         }
 438:.\Generated_Source\PSoC5/UART_2.c ****         else
 439:.\Generated_Source\PSoC5/UART_2.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART_2.c ****         }
 442:.\Generated_Source\PSoC5/UART_2.c **** 
 443:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART_2.c **** 
 445:.\Generated_Source\PSoC5/UART_2.c ****     #else
 446:.\Generated_Source\PSoC5/UART_2.c **** 
 447:.\Generated_Source\PSoC5/UART_2.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_2.c ****         rxData = UART_2_RXDATA_REG;
 264              		.loc 1 448 0
 265 0000 014B     		ldr	r3, .L23
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 267              	.LVL8:
 449:.\Generated_Source\PSoC5/UART_2.c **** 
 450:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_2.c **** 
 452:.\Generated_Source\PSoC5/UART_2.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART_2.c ****     }
 268              		.loc 1 453 0
 269 0004 7047     		bx	lr
 270              	.L24:
 271 0006 00BF     		.align	2
 272              	.L23:
 273 0008 4D640040 		.word	1073767501
 274              		.cfi_endproc
 275              	.LFE7:
 276              		.size	UART_2_ReadRxData, .-UART_2_ReadRxData
 277              		.section	.text.UART_2_ReadRxStatus,"ax",%progbits
 278              		.align	2
 279              		.global	UART_2_ReadRxStatus
 280              		.thumb
 281              		.thumb_func
 282              		.type	UART_2_ReadRxStatus, %function
 283              	UART_2_ReadRxStatus:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 14


 284              	.LFB8:
 454:.\Generated_Source\PSoC5/UART_2.c **** 
 455:.\Generated_Source\PSoC5/UART_2.c **** 
 456:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_2.c ****     *
 460:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_2.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_2.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_2.c ****     *
 464:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_2.c ****     *
 467:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_2.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_2.c ****     *
 470:.\Generated_Source\PSoC5/UART_2.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_2.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_2.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_2.c ****     *
 476:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_2.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_2.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_2.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_2.c ****     *
 484:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_2.c ****     {
 285              		.loc 1 486 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/UART_2.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_2.c **** 
 489:.\Generated_Source\PSoC5/UART_2.c ****         status = UART_2_RXSTATUS_REG & UART_2_RX_HW_MASK;
 290              		.loc 1 489 0
 291 0000 024B     		ldr	r3, .L26
 292 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 293              	.LVL9:
 490:.\Generated_Source\PSoC5/UART_2.c **** 
 491:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART_2.c ****         {
 494:.\Generated_Source\PSoC5/UART_2.c ****             status |= UART_2_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART_2.c ****         }
 497:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_2.c **** 
 499:.\Generated_Source\PSoC5/UART_2.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART_2.c ****     }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 15


 294              		.loc 1 500 0
 295 0004 00F07F00 		and	r0, r0, #127
 296              	.LVL10:
 297 0008 7047     		bx	lr
 298              	.L27:
 299 000a 00BF     		.align	2
 300              	.L26:
 301 000c 6D640040 		.word	1073767533
 302              		.cfi_endproc
 303              	.LFE8:
 304              		.size	UART_2_ReadRxStatus, .-UART_2_ReadRxStatus
 305              		.section	.text.UART_2_GetChar,"ax",%progbits
 306              		.align	2
 307              		.global	UART_2_GetChar
 308              		.thumb
 309              		.thumb_func
 310              		.type	UART_2_GetChar, %function
 311              	UART_2_GetChar:
 312              	.LFB9:
 501:.\Generated_Source\PSoC5/UART_2.c **** 
 502:.\Generated_Source\PSoC5/UART_2.c **** 
 503:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetChar
 505:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_2.c ****     *
 507:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_2.c ****     *  Returns the last received byte of data. UART_2_GetChar() is
 509:.\Generated_Source\PSoC5/UART_2.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_2.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_2.c ****     *
 512:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_2.c ****     *
 515:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_2.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_2.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_2.c ****     *
 519:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_2.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_2.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_2.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_2.c ****     *
 528:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_2.c ****     *
 531:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_2.c ****     {
 313              		.loc 1 533 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 16


 318              	.LVL11:
 534:.\Generated_Source\PSoC5/UART_2.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART_2.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_2.c **** 
 537:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_2.c **** 
 541:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART_2.c **** 
 544:.\Generated_Source\PSoC5/UART_2.c ****         locRxBufferRead  = UART_2_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART_2.c ****         locRxBufferWrite = UART_2_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART_2.c **** 
 547:.\Generated_Source\PSoC5/UART_2.c ****         if( (UART_2_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART_2.c ****         {
 549:.\Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART_2.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART_2.c ****             if(locRxBufferRead >= UART_2_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART_2.c ****             {
 553:.\Generated_Source\PSoC5/UART_2.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART_2.c ****             }
 555:.\Generated_Source\PSoC5/UART_2.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART_2.c **** 
 558:.\Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART_2.c ****             {
 560:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART_2.c ****                 #if( (UART_2_RX_INTERRUPT_ENABLED) && (UART_2_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_2.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_2.c ****                     #if( UART_2_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_2.c ****                         if((UART_2_CONTROL_REG & UART_2_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_2.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_2.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_2.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_2.c ****                             */
 569:.\Generated_Source\PSoC5/UART_2.c ****                             UART_2_RXSTATUS_MASK_REG |= UART_2_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_2.c ****                         }
 571:.\Generated_Source\PSoC5/UART_2.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_2.c ****                         UART_2_RXSTATUS_MASK_REG |= UART_2_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_2.c ****                     #endif /* end UART_2_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_2.c ****                 #endif /* UART_2_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_2.c ****             }
 576:.\Generated_Source\PSoC5/UART_2.c **** 
 577:.\Generated_Source\PSoC5/UART_2.c ****         }
 578:.\Generated_Source\PSoC5/UART_2.c ****         else
 579:.\Generated_Source\PSoC5/UART_2.c ****         {   rxStatus = UART_2_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART_2.c ****             if((rxStatus & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART_2.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_2.c ****                 rxData = UART_2_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART_2.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_2.c ****                 if((rxStatus & (UART_2_RX_STS_BREAK | UART_2_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_2.c ****                                 UART_2_RX_STS_STOP_ERROR | UART_2_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART_2.c ****                 {
 587:.\Generated_Source\PSoC5/UART_2.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART_2.c ****                 }
 589:.\Generated_Source\PSoC5/UART_2.c ****             }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 17


 590:.\Generated_Source\PSoC5/UART_2.c ****         }
 591:.\Generated_Source\PSoC5/UART_2.c **** 
 592:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART_2.c **** 
 594:.\Generated_Source\PSoC5/UART_2.c ****     #else
 595:.\Generated_Source\PSoC5/UART_2.c **** 
 596:.\Generated_Source\PSoC5/UART_2.c ****         rxStatus =UART_2_RXSTATUS_REG;
 319              		.loc 1 596 0
 320 0000 084B     		ldr	r3, .L32
 321 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 322 0004 DBB2     		uxtb	r3, r3
 323              	.LVL12:
 597:.\Generated_Source\PSoC5/UART_2.c ****         if((rxStatus & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u)
 324              		.loc 1 597 0
 325 0006 13F0200F 		tst	r3, #32
 326 000a 06D0     		beq	.L30
 598:.\Generated_Source\PSoC5/UART_2.c ****         {
 599:.\Generated_Source\PSoC5/UART_2.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_2.c ****             rxData = UART_2_RXDATA_REG;
 327              		.loc 1 600 0
 328 000c 064A     		ldr	r2, .L32+4
 329 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 330 0010 C0B2     		uxtb	r0, r0
 331              	.LVL13:
 601:.\Generated_Source\PSoC5/UART_2.c **** 
 602:.\Generated_Source\PSoC5/UART_2.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_2.c ****             if((rxStatus & (UART_2_RX_STS_BREAK | UART_2_RX_STS_PAR_ERROR |
 332              		.loc 1 603 0
 333 0012 13F01E0F 		tst	r3, #30
 334 0016 02D1     		bne	.L31
 335 0018 7047     		bx	lr
 336              	.LVL14:
 337              	.L30:
 534:.\Generated_Source\PSoC5/UART_2.c ****         uint8 rxStatus;
 338              		.loc 1 534 0
 339 001a 0020     		movs	r0, #0
 340 001c 7047     		bx	lr
 341              	.LVL15:
 342              	.L31:
 604:.\Generated_Source\PSoC5/UART_2.c ****                             UART_2_RX_STS_STOP_ERROR | UART_2_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_2.c ****             {
 606:.\Generated_Source\PSoC5/UART_2.c ****                 rxData = 0u;
 343              		.loc 1 606 0
 344 001e 0020     		movs	r0, #0
 345              	.LVL16:
 607:.\Generated_Source\PSoC5/UART_2.c ****             }
 608:.\Generated_Source\PSoC5/UART_2.c ****         }
 609:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_2.c **** 
 611:.\Generated_Source\PSoC5/UART_2.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART_2.c ****     }
 346              		.loc 1 612 0
 347 0020 7047     		bx	lr
 348              	.L33:
 349 0022 00BF     		.align	2
 350              	.L32:
 351 0024 6D640040 		.word	1073767533
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 18


 352 0028 4D640040 		.word	1073767501
 353              		.cfi_endproc
 354              	.LFE9:
 355              		.size	UART_2_GetChar, .-UART_2_GetChar
 356              		.section	.text.UART_2_GetByte,"ax",%progbits
 357              		.align	2
 358              		.global	UART_2_GetByte
 359              		.thumb
 360              		.thumb_func
 361              		.type	UART_2_GetByte, %function
 362              	UART_2_GetByte:
 363              	.LFB10:
 613:.\Generated_Source\PSoC5/UART_2.c **** 
 614:.\Generated_Source\PSoC5/UART_2.c **** 
 615:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetByte
 617:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_2.c ****     *
 619:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_2.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_2.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_2.c ****     *
 623:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_2.c ****     *
 626:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_2.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_2.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_2.c ****     *
 630:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_2.c ****     *
 633:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_2.c ****     uint16 UART_2_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_2.c ****     {
 364              		.loc 1 635 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 10B5     		push	{r4, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC5/UART_2.c ****         
 637:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_2.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART_2.c ****         locErrorStatus = (uint16)UART_2_errorStatus;
 642:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART_2.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_2_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART_2.c ****     #else
 646:.\Generated_Source\PSoC5/UART_2.c ****         return ( ((uint16)UART_2_ReadRxStatus() << 8u) | UART_2_ReadRxData() );
 372              		.loc 1 646 0
 373 0002 FFF7FEFF 		bl	UART_2_ReadRxStatus
 374              	.LVL17:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 19


 375 0006 0402     		lsls	r4, r0, #8
 376 0008 FFF7FEFF 		bl	UART_2_ReadRxData
 377              	.LVL18:
 378 000c 2043     		orrs	r0, r0, r4
 647:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* UART_2_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_2.c ****         
 649:.\Generated_Source\PSoC5/UART_2.c ****     }
 379              		.loc 1 649 0
 380 000e 80B2     		uxth	r0, r0
 381 0010 10BD     		pop	{r4, pc}
 382              		.cfi_endproc
 383              	.LFE10:
 384              		.size	UART_2_GetByte, .-UART_2_GetByte
 385 0012 00BF     		.section	.text.UART_2_GetRxBufferSize,"ax",%progbits
 386              		.align	2
 387              		.global	UART_2_GetRxBufferSize
 388              		.thumb
 389              		.thumb_func
 390              		.type	UART_2_GetRxBufferSize, %function
 391              	UART_2_GetRxBufferSize:
 392              	.LFB11:
 650:.\Generated_Source\PSoC5/UART_2.c **** 
 651:.\Generated_Source\PSoC5/UART_2.c **** 
 652:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_2.c ****     *
 656:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_2.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_2.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_2.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_2.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_2.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_2.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_2.c ****     *
 664:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_2.c ****     *
 667:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_2.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_2.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_2.c ****     *
 671:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_2.c ****     *
 676:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_2.c ****     *
 679:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_2.c ****     *
 682:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_2.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_2.c ****     {
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 20


 393              		.loc 1 685 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/UART_2.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART_2.c **** 
 688:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_2.c **** 
 690:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART_2.c **** 
 693:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_rxBufferRead == UART_2_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART_2.c ****         {
 695:.\Generated_Source\PSoC5/UART_2.c ****             if(UART_2_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART_2.c ****             {
 697:.\Generated_Source\PSoC5/UART_2.c ****                 size = UART_2_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART_2.c ****             }
 699:.\Generated_Source\PSoC5/UART_2.c ****             else
 700:.\Generated_Source\PSoC5/UART_2.c ****             {
 701:.\Generated_Source\PSoC5/UART_2.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART_2.c ****             }
 703:.\Generated_Source\PSoC5/UART_2.c ****         }
 704:.\Generated_Source\PSoC5/UART_2.c ****         else if(UART_2_rxBufferRead < UART_2_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_2.c ****         {
 706:.\Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_rxBufferWrite - UART_2_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART_2.c ****         }
 708:.\Generated_Source\PSoC5/UART_2.c ****         else
 709:.\Generated_Source\PSoC5/UART_2.c ****         {
 710:.\Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_RX_BUFFER_SIZE - UART_2_rxBufferRead) + UART_2_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART_2.c ****         }
 712:.\Generated_Source\PSoC5/UART_2.c **** 
 713:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART_2.c **** 
 715:.\Generated_Source\PSoC5/UART_2.c ****     #else
 716:.\Generated_Source\PSoC5/UART_2.c **** 
 717:.\Generated_Source\PSoC5/UART_2.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_2.c ****         size = ((UART_2_RXSTATUS_REG & UART_2_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 398              		.loc 1 718 0
 399 0000 044B     		ldr	r3, .L39
 400 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 401 0004 13F0200F 		tst	r3, #32
 402 0008 01D0     		beq	.L38
 403 000a 0120     		movs	r0, #1
 404 000c 7047     		bx	lr
 405              	.L38:
 406 000e 0020     		movs	r0, #0
 407              	.LVL19:
 719:.\Generated_Source\PSoC5/UART_2.c **** 
 720:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_2.c **** 
 722:.\Generated_Source\PSoC5/UART_2.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART_2.c ****     }
 408              		.loc 1 723 0
 409 0010 7047     		bx	lr
 410              	.L40:
 411 0012 00BF     		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 21


 412              	.L39:
 413 0014 6D640040 		.word	1073767533
 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	UART_2_GetRxBufferSize, .-UART_2_GetRxBufferSize
 417              		.section	.text.UART_2_ClearRxBuffer,"ax",%progbits
 418              		.align	2
 419              		.global	UART_2_ClearRxBuffer
 420              		.thumb
 421              		.thumb_func
 422              		.type	UART_2_ClearRxBuffer, %function
 423              	UART_2_ClearRxBuffer:
 424              	.LFB12:
 724:.\Generated_Source\PSoC5/UART_2.c **** 
 725:.\Generated_Source\PSoC5/UART_2.c **** 
 726:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_2.c ****     *
 730:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_2.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_2.c ****     *
 733:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_2.c ****     *
 736:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_2.c ****     *
 739:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_2.c ****     *
 745:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_2.c ****     *
 748:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_2.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_2.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_2.c ****     *
 753:.\Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_2.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_2.c ****     *
 756:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_2.c ****     {
 425              		.loc 1 758 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 08B5     		push	{r3, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/UART_2.c ****         uint8 enableInterrupts;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 22


 760:.\Generated_Source\PSoC5/UART_2.c **** 
 761:.\Generated_Source\PSoC5/UART_2.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_2.c ****         enableInterrupts = CyEnterCriticalSection();
 433              		.loc 1 762 0
 434 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 435              	.LVL20:
 763:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXDATA_AUX_CTL_REG |= (uint8)  UART_2_RX_FIFO_CLR;
 436              		.loc 1 763 0
 437 0006 064B     		ldr	r3, .L43
 438 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 439 000a 42F00102 		orr	r2, r2, #1
 440 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXDATA_AUX_CTL_REG &= (uint8) ~UART_2_RX_FIFO_CLR;
 441              		.loc 1 764 0
 442 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 443 0012 02F0FE02 		and	r2, r2, #254
 444 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART_2.c ****         CyExitCriticalSection(enableInterrupts);
 445              		.loc 1 765 0
 446 0018 FFF7FEFF 		bl	CyExitCriticalSection
 447              	.LVL21:
 448 001c 08BD     		pop	{r3, pc}
 449              	.L44:
 450 001e 00BF     		.align	2
 451              	.L43:
 452 0020 9D640040 		.word	1073767581
 453              		.cfi_endproc
 454              	.LFE12:
 455              		.size	UART_2_ClearRxBuffer, .-UART_2_ClearRxBuffer
 456              		.section	.text.UART_2_SetRxAddressMode,"ax",%progbits
 457              		.align	2
 458              		.global	UART_2_SetRxAddressMode
 459              		.thumb
 460              		.thumb_func
 461              		.type	UART_2_SetRxAddressMode, %function
 462              	UART_2_SetRxAddressMode:
 463              	.LFB13:
 766:.\Generated_Source\PSoC5/UART_2.c **** 
 767:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_2.c **** 
 769:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART_2.c **** 
 772:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART_2.c **** 
 777:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART_2.c **** 
 779:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_2.c **** 
 781:.\Generated_Source\PSoC5/UART_2.c ****     }
 782:.\Generated_Source\PSoC5/UART_2.c **** 
 783:.\Generated_Source\PSoC5/UART_2.c **** 
 784:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddressMode
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 23


 786:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_2.c ****     *
 788:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_2.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_2.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_2.c ****     *
 792:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_2.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_2.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_2.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_2.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_2.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_2.c ****     *
 804:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_2.c ****     *
 807:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_2.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_2.c ****     *
 812:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_2.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_2.c ****     {
 464              		.loc 1 815 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL22:
 470 0000 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE13:
 473              		.size	UART_2_SetRxAddressMode, .-UART_2_SetRxAddressMode
 474 0002 00BF     		.section	.text.UART_2_SetRxAddress1,"ax",%progbits
 475              		.align	2
 476              		.global	UART_2_SetRxAddress1
 477              		.thumb
 478              		.thumb_func
 479              		.type	UART_2_SetRxAddress1, %function
 480              	UART_2_SetRxAddress1:
 481              	.LFB14:
 816:.\Generated_Source\PSoC5/UART_2.c ****         #if(UART_2_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_2.c ****             #if(UART_2_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_2.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_2.c ****                 {
 820:.\Generated_Source\PSoC5/UART_2.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_2.c ****                 }
 822:.\Generated_Source\PSoC5/UART_2.c ****             #else /* UART_2_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_2.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_2.c ****                 tmpCtrl = UART_2_CONTROL_REG & (uint8)~UART_2_CTRL_RXADDR_MODE_MASK;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 24


 825:.\Generated_Source\PSoC5/UART_2.c ****                 tmpCtrl |= (uint8)(addressMode << UART_2_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_2.c **** 
 828:.\Generated_Source\PSoC5/UART_2.c ****                 #if(UART_2_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_2.c ****                    (UART_2_RXBUFFERSIZE > UART_2_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_RXBUFFERSIZE > UART_2_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_2.c ****         #else /* UART_2_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_2.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_2.c ****             {
 837:.\Generated_Source\PSoC5/UART_2.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_2.c ****             }
 839:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* End UART_2_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_2.c ****     }
 841:.\Generated_Source\PSoC5/UART_2.c **** 
 842:.\Generated_Source\PSoC5/UART_2.c **** 
 843:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_2.c ****     *
 847:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_2.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_2.c ****     *
 850:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_2.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_2.c ****     *
 853:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_2.c ****     *
 856:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_2.c ****     {
 482              		.loc 1 858 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL23:
 859:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXADDRESS1_REG = address;
 488              		.loc 1 859 0
 489 0000 014B     		ldr	r3, .L47
 490 0002 1870     		strb	r0, [r3]
 491 0004 7047     		bx	lr
 492              	.L48:
 493 0006 00BF     		.align	2
 494              	.L47:
 495 0008 2D640040 		.word	1073767469
 496              		.cfi_endproc
 497              	.LFE14:
 498              		.size	UART_2_SetRxAddress1, .-UART_2_SetRxAddress1
 499              		.section	.text.UART_2_SetRxAddress2,"ax",%progbits
 500              		.align	2
 501              		.global	UART_2_SetRxAddress2
 502              		.thumb
 503              		.thumb_func
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 25


 504              		.type	UART_2_SetRxAddress2, %function
 505              	UART_2_SetRxAddress2:
 506              	.LFB15:
 860:.\Generated_Source\PSoC5/UART_2.c ****     }
 861:.\Generated_Source\PSoC5/UART_2.c **** 
 862:.\Generated_Source\PSoC5/UART_2.c **** 
 863:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_2.c ****     *
 867:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_2.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_2.c ****     *
 870:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_2.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_2.c ****     *
 873:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_2.c ****     *
 876:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_2.c ****     {
 507              		.loc 1 878 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL24:
 879:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_RXADDRESS2_REG = address;
 513              		.loc 1 879 0
 514 0000 014B     		ldr	r3, .L50
 515 0002 1870     		strb	r0, [r3]
 516 0004 7047     		bx	lr
 517              	.L51:
 518 0006 00BF     		.align	2
 519              	.L50:
 520 0008 3D640040 		.word	1073767485
 521              		.cfi_endproc
 522              	.LFE15:
 523              		.size	UART_2_SetRxAddress2, .-UART_2_SetRxAddress2
 524              		.section	.text.UART_2_SetTxInterruptMode,"ax",%progbits
 525              		.align	2
 526              		.global	UART_2_SetTxInterruptMode
 527              		.thumb
 528              		.thumb_func
 529              		.type	UART_2_SetTxInterruptMode, %function
 530              	UART_2_SetTxInterruptMode:
 531              	.LFB16:
 880:.\Generated_Source\PSoC5/UART_2.c ****     }
 881:.\Generated_Source\PSoC5/UART_2.c **** 
 882:.\Generated_Source\PSoC5/UART_2.c **** #endif  /* UART_2_RX_ENABLED || UART_2_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_2.c **** 
 884:.\Generated_Source\PSoC5/UART_2.c **** 
 885:.\Generated_Source\PSoC5/UART_2.c **** #if( (UART_2_TX_ENABLED) || (UART_2_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 26


 889:.\Generated_Source\PSoC5/UART_2.c ****     *
 890:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_2.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_2.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_2.c ****     *
 894:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_2.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_2.c ****     *
 901:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_2.c ****     *
 904:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_2.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_2.c ****     *
 907:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_2.c ****     {
 532              		.loc 1 909 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL25:
 910:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXSTATUS_MASK_REG = intSrc;
 538              		.loc 1 910 0
 539 0000 014B     		ldr	r3, .L53
 540 0002 1870     		strb	r0, [r3]
 541 0004 7047     		bx	lr
 542              	.L54:
 543 0006 00BF     		.align	2
 544              	.L53:
 545 0008 8B640040 		.word	1073767563
 546              		.cfi_endproc
 547              	.LFE16:
 548              		.size	UART_2_SetTxInterruptMode, .-UART_2_SetTxInterruptMode
 549              		.section	.text.UART_2_WriteTxData,"ax",%progbits
 550              		.align	2
 551              		.global	UART_2_WriteTxData
 552              		.thumb
 553              		.thumb_func
 554              		.type	UART_2_WriteTxData, %function
 555              	UART_2_WriteTxData:
 556              	.LFB17:
 911:.\Generated_Source\PSoC5/UART_2.c ****     }
 912:.\Generated_Source\PSoC5/UART_2.c **** 
 913:.\Generated_Source\PSoC5/UART_2.c **** 
 914:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_WriteTxData
 916:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_2.c ****     *
 918:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_2.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_2.c ****     *  available without checking the TX status register. You must check status
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 27


 921:.\Generated_Source\PSoC5/UART_2.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_2.c ****     *
 923:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_2.c ****     *
 926:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_2.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_2.c ****     *
 929:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_2.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_2.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_2.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_2.c ****     *
 938:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_2.c ****     *
 941:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_2.c ****     {
 557              		.loc 1 943 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL26:
 944:.\Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 563              		.loc 1 945 0
 564 0000 024B     		ldr	r3, .L57
 565 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 0004 0BB1     		cbz	r3, .L55
 946:.\Generated_Source\PSoC5/UART_2.c ****         {
 947:.\Generated_Source\PSoC5/UART_2.c ****         #if (UART_2_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_2.c **** 
 949:.\Generated_Source\PSoC5/UART_2.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART_2.c **** 
 952:.\Generated_Source\PSoC5/UART_2.c ****             if( (UART_2_txBufferRead == UART_2_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART_2.c ****                 ((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART_2.c ****             {
 955:.\Generated_Source\PSoC5/UART_2.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART_2.c ****             }
 958:.\Generated_Source\PSoC5/UART_2.c ****             else
 959:.\Generated_Source\PSoC5/UART_2.c ****             {
 960:.\Generated_Source\PSoC5/UART_2.c ****                 if(UART_2_txBufferWrite >= UART_2_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART_2.c ****                 {
 962:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART_2.c ****                 }
 964:.\Generated_Source\PSoC5/UART_2.c **** 
 965:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_txBuffer[UART_2_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART_2.c **** 
 967:.\Generated_Source\PSoC5/UART_2.c ****                 /* Add to the software buffer. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 28


 968:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART_2.c ****             }
 970:.\Generated_Source\PSoC5/UART_2.c **** 
 971:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART_2.c **** 
 973:.\Generated_Source\PSoC5/UART_2.c ****         #else
 974:.\Generated_Source\PSoC5/UART_2.c **** 
 975:.\Generated_Source\PSoC5/UART_2.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXDATA_REG = txDataByte;
 567              		.loc 1 976 0
 568 0006 024B     		ldr	r3, .L57+4
 569 0008 1870     		strb	r0, [r3]
 570              	.L55:
 571 000a 7047     		bx	lr
 572              	.L58:
 573              		.align	2
 574              	.L57:
 575 000c 00000000 		.word	.LANCHOR0
 576 0010 4B640040 		.word	1073767499
 577              		.cfi_endproc
 578              	.LFE17:
 579              		.size	UART_2_WriteTxData, .-UART_2_WriteTxData
 580              		.section	.text.UART_2_ReadTxStatus,"ax",%progbits
 581              		.align	2
 582              		.global	UART_2_ReadTxStatus
 583              		.thumb
 584              		.thumb_func
 585              		.type	UART_2_ReadTxStatus, %function
 586              	UART_2_ReadTxStatus:
 587              	.LFB18:
 977:.\Generated_Source\PSoC5/UART_2.c **** 
 978:.\Generated_Source\PSoC5/UART_2.c ****         #endif /*(UART_2_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_2.c ****         }
 980:.\Generated_Source\PSoC5/UART_2.c ****     }
 981:.\Generated_Source\PSoC5/UART_2.c **** 
 982:.\Generated_Source\PSoC5/UART_2.c **** 
 983:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_2.c ****     *
 987:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_2.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_2.c ****     *
 990:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_2.c ****     *
 993:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_2.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_2.c ****     *
 996:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_2.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_2.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_2.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_2.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_2.c ****     *
1002:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_ReadTxStatus(void) 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 29


1004:.\Generated_Source\PSoC5/UART_2.c ****     {
 588              		.loc 1 1004 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART_2.c ****         return(UART_2_TXSTATUS_REG);
 593              		.loc 1 1005 0
 594 0000 014B     		ldr	r3, .L60
 595 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART_2.c ****     }
 596              		.loc 1 1006 0
 597 0004 7047     		bx	lr
 598              	.L61:
 599 0006 00BF     		.align	2
 600              	.L60:
 601 0008 6B640040 		.word	1073767531
 602              		.cfi_endproc
 603              	.LFE18:
 604              		.size	UART_2_ReadTxStatus, .-UART_2_ReadTxStatus
 605              		.section	.text.UART_2_PutChar,"ax",%progbits
 606              		.align	2
 607              		.global	UART_2_PutChar
 608              		.thumb
 609              		.thumb_func
 610              		.type	UART_2_PutChar, %function
 611              	UART_2_PutChar:
 612              	.LFB19:
1007:.\Generated_Source\PSoC5/UART_2.c **** 
1008:.\Generated_Source\PSoC5/UART_2.c **** 
1009:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutChar
1011:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_2.c ****     *
1013:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_2.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_2.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_2.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_2.c ****     *
1018:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_2.c ****     *
1021:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_2.c ****     *
1024:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_2.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_2.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_2.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_2.c ****     *
1034:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 30


1036:.\Generated_Source\PSoC5/UART_2.c ****     *
1037:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_2.c ****     *
1040:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_2.c ****     {
 613              		.loc 1 1042 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618              	.LVL27:
 619              	.L63:
1043:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_2.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_2.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_2.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_2.c ****         */
1048:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_2.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_2.c **** 
1051:.\Generated_Source\PSoC5/UART_2.c ****         do
1052:.\Generated_Source\PSoC5/UART_2.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_2.c **** 
1054:.\Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_2.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_2.c **** 
1059:.\Generated_Source\PSoC5/UART_2.c ****             locTxBufferWrite = UART_2_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART_2.c ****             locTxBufferRead  = UART_2_txBufferRead;
1061:.\Generated_Source\PSoC5/UART_2.c **** 
1062:.\Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_2.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_2.c ****         }
1067:.\Generated_Source\PSoC5/UART_2.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART_2.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART_2.c ****                                 (uint8)(UART_2_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART_2.c **** 
1071:.\Generated_Source\PSoC5/UART_2.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART_2.c ****             ((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART_2.c ****         {
1074:.\Generated_Source\PSoC5/UART_2.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART_2.c ****         }
1077:.\Generated_Source\PSoC5/UART_2.c ****         else
1078:.\Generated_Source\PSoC5/UART_2.c ****         {
1079:.\Generated_Source\PSoC5/UART_2.c ****             if(locTxBufferWrite >= UART_2_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART_2.c ****             {
1081:.\Generated_Source\PSoC5/UART_2.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART_2.c ****             }
1083:.\Generated_Source\PSoC5/UART_2.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART_2.c ****             locTxBufferWrite++;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 31


1086:.\Generated_Source\PSoC5/UART_2.c **** 
1087:.\Generated_Source\PSoC5/UART_2.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_2.c **** 
1092:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART_2.c **** 
1094:.\Generated_Source\PSoC5/UART_2.c ****         #if ((UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_2.c ****         #endif /* (UART_2_TX_BUFFER_SIZE > UART_2_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_2.c **** 
1098:.\Generated_Source\PSoC5/UART_2.c ****             if(0u != (UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART_2.c ****             {
1100:.\Generated_Source\PSoC5/UART_2.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART_2.c ****             }
1103:.\Generated_Source\PSoC5/UART_2.c ****         }
1104:.\Generated_Source\PSoC5/UART_2.c **** 
1105:.\Generated_Source\PSoC5/UART_2.c ****     #else
1106:.\Generated_Source\PSoC5/UART_2.c **** 
1107:.\Generated_Source\PSoC5/UART_2.c ****         while((UART_2_TXSTATUS_REG & UART_2_TX_STS_FIFO_FULL) != 0u)
 620              		.loc 1 1107 0 discriminator 1
 621 0000 034B     		ldr	r3, .L64
 622 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 0004 13F0040F 		tst	r3, #4
 624 0008 FAD1     		bne	.L63
1108:.\Generated_Source\PSoC5/UART_2.c ****         {
1109:.\Generated_Source\PSoC5/UART_2.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_2.c ****         }
1111:.\Generated_Source\PSoC5/UART_2.c **** 
1112:.\Generated_Source\PSoC5/UART_2.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_REG = txDataByte;
 625              		.loc 1 1113 0
 626 000a 024B     		ldr	r3, .L64+4
 627 000c 1870     		strb	r0, [r3]
 628 000e 7047     		bx	lr
 629              	.L65:
 630              		.align	2
 631              	.L64:
 632 0010 6B640040 		.word	1073767531
 633 0014 4B640040 		.word	1073767499
 634              		.cfi_endproc
 635              	.LFE19:
 636              		.size	UART_2_PutChar, .-UART_2_PutChar
 637              		.section	.text.UART_2_PutString,"ax",%progbits
 638              		.align	2
 639              		.global	UART_2_PutString
 640              		.thumb
 641              		.thumb_func
 642              		.type	UART_2_PutString, %function
 643              	UART_2_PutString:
 644              	.LFB20:
1114:.\Generated_Source\PSoC5/UART_2.c **** 
1115:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* UART_2_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_2.c ****     }
1117:.\Generated_Source\PSoC5/UART_2.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 32


1118:.\Generated_Source\PSoC5/UART_2.c **** 
1119:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutString
1121:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_2.c ****     *
1123:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_2.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_2.c ****     *
1126:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_2.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_2.c ****     *
1129:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_2.c ****     *
1132:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_2.c ****     *
1136:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_2.c ****     *
1139:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_2.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_2.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_2.c ****     *
1144:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_2.c ****     {
 645              		.loc 1 1146 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              	.LVL28:
 650 0000 38B5     		push	{r3, r4, r5, lr}
 651              		.cfi_def_cfa_offset 16
 652              		.cfi_offset 3, -16
 653              		.cfi_offset 4, -12
 654              		.cfi_offset 5, -8
 655              		.cfi_offset 14, -4
 656              	.LVL29:
1147:.\Generated_Source\PSoC5/UART_2.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART_2.c **** 
1149:.\Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 657              		.loc 1 1150 0
 658 0002 074B     		ldr	r3, .L72
 659 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660 0006 2BB9     		cbnz	r3, .L70
 661 0008 38BD     		pop	{r3, r4, r5, pc}
 662              	.LVL30:
 663              	.L69:
1151:.\Generated_Source\PSoC5/UART_2.c ****         {
1152:.\Generated_Source\PSoC5/UART_2.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_2.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART_2.c ****             {
1155:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_PutChar((uint8)string[bufIndex]);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 33


 664              		.loc 1 1155 0
 665 000a FFF7FEFF 		bl	UART_2_PutChar
 666              	.LVL31:
1156:.\Generated_Source\PSoC5/UART_2.c ****                 bufIndex++;
 667              		.loc 1 1156 0
 668 000e 0134     		adds	r4, r4, #1
 669              	.LVL32:
 670 0010 A4B2     		uxth	r4, r4
 671              	.LVL33:
 672 0012 01E0     		b	.L67
 673              	.LVL34:
 674              	.L70:
 675 0014 0546     		mov	r5, r0
 676 0016 0024     		movs	r4, #0
 677              	.LVL35:
 678              	.L67:
1153:.\Generated_Source\PSoC5/UART_2.c ****             {
 679              		.loc 1 1153 0
 680 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 681 001a 0028     		cmp	r0, #0
 682 001c F5D1     		bne	.L69
 683 001e 38BD     		pop	{r3, r4, r5, pc}
 684              	.LVL36:
 685              	.L73:
 686              		.align	2
 687              	.L72:
 688 0020 00000000 		.word	.LANCHOR0
 689              		.cfi_endproc
 690              	.LFE20:
 691              		.size	UART_2_PutString, .-UART_2_PutString
 692              		.section	.text.UART_2_PutArray,"ax",%progbits
 693              		.align	2
 694              		.global	UART_2_PutArray
 695              		.thumb
 696              		.thumb_func
 697              		.type	UART_2_PutArray, %function
 698              	UART_2_PutArray:
 699              	.LFB21:
1157:.\Generated_Source\PSoC5/UART_2.c ****             }
1158:.\Generated_Source\PSoC5/UART_2.c ****         }
1159:.\Generated_Source\PSoC5/UART_2.c ****     }
1160:.\Generated_Source\PSoC5/UART_2.c **** 
1161:.\Generated_Source\PSoC5/UART_2.c **** 
1162:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutArray
1164:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_2.c ****     *
1166:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_2.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_2.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_2.c ****     *
1170:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_2.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_2.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_2.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_2.c ****     *
1175:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 34


1176:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_2.c ****     *
1178:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_2.c ****     *
1182:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_2.c ****     *
1185:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_2.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_2.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_2.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_2.c ****     *
1190:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_2.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_2.c ****     {
 700              		.loc 1 1193 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              	.LVL37:
1194:.\Generated_Source\PSoC5/UART_2.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART_2.c **** 
1196:.\Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 705              		.loc 1 1197 0
 706 0000 084B     		ldr	r3, .L80
 707 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 708 0004 33B9     		cbnz	r3, .L78
 709 0006 7047     		bx	lr
 710              	.LVL38:
 711              	.L77:
 712              		.cfi_def_cfa_offset 16
 713              		.cfi_offset 4, -16
 714              		.cfi_offset 5, -12
 715              		.cfi_offset 6, -8
 716              		.cfi_offset 14, -4
1198:.\Generated_Source\PSoC5/UART_2.c ****         {
1199:.\Generated_Source\PSoC5/UART_2.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART_2.c ****             {
1201:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_PutChar(string[bufIndex]);
 717              		.loc 1 1201 0
 718 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 719 000a FFF7FEFF 		bl	UART_2_PutChar
 720              	.LVL39:
1202:.\Generated_Source\PSoC5/UART_2.c ****                 bufIndex++;
 721              		.loc 1 1202 0
 722 000e 0134     		adds	r4, r4, #1
 723              	.LVL40:
 724 0010 E4B2     		uxtb	r4, r4
 725              	.LVL41:
 726 0012 03E0     		b	.L75
 727              	.LVL42:
 728              	.L78:
 729              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 35


 730              		.cfi_restore 4
 731              		.cfi_restore 5
 732              		.cfi_restore 6
 733              		.cfi_restore 14
1193:.\Generated_Source\PSoC5/UART_2.c ****         uint8 bufIndex = 0u;
 734              		.loc 1 1193 0
 735 0014 70B5     		push	{r4, r5, r6, lr}
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 4, -16
 738              		.cfi_offset 5, -12
 739              		.cfi_offset 6, -8
 740              		.cfi_offset 14, -4
 741 0016 0D46     		mov	r5, r1
 742 0018 0646     		mov	r6, r0
 743 001a 0024     		movs	r4, #0
 744              	.LVL43:
 745              	.L75:
1199:.\Generated_Source\PSoC5/UART_2.c ****             {
 746              		.loc 1 1199 0
 747 001c AC42     		cmp	r4, r5
 748 001e F3D3     		bcc	.L77
 749 0020 70BD     		pop	{r4, r5, r6, pc}
 750              	.LVL44:
 751              	.L81:
 752 0022 00BF     		.align	2
 753              	.L80:
 754 0024 00000000 		.word	.LANCHOR0
 755              		.cfi_endproc
 756              	.LFE21:
 757              		.size	UART_2_PutArray, .-UART_2_PutArray
 758              		.section	.text.UART_2_PutCRLF,"ax",%progbits
 759              		.align	2
 760              		.global	UART_2_PutCRLF
 761              		.thumb
 762              		.thumb_func
 763              		.type	UART_2_PutCRLF, %function
 764              	UART_2_PutCRLF:
 765              	.LFB22:
1203:.\Generated_Source\PSoC5/UART_2.c ****             }
1204:.\Generated_Source\PSoC5/UART_2.c ****         }
1205:.\Generated_Source\PSoC5/UART_2.c ****     }
1206:.\Generated_Source\PSoC5/UART_2.c **** 
1207:.\Generated_Source\PSoC5/UART_2.c **** 
1208:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_PutCRLF
1210:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_2.c ****     *
1212:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_2.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_2.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_2.c ****     *
1216:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_2.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_2.c ****     *
1219:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_2.c ****     *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 36


1222:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_2.c ****     *
1226:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_2.c ****     *
1229:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_2.c ****     {
 766              		.loc 1 1231 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL45:
 771 0000 08B5     		push	{r3, lr}
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 3, -8
 774              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 775              		.loc 1 1233 0
 776 0002 064B     		ldr	r3, .L85
 777 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 778 0006 3BB1     		cbz	r3, .L82
1234:.\Generated_Source\PSoC5/UART_2.c ****         {
1235:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(txDataByte);
 779              		.loc 1 1235 0
 780 0008 FFF7FEFF 		bl	UART_2_PutChar
 781              	.LVL46:
1236:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(0x0Du);
 782              		.loc 1 1236 0
 783 000c 0D20     		movs	r0, #13
 784 000e FFF7FEFF 		bl	UART_2_PutChar
 785              	.LVL47:
1237:.\Generated_Source\PSoC5/UART_2.c ****             UART_2_PutChar(0x0Au);
 786              		.loc 1 1237 0
 787 0012 0A20     		movs	r0, #10
 788 0014 FFF7FEFF 		bl	UART_2_PutChar
 789              	.LVL48:
 790              	.L82:
 791 0018 08BD     		pop	{r3, pc}
 792              	.L86:
 793 001a 00BF     		.align	2
 794              	.L85:
 795 001c 00000000 		.word	.LANCHOR0
 796              		.cfi_endproc
 797              	.LFE22:
 798              		.size	UART_2_PutCRLF, .-UART_2_PutCRLF
 799              		.section	.text.UART_2_GetTxBufferSize,"ax",%progbits
 800              		.align	2
 801              		.global	UART_2_GetTxBufferSize
 802              		.thumb
 803              		.thumb_func
 804              		.type	UART_2_GetTxBufferSize, %function
 805              	UART_2_GetTxBufferSize:
 806              	.LFB23:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 37


1238:.\Generated_Source\PSoC5/UART_2.c ****         }
1239:.\Generated_Source\PSoC5/UART_2.c ****     }
1240:.\Generated_Source\PSoC5/UART_2.c **** 
1241:.\Generated_Source\PSoC5/UART_2.c **** 
1242:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_2.c ****     *
1246:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_2.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_2.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_2.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_2.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_2.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_2.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_2.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_2.c ****     *
1255:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_2.c ****     *
1258:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_2.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_2.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_2.c ****     *
1262:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_2.c ****     *
1266:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_2.c ****     *
1269:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_2.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_2.c ****     *
1272:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_2.c ****     uint8 UART_2_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_2.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_2.c ****     {
 807              		.loc 1 1275 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART_2.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_2.c **** 
1278:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_2.c **** 
1280:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART_2.c **** 
1283:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_txBufferRead == UART_2_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART_2.c ****         {
1285:.\Generated_Source\PSoC5/UART_2.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_2.c ****         }
1287:.\Generated_Source\PSoC5/UART_2.c ****         else if(UART_2_txBufferRead < UART_2_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART_2.c ****         {
1289:.\Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_txBufferWrite - UART_2_txBufferRead);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 38


1290:.\Generated_Source\PSoC5/UART_2.c ****         }
1291:.\Generated_Source\PSoC5/UART_2.c ****         else
1292:.\Generated_Source\PSoC5/UART_2.c ****         {
1293:.\Generated_Source\PSoC5/UART_2.c ****             size = (UART_2_TX_BUFFER_SIZE - UART_2_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_2.c ****         }
1296:.\Generated_Source\PSoC5/UART_2.c **** 
1297:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART_2.c **** 
1299:.\Generated_Source\PSoC5/UART_2.c ****     #else
1300:.\Generated_Source\PSoC5/UART_2.c **** 
1301:.\Generated_Source\PSoC5/UART_2.c ****         size = UART_2_TXSTATUS_REG;
 812              		.loc 1 1301 0
 813 0000 074B     		ldr	r3, .L91
 814 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 0004 DBB2     		uxtb	r3, r3
 816              	.LVL49:
1302:.\Generated_Source\PSoC5/UART_2.c **** 
1303:.\Generated_Source\PSoC5/UART_2.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_2.c ****         if((size & UART_2_TX_STS_FIFO_FULL) != 0u)
 817              		.loc 1 1304 0
 818 0006 13F0040F 		tst	r3, #4
 819 000a 04D1     		bne	.L89
1305:.\Generated_Source\PSoC5/UART_2.c ****         {
1306:.\Generated_Source\PSoC5/UART_2.c ****             size = UART_2_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART_2.c ****         }
1308:.\Generated_Source\PSoC5/UART_2.c ****         else if((size & UART_2_TX_STS_FIFO_EMPTY) != 0u)
 820              		.loc 1 1308 0
 821 000c 13F0020F 		tst	r3, #2
 822 0010 03D0     		beq	.L90
1309:.\Generated_Source\PSoC5/UART_2.c ****         {
1310:.\Generated_Source\PSoC5/UART_2.c ****             size = 0u;
 823              		.loc 1 1310 0
 824 0012 0020     		movs	r0, #0
 825 0014 7047     		bx	lr
 826              	.L89:
1306:.\Generated_Source\PSoC5/UART_2.c ****         }
 827              		.loc 1 1306 0
 828 0016 0420     		movs	r0, #4
 829 0018 7047     		bx	lr
 830              	.L90:
1311:.\Generated_Source\PSoC5/UART_2.c ****         }
1312:.\Generated_Source\PSoC5/UART_2.c ****         else
1313:.\Generated_Source\PSoC5/UART_2.c ****         {
1314:.\Generated_Source\PSoC5/UART_2.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_2.c ****             size = 1u;
 831              		.loc 1 1315 0
 832 001a 0120     		movs	r0, #1
 833              	.LVL50:
1316:.\Generated_Source\PSoC5/UART_2.c ****         }
1317:.\Generated_Source\PSoC5/UART_2.c **** 
1318:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_2.c **** 
1320:.\Generated_Source\PSoC5/UART_2.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART_2.c ****     }
 834              		.loc 1 1321 0
 835 001c 7047     		bx	lr
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 39


 836              	.L92:
 837 001e 00BF     		.align	2
 838              	.L91:
 839 0020 6B640040 		.word	1073767531
 840              		.cfi_endproc
 841              	.LFE23:
 842              		.size	UART_2_GetTxBufferSize, .-UART_2_GetTxBufferSize
 843              		.section	.text.UART_2_ClearTxBuffer,"ax",%progbits
 844              		.align	2
 845              		.global	UART_2_ClearTxBuffer
 846              		.thumb
 847              		.thumb_func
 848              		.type	UART_2_ClearTxBuffer, %function
 849              	UART_2_ClearTxBuffer:
 850              	.LFB24:
1322:.\Generated_Source\PSoC5/UART_2.c **** 
1323:.\Generated_Source\PSoC5/UART_2.c **** 
1324:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_2.c ****     *
1328:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_2.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_2.c ****     *
1331:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_2.c ****     *
1334:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_2.c ****     *
1337:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_2.c ****     *
1341:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_2.c ****     *
1344:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_2.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_2.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_2.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_2.c ****     *
1349:.\Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_2.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_2.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_2.c ****     *
1353:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_2.c ****     {
 851              		.loc 1 1355 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855 0000 08B5     		push	{r3, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 3, -8
 858              		.cfi_offset 14, -4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 40


1356:.\Generated_Source\PSoC5/UART_2.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_2.c **** 
1358:.\Generated_Source\PSoC5/UART_2.c ****         enableInterrupts = CyEnterCriticalSection();
 859              		.loc 1 1358 0
 860 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 861              	.LVL51:
1359:.\Generated_Source\PSoC5/UART_2.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_AUX_CTL_REG |= (uint8)  UART_2_TX_FIFO_CLR;
 862              		.loc 1 1360 0
 863 0006 064B     		ldr	r3, .L95
 864 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 865 000a 42F00102 		orr	r2, r2, #1
 866 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_TXDATA_AUX_CTL_REG &= (uint8) ~UART_2_TX_FIFO_CLR;
 867              		.loc 1 1361 0
 868 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 869 0012 02F0FE02 		and	r2, r2, #254
 870 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART_2.c ****         CyExitCriticalSection(enableInterrupts);
 871              		.loc 1 1362 0
 872 0018 FFF7FEFF 		bl	CyExitCriticalSection
 873              	.LVL52:
 874 001c 08BD     		pop	{r3, pc}
 875              	.L96:
 876 001e 00BF     		.align	2
 877              	.L95:
 878 0020 9B640040 		.word	1073767579
 879              		.cfi_endproc
 880              	.LFE24:
 881              		.size	UART_2_ClearTxBuffer, .-UART_2_ClearTxBuffer
 882              		.section	.text.UART_2_SendBreak,"ax",%progbits
 883              		.align	2
 884              		.global	UART_2_SendBreak
 885              		.thumb
 886              		.thumb_func
 887              		.type	UART_2_SendBreak, %function
 888              	UART_2_SendBreak:
 889              	.LFB25:
1363:.\Generated_Source\PSoC5/UART_2.c **** 
1364:.\Generated_Source\PSoC5/UART_2.c ****     #if (UART_2_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_2.c **** 
1366:.\Generated_Source\PSoC5/UART_2.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART_2.c **** 
1369:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART_2.c **** 
1372:.\Generated_Source\PSoC5/UART_2.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_2.c ****         UART_2_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART_2.c **** 
1375:.\Generated_Source\PSoC5/UART_2.c ****     #endif /* (UART_2_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_2.c ****     }
1377:.\Generated_Source\PSoC5/UART_2.c **** 
1378:.\Generated_Source\PSoC5/UART_2.c **** 
1379:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SendBreak
1381:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 41


1382:.\Generated_Source\PSoC5/UART_2.c ****     *
1383:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_2.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_2.c ****     *
1386:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_2.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_2.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_2.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_2.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_2.c ****     *   UART_2_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_2.c ****     *      UART_2_SEND_BREAK and UART_2_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_2.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_2.c ****     *
1398:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_2.c ****     *
1401:.\Generated_Source\PSoC5/UART_2.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_2.c ****     *  UART_2_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_2.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_2.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_2.c ****     *
1406:.\Generated_Source\PSoC5/UART_2.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_2.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_2.c ****     *
1409:.\Generated_Source\PSoC5/UART_2.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_2.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_2.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_2.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_2.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_2.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_2.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_2.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_2.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_2.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_2.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_2.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_2.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_2.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_2.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_2.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_2.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_2.c ****     *     When interrupt appear with UART_2_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_2.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_2.c ****     *
1432:.\Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_2.c ****     *  The UART_2_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_2.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_2.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_2.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_2.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_2.c ****     *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 42


1439:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_2.c ****     {
 890              		.loc 1 1441 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895              	.LVL53:
1442:.\Generated_Source\PSoC5/UART_2.c **** 
1443:.\Generated_Source\PSoC5/UART_2.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_2.c ****         if(UART_2_initVar != 0u)
 896              		.loc 1 1444 0
 897 0000 124B     		ldr	r3, .L104
 898 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 0004 0BB3     		cbz	r3, .L97
 900              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_2.c ****         {
1446:.\Generated_Source\PSoC5/UART_2.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_2.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_2.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_2.c **** 
1450:.\Generated_Source\PSoC5/UART_2.c ****         #if(UART_2_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_2.c **** 
1452:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_2.c ****             {
1455:.\Generated_Source\PSoC5/UART_2.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART_2.c ****                                                       UART_2_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_2.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART_2.c **** 
1461:.\Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_2.c ****                 {
1463:.\Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART_2.c ****                 }
1465:.\Generated_Source\PSoC5/UART_2.c ****                 while((tmpStat & UART_2_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART_2.c ****             }
1467:.\Generated_Source\PSoC5/UART_2.c **** 
1468:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_2.c ****             {
1471:.\Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_2.c ****                 {
1473:.\Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART_2.c ****                 }
1475:.\Generated_Source\PSoC5/UART_2.c ****                 while(((uint8)~tmpStat & UART_2_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART_2.c ****             }
1477:.\Generated_Source\PSoC5/UART_2.c **** 
1478:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_REINIT) ||
1480:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_2.c ****             {
1482:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART_2.c ****                                               (uint8)~UART_2_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_2.c ****             }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 43


1485:.\Generated_Source\PSoC5/UART_2.c **** 
1486:.\Generated_Source\PSoC5/UART_2.c ****         #else /* UART_2_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_2.c **** 
1488:.\Generated_Source\PSoC5/UART_2.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_2.c **** 
1490:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_SEND_BREAK) ||
 901              		.loc 1 1490 0
 902 0006 08B1     		cbz	r0, .L99
 903              		.loc 1 1490 0 is_stmt 0 discriminator 1
 904 0008 0328     		cmp	r0, #3
 905 000a 0DD1     		bne	.L100
 906              	.L99:
1491:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_2.c ****             {
1493:.\Generated_Source\PSoC5/UART_2.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_2.c ****                 #if( (UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_2.c ****                                     (UART_2_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_WriteControlRegister(UART_2_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_2.c ****                                                           UART_2_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_2.c **** 
1500:.\Generated_Source\PSoC5/UART_2.c ****                 #if(UART_2_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_2.c ****                     txPeriod = UART_2_TXBITCLKTX_COMPLETE_REG;
 907              		.loc 1 1501 0 is_stmt 1
 908 000c 104B     		ldr	r3, .L104+4
 909 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 910 0010 0E4A     		ldr	r2, .L104
 911 0012 5170     		strb	r1, [r2, #1]
1502:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_TXBITCLKTX_COMPLETE_REG = UART_2_TXBITCTR_BREAKBITS;
 912              		.loc 1 1502 0
 913 0014 6722     		movs	r2, #103
 914 0016 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART_2.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_2.c ****                     txPeriod = UART_2_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_2.c ****                     UART_2_TXBITCTR_PERIOD_REG = UART_2_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_2.c ****                 #endif /* End UART_2_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_2.c **** 
1508:.\Generated_Source\PSoC5/UART_2.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXDATA_REG = 0u;
 915              		.loc 1 1509 0
 916 0018 0022     		movs	r2, #0
 917 001a 0F33     		adds	r3, r3, #15
 918 001c 1A70     		strb	r2, [r3]
 919              	.L101:
1510:.\Generated_Source\PSoC5/UART_2.c **** 
1511:.\Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_2.c ****                 {
1513:.\Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
 920              		.loc 1 1513 0 discriminator 1
 921 001e 0D4B     		ldr	r3, .L104+8
 922 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923              	.LVL54:
1514:.\Generated_Source\PSoC5/UART_2.c ****                 }
1515:.\Generated_Source\PSoC5/UART_2.c ****                 while((tmpStat & UART_2_TX_STS_FIFO_EMPTY) != 0u);
 924              		.loc 1 1515 0 discriminator 1
 925 0022 13F0020F 		tst	r3, #2
 926 0026 FAD1     		bne	.L101
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 44


 927              	.LVL55:
 928              	.L100:
1516:.\Generated_Source\PSoC5/UART_2.c ****             }
1517:.\Generated_Source\PSoC5/UART_2.c **** 
1518:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
 929              		.loc 1 1518 0
 930 0028 0128     		cmp	r0, #1
 931 002a 01D0     		beq	.L102
 932              		.loc 1 1518 0 is_stmt 0 discriminator 1
 933 002c 0328     		cmp	r0, #3
 934 002e 04D1     		bne	.L103
 935              	.L102:
1519:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_2.c ****             {
1521:.\Generated_Source\PSoC5/UART_2.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_2.c ****                 {
1523:.\Generated_Source\PSoC5/UART_2.c ****                     tmpStat = UART_2_TXSTATUS_REG;
 936              		.loc 1 1523 0 is_stmt 1 discriminator 1
 937 0030 084B     		ldr	r3, .L104+8
 938 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939              	.LVL56:
1524:.\Generated_Source\PSoC5/UART_2.c ****                 }
1525:.\Generated_Source\PSoC5/UART_2.c ****                 while(((uint8)~tmpStat & UART_2_TX_STS_COMPLETE) != 0u);
 940              		.loc 1 1525 0 discriminator 1
 941 0034 13F0010F 		tst	r3, #1
 942 0038 FAD0     		beq	.L102
 943              	.LVL57:
 944              	.L103:
1526:.\Generated_Source\PSoC5/UART_2.c ****             }
1527:.\Generated_Source\PSoC5/UART_2.c **** 
1528:.\Generated_Source\PSoC5/UART_2.c ****             if( (retMode == UART_2_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_REINIT) ||
 945              		.loc 1 1529 0
 946 003a 0138     		subs	r0, r0, #1
 947              	.LVL58:
 948 003c C0B2     		uxtb	r0, r0
1528:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_REINIT) ||
 949              		.loc 1 1528 0
 950 003e 0228     		cmp	r0, #2
 951 0040 03D8     		bhi	.L97
1530:.\Generated_Source\PSoC5/UART_2.c ****                 (retMode == UART_2_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_2.c ****             {
1532:.\Generated_Source\PSoC5/UART_2.c **** 
1533:.\Generated_Source\PSoC5/UART_2.c ****             #if(UART_2_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXBITCLKTX_COMPLETE_REG = txPeriod;
 952              		.loc 1 1534 0
 953 0042 024B     		ldr	r3, .L104
 954 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 955 0046 024B     		ldr	r3, .L104+4
 956 0048 1A70     		strb	r2, [r3]
 957              	.L97:
 958 004a 7047     		bx	lr
 959              	.L105:
 960              		.align	2
 961              	.L104:
 962 004c 00000000 		.word	.LANCHOR0
 963 0050 3C640040 		.word	1073767484
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 45


 964 0054 6B640040 		.word	1073767531
 965              	.LBE2:
 966              		.cfi_endproc
 967              	.LFE25:
 968              		.size	UART_2_SendBreak, .-UART_2_SendBreak
 969              		.section	.text.UART_2_SetTxAddressMode,"ax",%progbits
 970              		.align	2
 971              		.global	UART_2_SetTxAddressMode
 972              		.thumb
 973              		.thumb_func
 974              		.type	UART_2_SetTxAddressMode, %function
 975              	UART_2_SetTxAddressMode:
 976              	.LFB26:
1535:.\Generated_Source\PSoC5/UART_2.c ****             #else
1536:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_2.c **** 
1539:.\Generated_Source\PSoC5/UART_2.c ****             #if( (UART_2_PARITY_TYPE != UART_2__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_2.c ****                  (UART_2_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_2.c ****                 UART_2_WriteControlRegister(UART_2_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_2.c ****                                                       (uint8) ~UART_2_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_2.c ****             #endif /* End UART_2_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_2.c ****             }
1545:.\Generated_Source\PSoC5/UART_2.c ****         #endif    /* End UART_2_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_2.c ****         }
1547:.\Generated_Source\PSoC5/UART_2.c ****     }
1548:.\Generated_Source\PSoC5/UART_2.c **** 
1549:.\Generated_Source\PSoC5/UART_2.c **** 
1550:.\Generated_Source\PSoC5/UART_2.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_2.c ****     * Function Name: UART_2_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_2.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_2.c ****     *
1554:.\Generated_Source\PSoC5/UART_2.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_2.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_2.c ****     *
1557:.\Generated_Source\PSoC5/UART_2.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_2.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_2.c ****     *       UART_2_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_2.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_2.c ****     *       UART_2_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_2.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_2.c ****     *
1564:.\Generated_Source\PSoC5/UART_2.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_2.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_2.c ****     *
1567:.\Generated_Source\PSoC5/UART_2.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_2.c ****     *  This function sets and clears UART_2_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_2.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_2.c ****     *
1571:.\Generated_Source\PSoC5/UART_2.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_2.c ****     void UART_2_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_2.c ****     {
 977              		.loc 1 1573 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 46


 982              	.LVL59:
 983 0000 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE26:
 986              		.size	UART_2_SetTxAddressMode, .-UART_2_SetTxAddressMode
 987              		.global	UART_2_initVar
 988 0002 00BF     		.bss
 989              		.set	.LANCHOR0,. + 0
 990              		.type	UART_2_initVar, %object
 991              		.size	UART_2_initVar, 1
 992              	UART_2_initVar:
 993 0000 00       		.space	1
 994              		.type	txPeriod.4966, %object
 995              		.size	txPeriod.4966, 1
 996              	txPeriod.4966:
 997 0001 00       		.space	1
 998              		.text
 999              	.Letext0:
 1000              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1001              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1002              		.section	.debug_info,"",%progbits
 1003              	.Ldebug_info0:
 1004 0000 CA050000 		.4byte	0x5ca
 1005 0004 0400     		.2byte	0x4
 1006 0006 00000000 		.4byte	.Ldebug_abbrev0
 1007 000a 04       		.byte	0x4
 1008 000b 01       		.uleb128 0x1
 1009 000c B6030000 		.4byte	.LASF59
 1010 0010 01       		.byte	0x1
 1011 0011 6A000000 		.4byte	.LASF60
 1012 0015 A0020000 		.4byte	.LASF61
 1013 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1014 001d 00000000 		.4byte	0
 1015 0021 00000000 		.4byte	.Ldebug_line0
 1016 0025 02       		.uleb128 0x2
 1017 0026 01       		.byte	0x1
 1018 0027 06       		.byte	0x6
 1019 0028 E5000000 		.4byte	.LASF0
 1020 002c 02       		.uleb128 0x2
 1021 002d 01       		.byte	0x1
 1022 002e 08       		.byte	0x8
 1023 002f 88020000 		.4byte	.LASF1
 1024 0033 02       		.uleb128 0x2
 1025 0034 02       		.byte	0x2
 1026 0035 05       		.byte	0x5
 1027 0036 96020000 		.4byte	.LASF2
 1028 003a 02       		.uleb128 0x2
 1029 003b 02       		.byte	0x2
 1030 003c 07       		.byte	0x7
 1031 003d C2010000 		.4byte	.LASF3
 1032 0041 02       		.uleb128 0x2
 1033 0042 04       		.byte	0x4
 1034 0043 05       		.byte	0x5
 1035 0044 1D010000 		.4byte	.LASF4
 1036 0048 02       		.uleb128 0x2
 1037 0049 04       		.byte	0x4
 1038 004a 07       		.byte	0x7
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 47


 1039 004b 7D010000 		.4byte	.LASF5
 1040 004f 02       		.uleb128 0x2
 1041 0050 08       		.byte	0x8
 1042 0051 05       		.byte	0x5
 1043 0052 D7000000 		.4byte	.LASF6
 1044 0056 02       		.uleb128 0x2
 1045 0057 08       		.byte	0x8
 1046 0058 07       		.byte	0x7
 1047 0059 8C000000 		.4byte	.LASF7
 1048 005d 03       		.uleb128 0x3
 1049 005e 04       		.byte	0x4
 1050 005f 05       		.byte	0x5
 1051 0060 696E7400 		.ascii	"int\000"
 1052 0064 02       		.uleb128 0x2
 1053 0065 04       		.byte	0x4
 1054 0066 07       		.byte	0x7
 1055 0067 70010000 		.4byte	.LASF8
 1056 006b 04       		.uleb128 0x4
 1057 006c 26010000 		.4byte	.LASF9
 1058 0070 02       		.byte	0x2
 1059 0071 C2       		.byte	0xc2
 1060 0072 2C000000 		.4byte	0x2c
 1061 0076 04       		.uleb128 0x4
 1062 0077 2A000000 		.4byte	.LASF10
 1063 007b 02       		.byte	0x2
 1064 007c C3       		.byte	0xc3
 1065 007d 3A000000 		.4byte	0x3a
 1066 0081 02       		.uleb128 0x2
 1067 0082 04       		.byte	0x4
 1068 0083 04       		.byte	0x4
 1069 0084 54020000 		.4byte	.LASF11
 1070 0088 02       		.uleb128 0x2
 1071 0089 08       		.byte	0x8
 1072 008a 04       		.byte	0x4
 1073 008b 2C010000 		.4byte	.LASF12
 1074 008f 04       		.uleb128 0x4
 1075 0090 2C030000 		.4byte	.LASF13
 1076 0094 02       		.byte	0x2
 1077 0095 D3       		.byte	0xd3
 1078 0096 9A000000 		.4byte	0x9a
 1079 009a 02       		.uleb128 0x2
 1080 009b 01       		.byte	0x1
 1081 009c 08       		.byte	0x8
 1082 009d 0F030000 		.4byte	.LASF14
 1083 00a1 05       		.uleb128 0x5
 1084 00a2 83020000 		.4byte	.LASF15
 1085 00a6 02       		.byte	0x2
 1086 00a7 6C01     		.2byte	0x16c
 1087 00a9 AD000000 		.4byte	0xad
 1088 00ad 06       		.uleb128 0x6
 1089 00ae 6B000000 		.4byte	0x6b
 1090 00b2 02       		.uleb128 0x2
 1091 00b3 04       		.byte	0x4
 1092 00b4 07       		.byte	0x7
 1093 00b5 16020000 		.4byte	.LASF16
 1094 00b9 07       		.uleb128 0x7
 1095 00ba 5E040000 		.4byte	.LASF62
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 48


 1096 00be 01       		.byte	0x1
 1097 00bf 6A       		.byte	0x6a
 1098 00c0 00000000 		.4byte	.LFB1
 1099 00c4 24000000 		.4byte	.LFE1-.LFB1
 1100 00c8 01       		.uleb128 0x1
 1101 00c9 9C       		.byte	0x9c
 1102 00ca 08       		.uleb128 0x8
 1103 00cb B2000000 		.4byte	.LASF17
 1104 00cf 01       		.byte	0x1
 1105 00d0 B7       		.byte	0xb7
 1106 00d1 00000000 		.4byte	.LFB2
 1107 00d5 30000000 		.4byte	.LFE2-.LFB2
 1108 00d9 01       		.uleb128 0x1
 1109 00da 9C       		.byte	0x9c
 1110 00db 01010000 		.4byte	0x101
 1111 00df 09       		.uleb128 0x9
 1112 00e0 82030000 		.4byte	.LASF20
 1113 00e4 01       		.byte	0x1
 1114 00e5 B9       		.byte	0xb9
 1115 00e6 6B000000 		.4byte	0x6b
 1116 00ea 00000000 		.4byte	.LLST0
 1117 00ee 0A       		.uleb128 0xa
 1118 00ef 06000000 		.4byte	.LVL0
 1119 00f3 B5050000 		.4byte	0x5b5
 1120 00f7 0A       		.uleb128 0xa
 1121 00f8 28000000 		.4byte	.LVL1
 1122 00fc C0050000 		.4byte	0x5c0
 1123 0100 00       		.byte	0
 1124 0101 08       		.uleb128 0x8
 1125 0102 02030000 		.4byte	.LASF18
 1126 0106 01       		.byte	0x1
 1127 0107 4C       		.byte	0x4c
 1128 0108 00000000 		.4byte	.LFB0
 1129 010c 1C000000 		.4byte	.LFE0-.LFB0
 1130 0110 01       		.uleb128 0x1
 1131 0111 9C       		.byte	0x9c
 1132 0112 29010000 		.4byte	0x129
 1133 0116 0A       		.uleb128 0xa
 1134 0117 0C000000 		.4byte	.LVL2
 1135 011b B9000000 		.4byte	0xb9
 1136 011f 0A       		.uleb128 0xa
 1137 0120 16000000 		.4byte	.LVL3
 1138 0124 CA000000 		.4byte	0xca
 1139 0128 00       		.byte	0
 1140 0129 08       		.uleb128 0x8
 1141 012a 30020000 		.4byte	.LASF19
 1142 012e 01       		.byte	0x1
 1143 012f F0       		.byte	0xf0
 1144 0130 00000000 		.4byte	.LFB3
 1145 0134 30000000 		.4byte	.LFE3-.LFB3
 1146 0138 01       		.uleb128 0x1
 1147 0139 9C       		.byte	0x9c
 1148 013a 60010000 		.4byte	0x160
 1149 013e 09       		.uleb128 0x9
 1150 013f 82030000 		.4byte	.LASF20
 1151 0143 01       		.byte	0x1
 1152 0144 F2       		.byte	0xf2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 49


 1153 0145 6B000000 		.4byte	0x6b
 1154 0149 13000000 		.4byte	.LLST1
 1155 014d 0A       		.uleb128 0xa
 1156 014e 06000000 		.4byte	.LVL4
 1157 0152 B5050000 		.4byte	0x5b5
 1158 0156 0A       		.uleb128 0xa
 1159 0157 28000000 		.4byte	.LVL5
 1160 015b C0050000 		.4byte	0x5c0
 1161 015f 00       		.byte	0
 1162 0160 0B       		.uleb128 0xb
 1163 0161 67030000 		.4byte	.LASF43
 1164 0165 01       		.byte	0x1
 1165 0166 2701     		.2byte	0x127
 1166 0168 6B000000 		.4byte	0x6b
 1167 016c 00000000 		.4byte	.LFB4
 1168 0170 04000000 		.4byte	.LFE4-.LFB4
 1169 0174 01       		.uleb128 0x1
 1170 0175 9C       		.byte	0x9c
 1171 0176 0C       		.uleb128 0xc
 1172 0177 93030000 		.4byte	.LASF21
 1173 017b 01       		.byte	0x1
 1174 017c 3F01     		.2byte	0x13f
 1175 017e 00000000 		.4byte	.LFB5
 1176 0182 02000000 		.4byte	.LFE5-.LFB5
 1177 0186 01       		.uleb128 0x1
 1178 0187 9C       		.byte	0x9c
 1179 0188 9B010000 		.4byte	0x19b
 1180 018c 0D       		.uleb128 0xd
 1181 018d 3F010000 		.4byte	.LASF23
 1182 0191 01       		.byte	0x1
 1183 0192 3F01     		.2byte	0x13f
 1184 0194 6B000000 		.4byte	0x6b
 1185 0198 01       		.uleb128 0x1
 1186 0199 50       		.byte	0x50
 1187 019a 00       		.byte	0
 1188 019b 0C       		.uleb128 0xc
 1189 019c 69020000 		.4byte	.LASF22
 1190 01a0 01       		.byte	0x1
 1191 01a1 6701     		.2byte	0x167
 1192 01a3 00000000 		.4byte	.LFB6
 1193 01a7 0C000000 		.4byte	.LFE6-.LFB6
 1194 01ab 01       		.uleb128 0x1
 1195 01ac 9C       		.byte	0x9c
 1196 01ad C0010000 		.4byte	0x1c0
 1197 01b1 0D       		.uleb128 0xd
 1198 01b2 F3010000 		.4byte	.LASF24
 1199 01b6 01       		.byte	0x1
 1200 01b7 6701     		.2byte	0x167
 1201 01b9 6B000000 		.4byte	0x6b
 1202 01bd 01       		.uleb128 0x1
 1203 01be 50       		.byte	0x50
 1204 01bf 00       		.byte	0
 1205 01c0 0E       		.uleb128 0xe
 1206 01c1 47010000 		.4byte	.LASF26
 1207 01c5 01       		.byte	0x1
 1208 01c6 8801     		.2byte	0x188
 1209 01c8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 50


 1210 01cc 00000000 		.4byte	.LFB7
 1211 01d0 0C000000 		.4byte	.LFE7-.LFB7
 1212 01d4 01       		.uleb128 0x1
 1213 01d5 9C       		.byte	0x9c
 1214 01d6 E9010000 		.4byte	0x1e9
 1215 01da 0F       		.uleb128 0xf
 1216 01db FB020000 		.4byte	.LASF25
 1217 01df 01       		.byte	0x1
 1218 01e0 8A01     		.2byte	0x18a
 1219 01e2 6B000000 		.4byte	0x6b
 1220 01e6 01       		.uleb128 0x1
 1221 01e7 50       		.byte	0x50
 1222 01e8 00       		.byte	0
 1223 01e9 0E       		.uleb128 0xe
 1224 01ea FA010000 		.4byte	.LASF27
 1225 01ee 01       		.byte	0x1
 1226 01ef E501     		.2byte	0x1e5
 1227 01f1 6B000000 		.4byte	0x6b
 1228 01f5 00000000 		.4byte	.LFB8
 1229 01f9 10000000 		.4byte	.LFE8-.LFB8
 1230 01fd 01       		.uleb128 0x1
 1231 01fe 9C       		.byte	0x9c
 1232 01ff 14020000 		.4byte	0x214
 1233 0203 10       		.uleb128 0x10
 1234 0204 AF030000 		.4byte	.LASF28
 1235 0208 01       		.byte	0x1
 1236 0209 E701     		.2byte	0x1e7
 1237 020b 6B000000 		.4byte	0x6b
 1238 020f 26000000 		.4byte	.LLST2
 1239 0213 00       		.byte	0
 1240 0214 0E       		.uleb128 0xe
 1241 0215 A3000000 		.4byte	.LASF29
 1242 0219 01       		.byte	0x1
 1243 021a 1402     		.2byte	0x214
 1244 021c 6B000000 		.4byte	0x6b
 1245 0220 00000000 		.4byte	.LFB9
 1246 0224 2C000000 		.4byte	.LFE9-.LFB9
 1247 0228 01       		.uleb128 0x1
 1248 0229 9C       		.byte	0x9c
 1249 022a 4D020000 		.4byte	0x24d
 1250 022e 10       		.uleb128 0x10
 1251 022f FB020000 		.4byte	.LASF25
 1252 0233 01       		.byte	0x1
 1253 0234 1602     		.2byte	0x216
 1254 0236 6B000000 		.4byte	0x6b
 1255 023a 3E000000 		.4byte	.LLST3
 1256 023e 0F       		.uleb128 0xf
 1257 023f 27020000 		.4byte	.LASF30
 1258 0243 01       		.byte	0x1
 1259 0244 1702     		.2byte	0x217
 1260 0246 6B000000 		.4byte	0x6b
 1261 024a 01       		.uleb128 0x1
 1262 024b 53       		.byte	0x53
 1263 024c 00       		.byte	0
 1264 024d 0E       		.uleb128 0xe
 1265 024e 5A020000 		.4byte	.LASF31
 1266 0252 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 51


 1267 0253 7A02     		.2byte	0x27a
 1268 0255 76000000 		.4byte	0x76
 1269 0259 00000000 		.4byte	.LFB10
 1270 025d 12000000 		.4byte	.LFE10-.LFB10
 1271 0261 01       		.uleb128 0x1
 1272 0262 9C       		.byte	0x9c
 1273 0263 7A020000 		.4byte	0x27a
 1274 0267 0A       		.uleb128 0xa
 1275 0268 06000000 		.4byte	.LVL17
 1276 026c E9010000 		.4byte	0x1e9
 1277 0270 0A       		.uleb128 0xa
 1278 0271 0C000000 		.4byte	.LVL18
 1279 0275 C0010000 		.4byte	0x1c0
 1280 0279 00       		.byte	0
 1281 027a 0E       		.uleb128 0xe
 1282 027b A6010000 		.4byte	.LASF32
 1283 027f 01       		.byte	0x1
 1284 0280 AB02     		.2byte	0x2ab
 1285 0282 6B000000 		.4byte	0x6b
 1286 0286 00000000 		.4byte	.LFB11
 1287 028a 18000000 		.4byte	.LFE11-.LFB11
 1288 028e 01       		.uleb128 0x1
 1289 028f 9C       		.byte	0x9c
 1290 0290 A3020000 		.4byte	0x2a3
 1291 0294 0F       		.uleb128 0xf
 1292 0295 BD010000 		.4byte	.LASF33
 1293 0299 01       		.byte	0x1
 1294 029a AE02     		.2byte	0x2ae
 1295 029c 6B000000 		.4byte	0x6b
 1296 02a0 01       		.uleb128 0x1
 1297 02a1 50       		.byte	0x50
 1298 02a2 00       		.byte	0
 1299 02a3 0C       		.uleb128 0xc
 1300 02a4 DE010000 		.4byte	.LASF34
 1301 02a8 01       		.byte	0x1
 1302 02a9 F502     		.2byte	0x2f5
 1303 02ab 00000000 		.4byte	.LFB12
 1304 02af 24000000 		.4byte	.LFE12-.LFB12
 1305 02b3 01       		.uleb128 0x1
 1306 02b4 9C       		.byte	0x9c
 1307 02b5 DC020000 		.4byte	0x2dc
 1308 02b9 10       		.uleb128 0x10
 1309 02ba 82030000 		.4byte	.LASF20
 1310 02be 01       		.byte	0x1
 1311 02bf F702     		.2byte	0x2f7
 1312 02c1 6B000000 		.4byte	0x6b
 1313 02c5 74000000 		.4byte	.LLST4
 1314 02c9 0A       		.uleb128 0xa
 1315 02ca 06000000 		.4byte	.LVL20
 1316 02ce B5050000 		.4byte	0x5b5
 1317 02d2 0A       		.uleb128 0xa
 1318 02d3 1C000000 		.4byte	.LVL21
 1319 02d7 C0050000 		.4byte	0x5c0
 1320 02db 00       		.byte	0
 1321 02dc 0C       		.uleb128 0xc
 1322 02dd 14030000 		.4byte	.LASF35
 1323 02e1 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 52


 1324 02e2 2D03     		.2byte	0x32d
 1325 02e4 00000000 		.4byte	.LFB13
 1326 02e8 02000000 		.4byte	.LFE13-.LFB13
 1327 02ec 01       		.uleb128 0x1
 1328 02ed 9C       		.byte	0x9c
 1329 02ee 01030000 		.4byte	0x301
 1330 02f2 0D       		.uleb128 0xd
 1331 02f3 33010000 		.4byte	.LASF36
 1332 02f7 01       		.byte	0x1
 1333 02f8 2D03     		.2byte	0x32d
 1334 02fa 6B000000 		.4byte	0x6b
 1335 02fe 01       		.uleb128 0x1
 1336 02ff 50       		.byte	0x50
 1337 0300 00       		.byte	0
 1338 0301 0C       		.uleb128 0xc
 1339 0302 00000000 		.4byte	.LASF37
 1340 0306 01       		.byte	0x1
 1341 0307 5903     		.2byte	0x359
 1342 0309 00000000 		.4byte	.LFB14
 1343 030d 0C000000 		.4byte	.LFE14-.LFB14
 1344 0311 01       		.uleb128 0x1
 1345 0312 9C       		.byte	0x9c
 1346 0313 26030000 		.4byte	0x326
 1347 0317 0D       		.uleb128 0xd
 1348 0318 1F020000 		.4byte	.LASF38
 1349 031c 01       		.byte	0x1
 1350 031d 5903     		.2byte	0x359
 1351 031f 6B000000 		.4byte	0x6b
 1352 0323 01       		.uleb128 0x1
 1353 0324 50       		.byte	0x50
 1354 0325 00       		.byte	0
 1355 0326 0C       		.uleb128 0xc
 1356 0327 15000000 		.4byte	.LASF39
 1357 032b 01       		.byte	0x1
 1358 032c 6D03     		.2byte	0x36d
 1359 032e 00000000 		.4byte	.LFB15
 1360 0332 0C000000 		.4byte	.LFE15-.LFB15
 1361 0336 01       		.uleb128 0x1
 1362 0337 9C       		.byte	0x9c
 1363 0338 4B030000 		.4byte	0x34b
 1364 033c 0D       		.uleb128 0xd
 1365 033d 1F020000 		.4byte	.LASF38
 1366 0341 01       		.byte	0x1
 1367 0342 6D03     		.2byte	0x36d
 1368 0344 6B000000 		.4byte	0x6b
 1369 0348 01       		.uleb128 0x1
 1370 0349 50       		.byte	0x50
 1371 034a 00       		.byte	0
 1372 034b 0C       		.uleb128 0xc
 1373 034c 44040000 		.4byte	.LASF40
 1374 0350 01       		.byte	0x1
 1375 0351 8C03     		.2byte	0x38c
 1376 0353 00000000 		.4byte	.LFB16
 1377 0357 0C000000 		.4byte	.LFE16-.LFB16
 1378 035b 01       		.uleb128 0x1
 1379 035c 9C       		.byte	0x9c
 1380 035d 70030000 		.4byte	0x370
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 53


 1381 0361 0D       		.uleb128 0xd
 1382 0362 F3010000 		.4byte	.LASF24
 1383 0366 01       		.byte	0x1
 1384 0367 8C03     		.2byte	0x38c
 1385 0369 6B000000 		.4byte	0x6b
 1386 036d 01       		.uleb128 0x1
 1387 036e 50       		.byte	0x50
 1388 036f 00       		.byte	0
 1389 0370 0C       		.uleb128 0xc
 1390 0371 E8020000 		.4byte	.LASF41
 1391 0375 01       		.byte	0x1
 1392 0376 AE03     		.2byte	0x3ae
 1393 0378 00000000 		.4byte	.LFB17
 1394 037c 14000000 		.4byte	.LFE17-.LFB17
 1395 0380 01       		.uleb128 0x1
 1396 0381 9C       		.byte	0x9c
 1397 0382 95030000 		.4byte	0x395
 1398 0386 0D       		.uleb128 0xd
 1399 0387 47000000 		.4byte	.LASF42
 1400 038b 01       		.byte	0x1
 1401 038c AE03     		.2byte	0x3ae
 1402 038e 6B000000 		.4byte	0x6b
 1403 0392 01       		.uleb128 0x1
 1404 0393 50       		.byte	0x50
 1405 0394 00       		.byte	0
 1406 0395 0B       		.uleb128 0xb
 1407 0396 FA000000 		.4byte	.LASF44
 1408 039a 01       		.byte	0x1
 1409 039b EB03     		.2byte	0x3eb
 1410 039d 6B000000 		.4byte	0x6b
 1411 03a1 00000000 		.4byte	.LFB18
 1412 03a5 0C000000 		.4byte	.LFE18-.LFB18
 1413 03a9 01       		.uleb128 0x1
 1414 03aa 9C       		.byte	0x9c
 1415 03ab 0C       		.uleb128 0xc
 1416 03ac 0E010000 		.4byte	.LASF45
 1417 03b0 01       		.byte	0x1
 1418 03b1 1104     		.2byte	0x411
 1419 03b3 00000000 		.4byte	.LFB19
 1420 03b7 18000000 		.4byte	.LFE19-.LFB19
 1421 03bb 01       		.uleb128 0x1
 1422 03bc 9C       		.byte	0x9c
 1423 03bd D0030000 		.4byte	0x3d0
 1424 03c1 0D       		.uleb128 0xd
 1425 03c2 47000000 		.4byte	.LASF42
 1426 03c6 01       		.byte	0x1
 1427 03c7 1104     		.2byte	0x411
 1428 03c9 6B000000 		.4byte	0x6b
 1429 03cd 01       		.uleb128 0x1
 1430 03ce 50       		.byte	0x50
 1431 03cf 00       		.byte	0
 1432 03d0 0C       		.uleb128 0xc
 1433 03d1 52000000 		.4byte	.LASF46
 1434 03d5 01       		.byte	0x1
 1435 03d6 7904     		.2byte	0x479
 1436 03d8 00000000 		.4byte	.LFB20
 1437 03dc 24000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 54


 1438 03e0 01       		.uleb128 0x1
 1439 03e1 9C       		.byte	0x9c
 1440 03e2 10040000 		.4byte	0x410
 1441 03e6 11       		.uleb128 0x11
 1442 03e7 63000000 		.4byte	.LASF47
 1443 03eb 01       		.byte	0x1
 1444 03ec 7904     		.2byte	0x479
 1445 03ee 10040000 		.4byte	0x410
 1446 03f2 87000000 		.4byte	.LLST5
 1447 03f6 10       		.uleb128 0x10
 1448 03f7 D5010000 		.4byte	.LASF48
 1449 03fb 01       		.byte	0x1
 1450 03fc 7B04     		.2byte	0x47b
 1451 03fe 76000000 		.4byte	0x76
 1452 0402 C9000000 		.4byte	.LLST6
 1453 0406 0A       		.uleb128 0xa
 1454 0407 0E000000 		.4byte	.LVL31
 1455 040b AB030000 		.4byte	0x3ab
 1456 040f 00       		.byte	0
 1457 0410 12       		.uleb128 0x12
 1458 0411 04       		.byte	0x4
 1459 0412 16040000 		.4byte	0x416
 1460 0416 13       		.uleb128 0x13
 1461 0417 8F000000 		.4byte	0x8f
 1462 041b 0C       		.uleb128 0xc
 1463 041c CE020000 		.4byte	.LASF49
 1464 0420 01       		.byte	0x1
 1465 0421 A704     		.2byte	0x4a7
 1466 0423 00000000 		.4byte	.LFB21
 1467 0427 28000000 		.4byte	.LFE21-.LFB21
 1468 042b 01       		.uleb128 0x1
 1469 042c 9C       		.byte	0x9c
 1470 042d 6B040000 		.4byte	0x46b
 1471 0431 11       		.uleb128 0x11
 1472 0432 63000000 		.4byte	.LASF47
 1473 0436 01       		.byte	0x1
 1474 0437 A704     		.2byte	0x4a7
 1475 0439 6B040000 		.4byte	0x46b
 1476 043d 0A010000 		.4byte	.LLST7
 1477 0441 11       		.uleb128 0x11
 1478 0442 DE020000 		.4byte	.LASF50
 1479 0446 01       		.byte	0x1
 1480 0447 A704     		.2byte	0x4a7
 1481 0449 6B000000 		.4byte	0x6b
 1482 044d 4C010000 		.4byte	.LLST8
 1483 0451 10       		.uleb128 0x10
 1484 0452 D5010000 		.4byte	.LASF48
 1485 0456 01       		.byte	0x1
 1486 0457 AA04     		.2byte	0x4aa
 1487 0459 6B000000 		.4byte	0x6b
 1488 045d 86010000 		.4byte	.LLST9
 1489 0461 0A       		.uleb128 0xa
 1490 0462 0E000000 		.4byte	.LVL39
 1491 0466 AB030000 		.4byte	0x3ab
 1492 046a 00       		.byte	0
 1493 046b 12       		.uleb128 0x12
 1494 046c 04       		.byte	0x4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 55


 1495 046d 71040000 		.4byte	0x471
 1496 0471 13       		.uleb128 0x13
 1497 0472 6B000000 		.4byte	0x6b
 1498 0476 0C       		.uleb128 0xc
 1499 0477 59010000 		.4byte	.LASF51
 1500 047b 01       		.byte	0x1
 1501 047c CE04     		.2byte	0x4ce
 1502 047e 00000000 		.4byte	.LFB22
 1503 0482 20000000 		.4byte	.LFE22-.LFB22
 1504 0486 01       		.uleb128 0x1
 1505 0487 9C       		.byte	0x9c
 1506 0488 C8040000 		.4byte	0x4c8
 1507 048c 11       		.uleb128 0x11
 1508 048d 47000000 		.4byte	.LASF42
 1509 0491 01       		.byte	0x1
 1510 0492 CE04     		.2byte	0x4ce
 1511 0494 6B000000 		.4byte	0x6b
 1512 0498 C7010000 		.4byte	.LLST10
 1513 049c 0A       		.uleb128 0xa
 1514 049d 0C000000 		.4byte	.LVL46
 1515 04a1 AB030000 		.4byte	0x3ab
 1516 04a5 14       		.uleb128 0x14
 1517 04a6 12000000 		.4byte	.LVL47
 1518 04aa AB030000 		.4byte	0x3ab
 1519 04ae B8040000 		.4byte	0x4b8
 1520 04b2 15       		.uleb128 0x15
 1521 04b3 01       		.uleb128 0x1
 1522 04b4 50       		.byte	0x50
 1523 04b5 01       		.uleb128 0x1
 1524 04b6 3D       		.byte	0x3d
 1525 04b7 00       		.byte	0
 1526 04b8 16       		.uleb128 0x16
 1527 04b9 18000000 		.4byte	.LVL48
 1528 04bd AB030000 		.4byte	0x3ab
 1529 04c1 15       		.uleb128 0x15
 1530 04c2 01       		.uleb128 0x1
 1531 04c3 50       		.byte	0x50
 1532 04c4 01       		.uleb128 0x1
 1533 04c5 3A       		.byte	0x3a
 1534 04c6 00       		.byte	0
 1535 04c7 00       		.byte	0
 1536 04c8 0E       		.uleb128 0xe
 1537 04c9 C0000000 		.4byte	.LASF52
 1538 04cd 01       		.byte	0x1
 1539 04ce F904     		.2byte	0x4f9
 1540 04d0 6B000000 		.4byte	0x6b
 1541 04d4 00000000 		.4byte	.LFB23
 1542 04d8 24000000 		.4byte	.LFE23-.LFB23
 1543 04dc 01       		.uleb128 0x1
 1544 04dd 9C       		.byte	0x9c
 1545 04de F3040000 		.4byte	0x4f3
 1546 04e2 10       		.uleb128 0x10
 1547 04e3 BD010000 		.4byte	.LASF33
 1548 04e7 01       		.byte	0x1
 1549 04e8 FC04     		.2byte	0x4fc
 1550 04ea 6B000000 		.4byte	0x6b
 1551 04ee E8010000 		.4byte	.LLST11
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 56


 1552 04f2 00       		.byte	0
 1553 04f3 0C       		.uleb128 0xc
 1554 04f4 32030000 		.4byte	.LASF53
 1555 04f8 01       		.byte	0x1
 1556 04f9 4A05     		.2byte	0x54a
 1557 04fb 00000000 		.4byte	.LFB24
 1558 04ff 24000000 		.4byte	.LFE24-.LFB24
 1559 0503 01       		.uleb128 0x1
 1560 0504 9C       		.byte	0x9c
 1561 0505 2C050000 		.4byte	0x52c
 1562 0509 10       		.uleb128 0x10
 1563 050a 82030000 		.4byte	.LASF20
 1564 050e 01       		.byte	0x1
 1565 050f 4C05     		.2byte	0x54c
 1566 0511 6B000000 		.4byte	0x6b
 1567 0515 06020000 		.4byte	.LLST12
 1568 0519 0A       		.uleb128 0xa
 1569 051a 06000000 		.4byte	.LVL51
 1570 051e B5050000 		.4byte	0x5b5
 1571 0522 0A       		.uleb128 0xa
 1572 0523 1C000000 		.4byte	.LVL52
 1573 0527 C0050000 		.4byte	0x5c0
 1574 052b 00       		.byte	0
 1575 052c 0C       		.uleb128 0xc
 1576 052d 47030000 		.4byte	.LASF54
 1577 0531 01       		.byte	0x1
 1578 0532 A005     		.2byte	0x5a0
 1579 0534 00000000 		.4byte	.LFB25
 1580 0538 58000000 		.4byte	.LFE25-.LFB25
 1581 053c 01       		.uleb128 0x1
 1582 053d 9C       		.byte	0x9c
 1583 053e 7F050000 		.4byte	0x57f
 1584 0542 11       		.uleb128 0x11
 1585 0543 68010000 		.4byte	.LASF55
 1586 0547 01       		.byte	0x1
 1587 0548 A005     		.2byte	0x5a0
 1588 054a 6B000000 		.4byte	0x6b
 1589 054e 19020000 		.4byte	.LLST13
 1590 0552 17       		.uleb128 0x17
 1591 0553 06000000 		.4byte	.LBB2
 1592 0557 52000000 		.4byte	.LBE2-.LBB2
 1593 055b 10       		.uleb128 0x10
 1594 055c 0E020000 		.4byte	.LASF56
 1595 0560 01       		.byte	0x1
 1596 0561 A805     		.2byte	0x5a8
 1597 0563 6B000000 		.4byte	0x6b
 1598 0567 3A020000 		.4byte	.LLST14
 1599 056b 0F       		.uleb128 0xf
 1600 056c F1000000 		.4byte	.LASF57
 1601 0570 01       		.byte	0x1
 1602 0571 D005     		.2byte	0x5d0
 1603 0573 6B000000 		.4byte	0x6b
 1604 0577 05       		.uleb128 0x5
 1605 0578 03       		.byte	0x3
 1606 0579 01000000 		.4byte	txPeriod.4966
 1607 057d 00       		.byte	0
 1608 057e 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 57


 1609 057f 0C       		.uleb128 0xc
 1610 0580 3C020000 		.4byte	.LASF58
 1611 0584 01       		.byte	0x1
 1612 0585 2406     		.2byte	0x624
 1613 0587 00000000 		.4byte	.LFB26
 1614 058b 02000000 		.4byte	.LFE26-.LFB26
 1615 058f 01       		.uleb128 0x1
 1616 0590 9C       		.byte	0x9c
 1617 0591 A4050000 		.4byte	0x5a4
 1618 0595 0D       		.uleb128 0xd
 1619 0596 33010000 		.4byte	.LASF36
 1620 059a 01       		.byte	0x1
 1621 059b 2406     		.2byte	0x624
 1622 059d 6B000000 		.4byte	0x6b
 1623 05a1 01       		.uleb128 0x1
 1624 05a2 50       		.byte	0x50
 1625 05a3 00       		.byte	0
 1626 05a4 18       		.uleb128 0x18
 1627 05a5 58030000 		.4byte	.LASF63
 1628 05a9 01       		.byte	0x1
 1629 05aa 1B       		.byte	0x1b
 1630 05ab 6B000000 		.4byte	0x6b
 1631 05af 05       		.uleb128 0x5
 1632 05b0 03       		.byte	0x3
 1633 05b1 00000000 		.4byte	UART_2_initVar
 1634 05b5 19       		.uleb128 0x19
 1635 05b6 8F010000 		.4byte	.LASF64
 1636 05ba 03       		.byte	0x3
 1637 05bb 7E       		.byte	0x7e
 1638 05bc 6B000000 		.4byte	0x6b
 1639 05c0 1A       		.uleb128 0x1a
 1640 05c1 31000000 		.4byte	.LASF65
 1641 05c5 03       		.byte	0x3
 1642 05c6 7F       		.byte	0x7f
 1643 05c7 1B       		.uleb128 0x1b
 1644 05c8 6B000000 		.4byte	0x6b
 1645 05cc 00       		.byte	0
 1646 05cd 00       		.byte	0
 1647              		.section	.debug_abbrev,"",%progbits
 1648              	.Ldebug_abbrev0:
 1649 0000 01       		.uleb128 0x1
 1650 0001 11       		.uleb128 0x11
 1651 0002 01       		.byte	0x1
 1652 0003 25       		.uleb128 0x25
 1653 0004 0E       		.uleb128 0xe
 1654 0005 13       		.uleb128 0x13
 1655 0006 0B       		.uleb128 0xb
 1656 0007 03       		.uleb128 0x3
 1657 0008 0E       		.uleb128 0xe
 1658 0009 1B       		.uleb128 0x1b
 1659 000a 0E       		.uleb128 0xe
 1660 000b 55       		.uleb128 0x55
 1661 000c 17       		.uleb128 0x17
 1662 000d 11       		.uleb128 0x11
 1663 000e 01       		.uleb128 0x1
 1664 000f 10       		.uleb128 0x10
 1665 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 58


 1666 0011 00       		.byte	0
 1667 0012 00       		.byte	0
 1668 0013 02       		.uleb128 0x2
 1669 0014 24       		.uleb128 0x24
 1670 0015 00       		.byte	0
 1671 0016 0B       		.uleb128 0xb
 1672 0017 0B       		.uleb128 0xb
 1673 0018 3E       		.uleb128 0x3e
 1674 0019 0B       		.uleb128 0xb
 1675 001a 03       		.uleb128 0x3
 1676 001b 0E       		.uleb128 0xe
 1677 001c 00       		.byte	0
 1678 001d 00       		.byte	0
 1679 001e 03       		.uleb128 0x3
 1680 001f 24       		.uleb128 0x24
 1681 0020 00       		.byte	0
 1682 0021 0B       		.uleb128 0xb
 1683 0022 0B       		.uleb128 0xb
 1684 0023 3E       		.uleb128 0x3e
 1685 0024 0B       		.uleb128 0xb
 1686 0025 03       		.uleb128 0x3
 1687 0026 08       		.uleb128 0x8
 1688 0027 00       		.byte	0
 1689 0028 00       		.byte	0
 1690 0029 04       		.uleb128 0x4
 1691 002a 16       		.uleb128 0x16
 1692 002b 00       		.byte	0
 1693 002c 03       		.uleb128 0x3
 1694 002d 0E       		.uleb128 0xe
 1695 002e 3A       		.uleb128 0x3a
 1696 002f 0B       		.uleb128 0xb
 1697 0030 3B       		.uleb128 0x3b
 1698 0031 0B       		.uleb128 0xb
 1699 0032 49       		.uleb128 0x49
 1700 0033 13       		.uleb128 0x13
 1701 0034 00       		.byte	0
 1702 0035 00       		.byte	0
 1703 0036 05       		.uleb128 0x5
 1704 0037 16       		.uleb128 0x16
 1705 0038 00       		.byte	0
 1706 0039 03       		.uleb128 0x3
 1707 003a 0E       		.uleb128 0xe
 1708 003b 3A       		.uleb128 0x3a
 1709 003c 0B       		.uleb128 0xb
 1710 003d 3B       		.uleb128 0x3b
 1711 003e 05       		.uleb128 0x5
 1712 003f 49       		.uleb128 0x49
 1713 0040 13       		.uleb128 0x13
 1714 0041 00       		.byte	0
 1715 0042 00       		.byte	0
 1716 0043 06       		.uleb128 0x6
 1717 0044 35       		.uleb128 0x35
 1718 0045 00       		.byte	0
 1719 0046 49       		.uleb128 0x49
 1720 0047 13       		.uleb128 0x13
 1721 0048 00       		.byte	0
 1722 0049 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 59


 1723 004a 07       		.uleb128 0x7
 1724 004b 2E       		.uleb128 0x2e
 1725 004c 00       		.byte	0
 1726 004d 3F       		.uleb128 0x3f
 1727 004e 19       		.uleb128 0x19
 1728 004f 03       		.uleb128 0x3
 1729 0050 0E       		.uleb128 0xe
 1730 0051 3A       		.uleb128 0x3a
 1731 0052 0B       		.uleb128 0xb
 1732 0053 3B       		.uleb128 0x3b
 1733 0054 0B       		.uleb128 0xb
 1734 0055 27       		.uleb128 0x27
 1735 0056 19       		.uleb128 0x19
 1736 0057 11       		.uleb128 0x11
 1737 0058 01       		.uleb128 0x1
 1738 0059 12       		.uleb128 0x12
 1739 005a 06       		.uleb128 0x6
 1740 005b 40       		.uleb128 0x40
 1741 005c 18       		.uleb128 0x18
 1742 005d 9742     		.uleb128 0x2117
 1743 005f 19       		.uleb128 0x19
 1744 0060 00       		.byte	0
 1745 0061 00       		.byte	0
 1746 0062 08       		.uleb128 0x8
 1747 0063 2E       		.uleb128 0x2e
 1748 0064 01       		.byte	0x1
 1749 0065 3F       		.uleb128 0x3f
 1750 0066 19       		.uleb128 0x19
 1751 0067 03       		.uleb128 0x3
 1752 0068 0E       		.uleb128 0xe
 1753 0069 3A       		.uleb128 0x3a
 1754 006a 0B       		.uleb128 0xb
 1755 006b 3B       		.uleb128 0x3b
 1756 006c 0B       		.uleb128 0xb
 1757 006d 27       		.uleb128 0x27
 1758 006e 19       		.uleb128 0x19
 1759 006f 11       		.uleb128 0x11
 1760 0070 01       		.uleb128 0x1
 1761 0071 12       		.uleb128 0x12
 1762 0072 06       		.uleb128 0x6
 1763 0073 40       		.uleb128 0x40
 1764 0074 18       		.uleb128 0x18
 1765 0075 9742     		.uleb128 0x2117
 1766 0077 19       		.uleb128 0x19
 1767 0078 01       		.uleb128 0x1
 1768 0079 13       		.uleb128 0x13
 1769 007a 00       		.byte	0
 1770 007b 00       		.byte	0
 1771 007c 09       		.uleb128 0x9
 1772 007d 34       		.uleb128 0x34
 1773 007e 00       		.byte	0
 1774 007f 03       		.uleb128 0x3
 1775 0080 0E       		.uleb128 0xe
 1776 0081 3A       		.uleb128 0x3a
 1777 0082 0B       		.uleb128 0xb
 1778 0083 3B       		.uleb128 0x3b
 1779 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 60


 1780 0085 49       		.uleb128 0x49
 1781 0086 13       		.uleb128 0x13
 1782 0087 02       		.uleb128 0x2
 1783 0088 17       		.uleb128 0x17
 1784 0089 00       		.byte	0
 1785 008a 00       		.byte	0
 1786 008b 0A       		.uleb128 0xa
 1787 008c 898201   		.uleb128 0x4109
 1788 008f 00       		.byte	0
 1789 0090 11       		.uleb128 0x11
 1790 0091 01       		.uleb128 0x1
 1791 0092 31       		.uleb128 0x31
 1792 0093 13       		.uleb128 0x13
 1793 0094 00       		.byte	0
 1794 0095 00       		.byte	0
 1795 0096 0B       		.uleb128 0xb
 1796 0097 2E       		.uleb128 0x2e
 1797 0098 00       		.byte	0
 1798 0099 3F       		.uleb128 0x3f
 1799 009a 19       		.uleb128 0x19
 1800 009b 03       		.uleb128 0x3
 1801 009c 0E       		.uleb128 0xe
 1802 009d 3A       		.uleb128 0x3a
 1803 009e 0B       		.uleb128 0xb
 1804 009f 3B       		.uleb128 0x3b
 1805 00a0 05       		.uleb128 0x5
 1806 00a1 27       		.uleb128 0x27
 1807 00a2 19       		.uleb128 0x19
 1808 00a3 49       		.uleb128 0x49
 1809 00a4 13       		.uleb128 0x13
 1810 00a5 11       		.uleb128 0x11
 1811 00a6 01       		.uleb128 0x1
 1812 00a7 12       		.uleb128 0x12
 1813 00a8 06       		.uleb128 0x6
 1814 00a9 40       		.uleb128 0x40
 1815 00aa 18       		.uleb128 0x18
 1816 00ab 9742     		.uleb128 0x2117
 1817 00ad 19       		.uleb128 0x19
 1818 00ae 00       		.byte	0
 1819 00af 00       		.byte	0
 1820 00b0 0C       		.uleb128 0xc
 1821 00b1 2E       		.uleb128 0x2e
 1822 00b2 01       		.byte	0x1
 1823 00b3 3F       		.uleb128 0x3f
 1824 00b4 19       		.uleb128 0x19
 1825 00b5 03       		.uleb128 0x3
 1826 00b6 0E       		.uleb128 0xe
 1827 00b7 3A       		.uleb128 0x3a
 1828 00b8 0B       		.uleb128 0xb
 1829 00b9 3B       		.uleb128 0x3b
 1830 00ba 05       		.uleb128 0x5
 1831 00bb 27       		.uleb128 0x27
 1832 00bc 19       		.uleb128 0x19
 1833 00bd 11       		.uleb128 0x11
 1834 00be 01       		.uleb128 0x1
 1835 00bf 12       		.uleb128 0x12
 1836 00c0 06       		.uleb128 0x6
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 61


 1837 00c1 40       		.uleb128 0x40
 1838 00c2 18       		.uleb128 0x18
 1839 00c3 9742     		.uleb128 0x2117
 1840 00c5 19       		.uleb128 0x19
 1841 00c6 01       		.uleb128 0x1
 1842 00c7 13       		.uleb128 0x13
 1843 00c8 00       		.byte	0
 1844 00c9 00       		.byte	0
 1845 00ca 0D       		.uleb128 0xd
 1846 00cb 05       		.uleb128 0x5
 1847 00cc 00       		.byte	0
 1848 00cd 03       		.uleb128 0x3
 1849 00ce 0E       		.uleb128 0xe
 1850 00cf 3A       		.uleb128 0x3a
 1851 00d0 0B       		.uleb128 0xb
 1852 00d1 3B       		.uleb128 0x3b
 1853 00d2 05       		.uleb128 0x5
 1854 00d3 49       		.uleb128 0x49
 1855 00d4 13       		.uleb128 0x13
 1856 00d5 02       		.uleb128 0x2
 1857 00d6 18       		.uleb128 0x18
 1858 00d7 00       		.byte	0
 1859 00d8 00       		.byte	0
 1860 00d9 0E       		.uleb128 0xe
 1861 00da 2E       		.uleb128 0x2e
 1862 00db 01       		.byte	0x1
 1863 00dc 3F       		.uleb128 0x3f
 1864 00dd 19       		.uleb128 0x19
 1865 00de 03       		.uleb128 0x3
 1866 00df 0E       		.uleb128 0xe
 1867 00e0 3A       		.uleb128 0x3a
 1868 00e1 0B       		.uleb128 0xb
 1869 00e2 3B       		.uleb128 0x3b
 1870 00e3 05       		.uleb128 0x5
 1871 00e4 27       		.uleb128 0x27
 1872 00e5 19       		.uleb128 0x19
 1873 00e6 49       		.uleb128 0x49
 1874 00e7 13       		.uleb128 0x13
 1875 00e8 11       		.uleb128 0x11
 1876 00e9 01       		.uleb128 0x1
 1877 00ea 12       		.uleb128 0x12
 1878 00eb 06       		.uleb128 0x6
 1879 00ec 40       		.uleb128 0x40
 1880 00ed 18       		.uleb128 0x18
 1881 00ee 9742     		.uleb128 0x2117
 1882 00f0 19       		.uleb128 0x19
 1883 00f1 01       		.uleb128 0x1
 1884 00f2 13       		.uleb128 0x13
 1885 00f3 00       		.byte	0
 1886 00f4 00       		.byte	0
 1887 00f5 0F       		.uleb128 0xf
 1888 00f6 34       		.uleb128 0x34
 1889 00f7 00       		.byte	0
 1890 00f8 03       		.uleb128 0x3
 1891 00f9 0E       		.uleb128 0xe
 1892 00fa 3A       		.uleb128 0x3a
 1893 00fb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 62


 1894 00fc 3B       		.uleb128 0x3b
 1895 00fd 05       		.uleb128 0x5
 1896 00fe 49       		.uleb128 0x49
 1897 00ff 13       		.uleb128 0x13
 1898 0100 02       		.uleb128 0x2
 1899 0101 18       		.uleb128 0x18
 1900 0102 00       		.byte	0
 1901 0103 00       		.byte	0
 1902 0104 10       		.uleb128 0x10
 1903 0105 34       		.uleb128 0x34
 1904 0106 00       		.byte	0
 1905 0107 03       		.uleb128 0x3
 1906 0108 0E       		.uleb128 0xe
 1907 0109 3A       		.uleb128 0x3a
 1908 010a 0B       		.uleb128 0xb
 1909 010b 3B       		.uleb128 0x3b
 1910 010c 05       		.uleb128 0x5
 1911 010d 49       		.uleb128 0x49
 1912 010e 13       		.uleb128 0x13
 1913 010f 02       		.uleb128 0x2
 1914 0110 17       		.uleb128 0x17
 1915 0111 00       		.byte	0
 1916 0112 00       		.byte	0
 1917 0113 11       		.uleb128 0x11
 1918 0114 05       		.uleb128 0x5
 1919 0115 00       		.byte	0
 1920 0116 03       		.uleb128 0x3
 1921 0117 0E       		.uleb128 0xe
 1922 0118 3A       		.uleb128 0x3a
 1923 0119 0B       		.uleb128 0xb
 1924 011a 3B       		.uleb128 0x3b
 1925 011b 05       		.uleb128 0x5
 1926 011c 49       		.uleb128 0x49
 1927 011d 13       		.uleb128 0x13
 1928 011e 02       		.uleb128 0x2
 1929 011f 17       		.uleb128 0x17
 1930 0120 00       		.byte	0
 1931 0121 00       		.byte	0
 1932 0122 12       		.uleb128 0x12
 1933 0123 0F       		.uleb128 0xf
 1934 0124 00       		.byte	0
 1935 0125 0B       		.uleb128 0xb
 1936 0126 0B       		.uleb128 0xb
 1937 0127 49       		.uleb128 0x49
 1938 0128 13       		.uleb128 0x13
 1939 0129 00       		.byte	0
 1940 012a 00       		.byte	0
 1941 012b 13       		.uleb128 0x13
 1942 012c 26       		.uleb128 0x26
 1943 012d 00       		.byte	0
 1944 012e 49       		.uleb128 0x49
 1945 012f 13       		.uleb128 0x13
 1946 0130 00       		.byte	0
 1947 0131 00       		.byte	0
 1948 0132 14       		.uleb128 0x14
 1949 0133 898201   		.uleb128 0x4109
 1950 0136 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 63


 1951 0137 11       		.uleb128 0x11
 1952 0138 01       		.uleb128 0x1
 1953 0139 31       		.uleb128 0x31
 1954 013a 13       		.uleb128 0x13
 1955 013b 01       		.uleb128 0x1
 1956 013c 13       		.uleb128 0x13
 1957 013d 00       		.byte	0
 1958 013e 00       		.byte	0
 1959 013f 15       		.uleb128 0x15
 1960 0140 8A8201   		.uleb128 0x410a
 1961 0143 00       		.byte	0
 1962 0144 02       		.uleb128 0x2
 1963 0145 18       		.uleb128 0x18
 1964 0146 9142     		.uleb128 0x2111
 1965 0148 18       		.uleb128 0x18
 1966 0149 00       		.byte	0
 1967 014a 00       		.byte	0
 1968 014b 16       		.uleb128 0x16
 1969 014c 898201   		.uleb128 0x4109
 1970 014f 01       		.byte	0x1
 1971 0150 11       		.uleb128 0x11
 1972 0151 01       		.uleb128 0x1
 1973 0152 31       		.uleb128 0x31
 1974 0153 13       		.uleb128 0x13
 1975 0154 00       		.byte	0
 1976 0155 00       		.byte	0
 1977 0156 17       		.uleb128 0x17
 1978 0157 0B       		.uleb128 0xb
 1979 0158 01       		.byte	0x1
 1980 0159 11       		.uleb128 0x11
 1981 015a 01       		.uleb128 0x1
 1982 015b 12       		.uleb128 0x12
 1983 015c 06       		.uleb128 0x6
 1984 015d 00       		.byte	0
 1985 015e 00       		.byte	0
 1986 015f 18       		.uleb128 0x18
 1987 0160 34       		.uleb128 0x34
 1988 0161 00       		.byte	0
 1989 0162 03       		.uleb128 0x3
 1990 0163 0E       		.uleb128 0xe
 1991 0164 3A       		.uleb128 0x3a
 1992 0165 0B       		.uleb128 0xb
 1993 0166 3B       		.uleb128 0x3b
 1994 0167 0B       		.uleb128 0xb
 1995 0168 49       		.uleb128 0x49
 1996 0169 13       		.uleb128 0x13
 1997 016a 3F       		.uleb128 0x3f
 1998 016b 19       		.uleb128 0x19
 1999 016c 02       		.uleb128 0x2
 2000 016d 18       		.uleb128 0x18
 2001 016e 00       		.byte	0
 2002 016f 00       		.byte	0
 2003 0170 19       		.uleb128 0x19
 2004 0171 2E       		.uleb128 0x2e
 2005 0172 00       		.byte	0
 2006 0173 3F       		.uleb128 0x3f
 2007 0174 19       		.uleb128 0x19
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 64


 2008 0175 03       		.uleb128 0x3
 2009 0176 0E       		.uleb128 0xe
 2010 0177 3A       		.uleb128 0x3a
 2011 0178 0B       		.uleb128 0xb
 2012 0179 3B       		.uleb128 0x3b
 2013 017a 0B       		.uleb128 0xb
 2014 017b 27       		.uleb128 0x27
 2015 017c 19       		.uleb128 0x19
 2016 017d 49       		.uleb128 0x49
 2017 017e 13       		.uleb128 0x13
 2018 017f 3C       		.uleb128 0x3c
 2019 0180 19       		.uleb128 0x19
 2020 0181 00       		.byte	0
 2021 0182 00       		.byte	0
 2022 0183 1A       		.uleb128 0x1a
 2023 0184 2E       		.uleb128 0x2e
 2024 0185 01       		.byte	0x1
 2025 0186 3F       		.uleb128 0x3f
 2026 0187 19       		.uleb128 0x19
 2027 0188 03       		.uleb128 0x3
 2028 0189 0E       		.uleb128 0xe
 2029 018a 3A       		.uleb128 0x3a
 2030 018b 0B       		.uleb128 0xb
 2031 018c 3B       		.uleb128 0x3b
 2032 018d 0B       		.uleb128 0xb
 2033 018e 27       		.uleb128 0x27
 2034 018f 19       		.uleb128 0x19
 2035 0190 3C       		.uleb128 0x3c
 2036 0191 19       		.uleb128 0x19
 2037 0192 00       		.byte	0
 2038 0193 00       		.byte	0
 2039 0194 1B       		.uleb128 0x1b
 2040 0195 05       		.uleb128 0x5
 2041 0196 00       		.byte	0
 2042 0197 49       		.uleb128 0x49
 2043 0198 13       		.uleb128 0x13
 2044 0199 00       		.byte	0
 2045 019a 00       		.byte	0
 2046 019b 00       		.byte	0
 2047              		.section	.debug_loc,"",%progbits
 2048              	.Ldebug_loc0:
 2049              	.LLST0:
 2050 0000 06000000 		.4byte	.LVL0
 2051 0004 27000000 		.4byte	.LVL1-1
 2052 0008 0100     		.2byte	0x1
 2053 000a 50       		.byte	0x50
 2054 000b 00000000 		.4byte	0
 2055 000f 00000000 		.4byte	0
 2056              	.LLST1:
 2057 0013 06000000 		.4byte	.LVL4
 2058 0017 27000000 		.4byte	.LVL5-1
 2059 001b 0100     		.2byte	0x1
 2060 001d 50       		.byte	0x50
 2061 001e 00000000 		.4byte	0
 2062 0022 00000000 		.4byte	0
 2063              	.LLST2:
 2064 0026 04000000 		.4byte	.LVL9
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 65


 2065 002a 08000000 		.4byte	.LVL10
 2066 002e 0600     		.2byte	0x6
 2067 0030 70       		.byte	0x70
 2068 0031 00       		.sleb128 0
 2069 0032 08       		.byte	0x8
 2070 0033 7F       		.byte	0x7f
 2071 0034 1A       		.byte	0x1a
 2072 0035 9F       		.byte	0x9f
 2073 0036 00000000 		.4byte	0
 2074 003a 00000000 		.4byte	0
 2075              	.LLST3:
 2076 003e 00000000 		.4byte	.LVL11
 2077 0042 12000000 		.4byte	.LVL13
 2078 0046 0200     		.2byte	0x2
 2079 0048 30       		.byte	0x30
 2080 0049 9F       		.byte	0x9f
 2081 004a 12000000 		.4byte	.LVL13
 2082 004e 1A000000 		.4byte	.LVL14
 2083 0052 0100     		.2byte	0x1
 2084 0054 50       		.byte	0x50
 2085 0055 1A000000 		.4byte	.LVL14
 2086 0059 1E000000 		.4byte	.LVL15
 2087 005d 0200     		.2byte	0x2
 2088 005f 30       		.byte	0x30
 2089 0060 9F       		.byte	0x9f
 2090 0061 1E000000 		.4byte	.LVL15
 2091 0065 2C000000 		.4byte	.LFE9
 2092 0069 0100     		.2byte	0x1
 2093 006b 50       		.byte	0x50
 2094 006c 00000000 		.4byte	0
 2095 0070 00000000 		.4byte	0
 2096              	.LLST4:
 2097 0074 06000000 		.4byte	.LVL20
 2098 0078 1B000000 		.4byte	.LVL21-1
 2099 007c 0100     		.2byte	0x1
 2100 007e 50       		.byte	0x50
 2101 007f 00000000 		.4byte	0
 2102 0083 00000000 		.4byte	0
 2103              	.LLST5:
 2104 0087 00000000 		.4byte	.LVL28
 2105 008b 0A000000 		.4byte	.LVL30
 2106 008f 0100     		.2byte	0x1
 2107 0091 50       		.byte	0x50
 2108 0092 0A000000 		.4byte	.LVL30
 2109 0096 14000000 		.4byte	.LVL34
 2110 009a 0100     		.2byte	0x1
 2111 009c 55       		.byte	0x55
 2112 009d 14000000 		.4byte	.LVL34
 2113 00a1 18000000 		.4byte	.LVL35
 2114 00a5 0100     		.2byte	0x1
 2115 00a7 50       		.byte	0x50
 2116 00a8 18000000 		.4byte	.LVL35
 2117 00ac 20000000 		.4byte	.LVL36
 2118 00b0 0100     		.2byte	0x1
 2119 00b2 55       		.byte	0x55
 2120 00b3 20000000 		.4byte	.LVL36
 2121 00b7 24000000 		.4byte	.LFE20
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 66


 2122 00bb 0400     		.2byte	0x4
 2123 00bd F3       		.byte	0xf3
 2124 00be 01       		.uleb128 0x1
 2125 00bf 50       		.byte	0x50
 2126 00c0 9F       		.byte	0x9f
 2127 00c1 00000000 		.4byte	0
 2128 00c5 00000000 		.4byte	0
 2129              	.LLST6:
 2130 00c9 02000000 		.4byte	.LVL29
 2131 00cd 0A000000 		.4byte	.LVL30
 2132 00d1 0200     		.2byte	0x2
 2133 00d3 30       		.byte	0x30
 2134 00d4 9F       		.byte	0x9f
 2135 00d5 0A000000 		.4byte	.LVL30
 2136 00d9 10000000 		.4byte	.LVL32
 2137 00dd 0100     		.2byte	0x1
 2138 00df 54       		.byte	0x54
 2139 00e0 12000000 		.4byte	.LVL33
 2140 00e4 14000000 		.4byte	.LVL34
 2141 00e8 0100     		.2byte	0x1
 2142 00ea 54       		.byte	0x54
 2143 00eb 14000000 		.4byte	.LVL34
 2144 00ef 18000000 		.4byte	.LVL35
 2145 00f3 0200     		.2byte	0x2
 2146 00f5 30       		.byte	0x30
 2147 00f6 9F       		.byte	0x9f
 2148 00f7 18000000 		.4byte	.LVL35
 2149 00fb 20000000 		.4byte	.LVL36
 2150 00ff 0100     		.2byte	0x1
 2151 0101 54       		.byte	0x54
 2152 0102 00000000 		.4byte	0
 2153 0106 00000000 		.4byte	0
 2154              	.LLST7:
 2155 010a 00000000 		.4byte	.LVL37
 2156 010e 08000000 		.4byte	.LVL38
 2157 0112 0100     		.2byte	0x1
 2158 0114 50       		.byte	0x50
 2159 0115 08000000 		.4byte	.LVL38
 2160 0119 14000000 		.4byte	.LVL42
 2161 011d 0100     		.2byte	0x1
 2162 011f 56       		.byte	0x56
 2163 0120 14000000 		.4byte	.LVL42
 2164 0124 1C000000 		.4byte	.LVL43
 2165 0128 0100     		.2byte	0x1
 2166 012a 50       		.byte	0x50
 2167 012b 1C000000 		.4byte	.LVL43
 2168 012f 22000000 		.4byte	.LVL44
 2169 0133 0100     		.2byte	0x1
 2170 0135 56       		.byte	0x56
 2171 0136 22000000 		.4byte	.LVL44
 2172 013a 28000000 		.4byte	.LFE21
 2173 013e 0400     		.2byte	0x4
 2174 0140 F3       		.byte	0xf3
 2175 0141 01       		.uleb128 0x1
 2176 0142 50       		.byte	0x50
 2177 0143 9F       		.byte	0x9f
 2178 0144 00000000 		.4byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 67


 2179 0148 00000000 		.4byte	0
 2180              	.LLST8:
 2181 014c 00000000 		.4byte	.LVL37
 2182 0150 08000000 		.4byte	.LVL38
 2183 0154 0100     		.2byte	0x1
 2184 0156 51       		.byte	0x51
 2185 0157 08000000 		.4byte	.LVL38
 2186 015b 14000000 		.4byte	.LVL42
 2187 015f 0400     		.2byte	0x4
 2188 0161 F3       		.byte	0xf3
 2189 0162 01       		.uleb128 0x1
 2190 0163 51       		.byte	0x51
 2191 0164 9F       		.byte	0x9f
 2192 0165 14000000 		.4byte	.LVL42
 2193 0169 1C000000 		.4byte	.LVL43
 2194 016d 0100     		.2byte	0x1
 2195 016f 51       		.byte	0x51
 2196 0170 1C000000 		.4byte	.LVL43
 2197 0174 28000000 		.4byte	.LFE21
 2198 0178 0400     		.2byte	0x4
 2199 017a F3       		.byte	0xf3
 2200 017b 01       		.uleb128 0x1
 2201 017c 51       		.byte	0x51
 2202 017d 9F       		.byte	0x9f
 2203 017e 00000000 		.4byte	0
 2204 0182 00000000 		.4byte	0
 2205              	.LLST9:
 2206 0186 00000000 		.4byte	.LVL37
 2207 018a 08000000 		.4byte	.LVL38
 2208 018e 0200     		.2byte	0x2
 2209 0190 30       		.byte	0x30
 2210 0191 9F       		.byte	0x9f
 2211 0192 08000000 		.4byte	.LVL38
 2212 0196 10000000 		.4byte	.LVL40
 2213 019a 0100     		.2byte	0x1
 2214 019c 54       		.byte	0x54
 2215 019d 12000000 		.4byte	.LVL41
 2216 01a1 14000000 		.4byte	.LVL42
 2217 01a5 0100     		.2byte	0x1
 2218 01a7 54       		.byte	0x54
 2219 01a8 14000000 		.4byte	.LVL42
 2220 01ac 1C000000 		.4byte	.LVL43
 2221 01b0 0200     		.2byte	0x2
 2222 01b2 30       		.byte	0x30
 2223 01b3 9F       		.byte	0x9f
 2224 01b4 1C000000 		.4byte	.LVL43
 2225 01b8 22000000 		.4byte	.LVL44
 2226 01bc 0100     		.2byte	0x1
 2227 01be 54       		.byte	0x54
 2228 01bf 00000000 		.4byte	0
 2229 01c3 00000000 		.4byte	0
 2230              	.LLST10:
 2231 01c7 00000000 		.4byte	.LVL45
 2232 01cb 0B000000 		.4byte	.LVL46-1
 2233 01cf 0100     		.2byte	0x1
 2234 01d1 50       		.byte	0x50
 2235 01d2 0B000000 		.4byte	.LVL46-1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 68


 2236 01d6 20000000 		.4byte	.LFE22
 2237 01da 0400     		.2byte	0x4
 2238 01dc F3       		.byte	0xf3
 2239 01dd 01       		.uleb128 0x1
 2240 01de 50       		.byte	0x50
 2241 01df 9F       		.byte	0x9f
 2242 01e0 00000000 		.4byte	0
 2243 01e4 00000000 		.4byte	0
 2244              	.LLST11:
 2245 01e8 06000000 		.4byte	.LVL49
 2246 01ec 1C000000 		.4byte	.LVL50
 2247 01f0 0100     		.2byte	0x1
 2248 01f2 53       		.byte	0x53
 2249 01f3 1C000000 		.4byte	.LVL50
 2250 01f7 24000000 		.4byte	.LFE23
 2251 01fb 0100     		.2byte	0x1
 2252 01fd 50       		.byte	0x50
 2253 01fe 00000000 		.4byte	0
 2254 0202 00000000 		.4byte	0
 2255              	.LLST12:
 2256 0206 06000000 		.4byte	.LVL51
 2257 020a 1B000000 		.4byte	.LVL52-1
 2258 020e 0100     		.2byte	0x1
 2259 0210 50       		.byte	0x50
 2260 0211 00000000 		.4byte	0
 2261 0215 00000000 		.4byte	0
 2262              	.LLST13:
 2263 0219 00000000 		.4byte	.LVL53
 2264 021d 3C000000 		.4byte	.LVL58
 2265 0221 0100     		.2byte	0x1
 2266 0223 50       		.byte	0x50
 2267 0224 3C000000 		.4byte	.LVL58
 2268 0228 58000000 		.4byte	.LFE25
 2269 022c 0400     		.2byte	0x4
 2270 022e F3       		.byte	0xf3
 2271 022f 01       		.uleb128 0x1
 2272 0230 50       		.byte	0x50
 2273 0231 9F       		.byte	0x9f
 2274 0232 00000000 		.4byte	0
 2275 0236 00000000 		.4byte	0
 2276              	.LLST14:
 2277 023a 22000000 		.4byte	.LVL54
 2278 023e 28000000 		.4byte	.LVL55
 2279 0242 0100     		.2byte	0x1
 2280 0244 53       		.byte	0x53
 2281 0245 34000000 		.4byte	.LVL56
 2282 0249 3A000000 		.4byte	.LVL57
 2283 024d 0100     		.2byte	0x1
 2284 024f 53       		.byte	0x53
 2285 0250 00000000 		.4byte	0
 2286 0254 00000000 		.4byte	0
 2287              		.section	.debug_aranges,"",%progbits
 2288 0000 EC000000 		.4byte	0xec
 2289 0004 0200     		.2byte	0x2
 2290 0006 00000000 		.4byte	.Ldebug_info0
 2291 000a 04       		.byte	0x4
 2292 000b 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 69


 2293 000c 0000     		.2byte	0
 2294 000e 0000     		.2byte	0
 2295 0010 00000000 		.4byte	.LFB1
 2296 0014 24000000 		.4byte	.LFE1-.LFB1
 2297 0018 00000000 		.4byte	.LFB2
 2298 001c 30000000 		.4byte	.LFE2-.LFB2
 2299 0020 00000000 		.4byte	.LFB0
 2300 0024 1C000000 		.4byte	.LFE0-.LFB0
 2301 0028 00000000 		.4byte	.LFB3
 2302 002c 30000000 		.4byte	.LFE3-.LFB3
 2303 0030 00000000 		.4byte	.LFB4
 2304 0034 04000000 		.4byte	.LFE4-.LFB4
 2305 0038 00000000 		.4byte	.LFB5
 2306 003c 02000000 		.4byte	.LFE5-.LFB5
 2307 0040 00000000 		.4byte	.LFB6
 2308 0044 0C000000 		.4byte	.LFE6-.LFB6
 2309 0048 00000000 		.4byte	.LFB7
 2310 004c 0C000000 		.4byte	.LFE7-.LFB7
 2311 0050 00000000 		.4byte	.LFB8
 2312 0054 10000000 		.4byte	.LFE8-.LFB8
 2313 0058 00000000 		.4byte	.LFB9
 2314 005c 2C000000 		.4byte	.LFE9-.LFB9
 2315 0060 00000000 		.4byte	.LFB10
 2316 0064 12000000 		.4byte	.LFE10-.LFB10
 2317 0068 00000000 		.4byte	.LFB11
 2318 006c 18000000 		.4byte	.LFE11-.LFB11
 2319 0070 00000000 		.4byte	.LFB12
 2320 0074 24000000 		.4byte	.LFE12-.LFB12
 2321 0078 00000000 		.4byte	.LFB13
 2322 007c 02000000 		.4byte	.LFE13-.LFB13
 2323 0080 00000000 		.4byte	.LFB14
 2324 0084 0C000000 		.4byte	.LFE14-.LFB14
 2325 0088 00000000 		.4byte	.LFB15
 2326 008c 0C000000 		.4byte	.LFE15-.LFB15
 2327 0090 00000000 		.4byte	.LFB16
 2328 0094 0C000000 		.4byte	.LFE16-.LFB16
 2329 0098 00000000 		.4byte	.LFB17
 2330 009c 14000000 		.4byte	.LFE17-.LFB17
 2331 00a0 00000000 		.4byte	.LFB18
 2332 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2333 00a8 00000000 		.4byte	.LFB19
 2334 00ac 18000000 		.4byte	.LFE19-.LFB19
 2335 00b0 00000000 		.4byte	.LFB20
 2336 00b4 24000000 		.4byte	.LFE20-.LFB20
 2337 00b8 00000000 		.4byte	.LFB21
 2338 00bc 28000000 		.4byte	.LFE21-.LFB21
 2339 00c0 00000000 		.4byte	.LFB22
 2340 00c4 20000000 		.4byte	.LFE22-.LFB22
 2341 00c8 00000000 		.4byte	.LFB23
 2342 00cc 24000000 		.4byte	.LFE23-.LFB23
 2343 00d0 00000000 		.4byte	.LFB24
 2344 00d4 24000000 		.4byte	.LFE24-.LFB24
 2345 00d8 00000000 		.4byte	.LFB25
 2346 00dc 58000000 		.4byte	.LFE25-.LFB25
 2347 00e0 00000000 		.4byte	.LFB26
 2348 00e4 02000000 		.4byte	.LFE26-.LFB26
 2349 00e8 00000000 		.4byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 70


 2350 00ec 00000000 		.4byte	0
 2351              		.section	.debug_ranges,"",%progbits
 2352              	.Ldebug_ranges0:
 2353 0000 00000000 		.4byte	.LFB1
 2354 0004 24000000 		.4byte	.LFE1
 2355 0008 00000000 		.4byte	.LFB2
 2356 000c 30000000 		.4byte	.LFE2
 2357 0010 00000000 		.4byte	.LFB0
 2358 0014 1C000000 		.4byte	.LFE0
 2359 0018 00000000 		.4byte	.LFB3
 2360 001c 30000000 		.4byte	.LFE3
 2361 0020 00000000 		.4byte	.LFB4
 2362 0024 04000000 		.4byte	.LFE4
 2363 0028 00000000 		.4byte	.LFB5
 2364 002c 02000000 		.4byte	.LFE5
 2365 0030 00000000 		.4byte	.LFB6
 2366 0034 0C000000 		.4byte	.LFE6
 2367 0038 00000000 		.4byte	.LFB7
 2368 003c 0C000000 		.4byte	.LFE7
 2369 0040 00000000 		.4byte	.LFB8
 2370 0044 10000000 		.4byte	.LFE8
 2371 0048 00000000 		.4byte	.LFB9
 2372 004c 2C000000 		.4byte	.LFE9
 2373 0050 00000000 		.4byte	.LFB10
 2374 0054 12000000 		.4byte	.LFE10
 2375 0058 00000000 		.4byte	.LFB11
 2376 005c 18000000 		.4byte	.LFE11
 2377 0060 00000000 		.4byte	.LFB12
 2378 0064 24000000 		.4byte	.LFE12
 2379 0068 00000000 		.4byte	.LFB13
 2380 006c 02000000 		.4byte	.LFE13
 2381 0070 00000000 		.4byte	.LFB14
 2382 0074 0C000000 		.4byte	.LFE14
 2383 0078 00000000 		.4byte	.LFB15
 2384 007c 0C000000 		.4byte	.LFE15
 2385 0080 00000000 		.4byte	.LFB16
 2386 0084 0C000000 		.4byte	.LFE16
 2387 0088 00000000 		.4byte	.LFB17
 2388 008c 14000000 		.4byte	.LFE17
 2389 0090 00000000 		.4byte	.LFB18
 2390 0094 0C000000 		.4byte	.LFE18
 2391 0098 00000000 		.4byte	.LFB19
 2392 009c 18000000 		.4byte	.LFE19
 2393 00a0 00000000 		.4byte	.LFB20
 2394 00a4 24000000 		.4byte	.LFE20
 2395 00a8 00000000 		.4byte	.LFB21
 2396 00ac 28000000 		.4byte	.LFE21
 2397 00b0 00000000 		.4byte	.LFB22
 2398 00b4 20000000 		.4byte	.LFE22
 2399 00b8 00000000 		.4byte	.LFB23
 2400 00bc 24000000 		.4byte	.LFE23
 2401 00c0 00000000 		.4byte	.LFB24
 2402 00c4 24000000 		.4byte	.LFE24
 2403 00c8 00000000 		.4byte	.LFB25
 2404 00cc 58000000 		.4byte	.LFE25
 2405 00d0 00000000 		.4byte	.LFB26
 2406 00d4 02000000 		.4byte	.LFE26
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 71


 2407 00d8 00000000 		.4byte	0
 2408 00dc 00000000 		.4byte	0
 2409              		.section	.debug_line,"",%progbits
 2410              	.Ldebug_line0:
 2411 0000 A9020000 		.section	.debug_str,"MS",%progbits,1
 2411      02005000 
 2411      00000201 
 2411      FB0E0D00 
 2411      01010101 
 2412              	.LASF37:
 2413 0000 55415254 		.ascii	"UART_2_SetRxAddress1\000"
 2413      5F325F53 
 2413      65745278 
 2413      41646472 
 2413      65737331 
 2414              	.LASF39:
 2415 0015 55415254 		.ascii	"UART_2_SetRxAddress2\000"
 2415      5F325F53 
 2415      65745278 
 2415      41646472 
 2415      65737332 
 2416              	.LASF10:
 2417 002a 75696E74 		.ascii	"uint16\000"
 2417      313600
 2418              	.LASF65:
 2419 0031 43794578 		.ascii	"CyExitCriticalSection\000"
 2419      69744372 
 2419      69746963 
 2419      616C5365 
 2419      6374696F 
 2420              	.LASF42:
 2421 0047 74784461 		.ascii	"txDataByte\000"
 2421      74614279 
 2421      746500
 2422              	.LASF46:
 2423 0052 55415254 		.ascii	"UART_2_PutString\000"
 2423      5F325F50 
 2423      75745374 
 2423      72696E67 
 2423      00
 2424              	.LASF47:
 2425 0063 73747269 		.ascii	"string\000"
 2425      6E6700
 2426              	.LASF60:
 2427 006a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_2.c\000"
 2427      6E657261 
 2427      7465645F 
 2427      536F7572 
 2427      63655C50 
 2428              	.LASF7:
 2429 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2429      206C6F6E 
 2429      6720756E 
 2429      7369676E 
 2429      65642069 
 2430              	.LASF29:
 2431 00a3 55415254 		.ascii	"UART_2_GetChar\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 72


 2431      5F325F47 
 2431      65744368 
 2431      617200
 2432              	.LASF17:
 2433 00b2 55415254 		.ascii	"UART_2_Enable\000"
 2433      5F325F45 
 2433      6E61626C 
 2433      6500
 2434              	.LASF52:
 2435 00c0 55415254 		.ascii	"UART_2_GetTxBufferSize\000"
 2435      5F325F47 
 2435      65745478 
 2435      42756666 
 2435      65725369 
 2436              	.LASF6:
 2437 00d7 6C6F6E67 		.ascii	"long long int\000"
 2437      206C6F6E 
 2437      6720696E 
 2437      7400
 2438              	.LASF0:
 2439 00e5 7369676E 		.ascii	"signed char\000"
 2439      65642063 
 2439      68617200 
 2440              	.LASF57:
 2441 00f1 74785065 		.ascii	"txPeriod\000"
 2441      72696F64 
 2441      00
 2442              	.LASF44:
 2443 00fa 55415254 		.ascii	"UART_2_ReadTxStatus\000"
 2443      5F325F52 
 2443      65616454 
 2443      78537461 
 2443      74757300 
 2444              	.LASF45:
 2445 010e 55415254 		.ascii	"UART_2_PutChar\000"
 2445      5F325F50 
 2445      75744368 
 2445      617200
 2446              	.LASF4:
 2447 011d 6C6F6E67 		.ascii	"long int\000"
 2447      20696E74 
 2447      00
 2448              	.LASF9:
 2449 0126 75696E74 		.ascii	"uint8\000"
 2449      3800
 2450              	.LASF12:
 2451 012c 646F7562 		.ascii	"double\000"
 2451      6C6500
 2452              	.LASF36:
 2453 0133 61646472 		.ascii	"addressMode\000"
 2453      6573734D 
 2453      6F646500 
 2454              	.LASF23:
 2455 013f 636F6E74 		.ascii	"control\000"
 2455      726F6C00 
 2456              	.LASF26:
 2457 0147 55415254 		.ascii	"UART_2_ReadRxData\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 73


 2457      5F325F52 
 2457      65616452 
 2457      78446174 
 2457      6100
 2458              	.LASF51:
 2459 0159 55415254 		.ascii	"UART_2_PutCRLF\000"
 2459      5F325F50 
 2459      75744352 
 2459      4C4600
 2460              	.LASF55:
 2461 0168 7265744D 		.ascii	"retMode\000"
 2461      6F646500 
 2462              	.LASF8:
 2463 0170 756E7369 		.ascii	"unsigned int\000"
 2463      676E6564 
 2463      20696E74 
 2463      00
 2464              	.LASF5:
 2465 017d 6C6F6E67 		.ascii	"long unsigned int\000"
 2465      20756E73 
 2465      69676E65 
 2465      6420696E 
 2465      7400
 2466              	.LASF64:
 2467 018f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2467      74657243 
 2467      72697469 
 2467      63616C53 
 2467      65637469 
 2468              	.LASF32:
 2469 01a6 55415254 		.ascii	"UART_2_GetRxBufferSize\000"
 2469      5F325F47 
 2469      65745278 
 2469      42756666 
 2469      65725369 
 2470              	.LASF33:
 2471 01bd 73697A65 		.ascii	"size\000"
 2471      00
 2472              	.LASF3:
 2473 01c2 73686F72 		.ascii	"short unsigned int\000"
 2473      7420756E 
 2473      7369676E 
 2473      65642069 
 2473      6E7400
 2474              	.LASF48:
 2475 01d5 62756649 		.ascii	"bufIndex\000"
 2475      6E646578 
 2475      00
 2476              	.LASF34:
 2477 01de 55415254 		.ascii	"UART_2_ClearRxBuffer\000"
 2477      5F325F43 
 2477      6C656172 
 2477      52784275 
 2477      66666572 
 2478              	.LASF24:
 2479 01f3 696E7453 		.ascii	"intSrc\000"
 2479      726300
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 74


 2480              	.LASF27:
 2481 01fa 55415254 		.ascii	"UART_2_ReadRxStatus\000"
 2481      5F325F52 
 2481      65616452 
 2481      78537461 
 2481      74757300 
 2482              	.LASF56:
 2483 020e 746D7053 		.ascii	"tmpStat\000"
 2483      74617400 
 2484              	.LASF16:
 2485 0216 73697A65 		.ascii	"sizetype\000"
 2485      74797065 
 2485      00
 2486              	.LASF38:
 2487 021f 61646472 		.ascii	"address\000"
 2487      65737300 
 2488              	.LASF30:
 2489 0227 72785374 		.ascii	"rxStatus\000"
 2489      61747573 
 2489      00
 2490              	.LASF19:
 2491 0230 55415254 		.ascii	"UART_2_Stop\000"
 2491      5F325F53 
 2491      746F7000 
 2492              	.LASF58:
 2493 023c 55415254 		.ascii	"UART_2_SetTxAddressMode\000"
 2493      5F325F53 
 2493      65745478 
 2493      41646472 
 2493      6573734D 
 2494              	.LASF11:
 2495 0254 666C6F61 		.ascii	"float\000"
 2495      7400
 2496              	.LASF31:
 2497 025a 55415254 		.ascii	"UART_2_GetByte\000"
 2497      5F325F47 
 2497      65744279 
 2497      746500
 2498              	.LASF22:
 2499 0269 55415254 		.ascii	"UART_2_SetRxInterruptMode\000"
 2499      5F325F53 
 2499      65745278 
 2499      496E7465 
 2499      72727570 
 2500              	.LASF15:
 2501 0283 72656738 		.ascii	"reg8\000"
 2501      00
 2502              	.LASF1:
 2503 0288 756E7369 		.ascii	"unsigned char\000"
 2503      676E6564 
 2503      20636861 
 2503      7200
 2504              	.LASF2:
 2505 0296 73686F72 		.ascii	"short int\000"
 2505      7420696E 
 2505      7400
 2506              	.LASF61:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 75


 2507 02a0 433A5C46 		.ascii	"C:\\FlexSEA_alx87grd\\execute\\execute_1_0.cydsn\000"
 2507      6C657853 
 2507      45415F61 
 2507      6C783837 
 2507      6772645C 
 2508              	.LASF49:
 2509 02ce 55415254 		.ascii	"UART_2_PutArray\000"
 2509      5F325F50 
 2509      75744172 
 2509      72617900 
 2510              	.LASF50:
 2511 02de 62797465 		.ascii	"byteCount\000"
 2511      436F756E 
 2511      7400
 2512              	.LASF41:
 2513 02e8 55415254 		.ascii	"UART_2_WriteTxData\000"
 2513      5F325F57 
 2513      72697465 
 2513      54784461 
 2513      746100
 2514              	.LASF25:
 2515 02fb 72784461 		.ascii	"rxData\000"
 2515      746100
 2516              	.LASF18:
 2517 0302 55415254 		.ascii	"UART_2_Start\000"
 2517      5F325F53 
 2517      74617274 
 2517      00
 2518              	.LASF14:
 2519 030f 63686172 		.ascii	"char\000"
 2519      00
 2520              	.LASF35:
 2521 0314 55415254 		.ascii	"UART_2_SetRxAddressMode\000"
 2521      5F325F53 
 2521      65745278 
 2521      41646472 
 2521      6573734D 
 2522              	.LASF13:
 2523 032c 63686172 		.ascii	"char8\000"
 2523      3800
 2524              	.LASF53:
 2525 0332 55415254 		.ascii	"UART_2_ClearTxBuffer\000"
 2525      5F325F43 
 2525      6C656172 
 2525      54784275 
 2525      66666572 
 2526              	.LASF54:
 2527 0347 55415254 		.ascii	"UART_2_SendBreak\000"
 2527      5F325F53 
 2527      656E6442 
 2527      7265616B 
 2527      00
 2528              	.LASF63:
 2529 0358 55415254 		.ascii	"UART_2_initVar\000"
 2529      5F325F69 
 2529      6E697456 
 2529      617200
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccZoAPAe.s 			page 76


 2530              	.LASF43:
 2531 0367 55415254 		.ascii	"UART_2_ReadControlRegister\000"
 2531      5F325F52 
 2531      65616443 
 2531      6F6E7472 
 2531      6F6C5265 
 2532              	.LASF20:
 2533 0382 656E6162 		.ascii	"enableInterrupts\000"
 2533      6C65496E 
 2533      74657272 
 2533      75707473 
 2533      00
 2534              	.LASF21:
 2535 0393 55415254 		.ascii	"UART_2_WriteControlRegister\000"
 2535      5F325F57 
 2535      72697465 
 2535      436F6E74 
 2535      726F6C52 
 2536              	.LASF28:
 2537 03af 73746174 		.ascii	"status\000"
 2537      757300
 2538              	.LASF59:
 2539 03b6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2539      4320342E 
 2539      392E3320 
 2539      32303135 
 2539      30333033 
 2540 03e9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2540      20726576 
 2540      6973696F 
 2540      6E203232 
 2540      31323230 
 2541 041c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2541      66756E63 
 2541      74696F6E 
 2541      2D736563 
 2541      74696F6E 
 2542              	.LASF40:
 2543 0444 55415254 		.ascii	"UART_2_SetTxInterruptMode\000"
 2543      5F325F53 
 2543      65745478 
 2543      496E7465 
 2543      72727570 
 2544              	.LASF62:
 2545 045e 55415254 		.ascii	"UART_2_Init\000"
 2545      5F325F49 
 2545      6E697400 
 2546              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
